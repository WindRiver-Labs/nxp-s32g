From 10d61288062fbd6e77f676c85fb172e37ae23fab Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 24 May 2021 11:41:47 +0300
Subject: [PATCH 06/10] Revert "llce-can: Add compatibility with LLCE firmware
 1.0.1 CD1"

commit c09fb6e611002dc29540562bcb473768a2573b09 from
https://source.codeaurora.org/external/autobsps32/linux

This reverts commit 30abea9a63d8438c3f19a28cc5ea184c11aaa669.

Upstream-Status: pending

Issue: ALB-7205
Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/mailbox/llce-mailbox.c                | 12 +---
 drivers/mfd/llce-core.c                       |  2 +-
 drivers/net/can/llce_can.c                    |  9 +--
 include/linux/mailbox/nxp-llce/llce_can.h     | 47 +++-----------
 .../mailbox/nxp-llce/llce_fw_interface.h      | 61 +++----------------
 .../mailbox/nxp-llce/llce_interface_config.h  | 28 +++++++--
 6 files changed, 44 insertions(+), 115 deletions(-)

diff --git a/drivers/mailbox/llce-mailbox.c b/drivers/mailbox/llce-mailbox.c
index 67eec61d8d0b..27ddacbc95ca 100644
--- a/drivers/mailbox/llce-mailbox.c
+++ b/drivers/mailbox/llce-mailbox.c
@@ -119,14 +119,8 @@ const char *llce_errors[] = {
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_CRCERR),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_BIT0ERR),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_BIT1ERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_DPBIT1ERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_DPBIT0ERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_DPSTFERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_DPFRMERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_DPCRCERR),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_FRMERR),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_STFERR),
-	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_TDCFAIL),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_BCAN_RXFIFO_OVERRUN),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_DATA_LOST),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_TXLUT_FULL),
@@ -195,8 +189,6 @@ const char *llce_errors[] = {
 	LLCE_ERROR_ENTRY(LLCE_ERROR_NO_MB_TO_ABORT),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_INDEX_NOT_RECOVERED),
 	LLCE_ERROR_ENTRY(LLCE_ERROR_RESET_PENDING),
-	LLCE_ERROR_ENTRY(LLCE_NOTIF_BUSOFF_AUTO_RECOVERY_PENDING),
-	LLCE_ERROR_ENTRY(LLCE_NOTIF_BUSOFF_DONE),
 };
 
 const char *llce_modules[] = {
@@ -965,9 +957,7 @@ static void process_channel_err(struct llce_mb *mb,
 	/**
 	 * Limit ACK and bit error flooding
 	 */
-	if (err == LLCE_ERROR_BCAN_ACKERR || err == LLCE_ERROR_BCAN_BIT0ERR
-	    || err == LLCE_NOTIF_BUSOFF_DONE
-	    || err == LLCE_NOTIF_BUSOFF_AUTO_RECOVERY_PENDING)
+	if (err == LLCE_ERROR_BCAN_ACKERR || err == LLCE_ERROR_BCAN_BIT0ERR)
 		net_warn_ratelimited("%s: Error module:%s Error:%s HW module:%d\n",
 			 dev_name(mb->controller.dev),
 			 get_module_name(module_id), get_error_name(err),
diff --git a/drivers/mfd/llce-core.c b/drivers/mfd/llce-core.c
index cb50f6fe5288..5641c82d2a6b 100644
--- a/drivers/mfd/llce-core.c
+++ b/drivers/mfd/llce-core.c
@@ -1,5 +1,5 @@
 // SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
-/* Copyright 2020-2021 NXP */
+/* Copyright 2020 NXP */
 #include <linux/clk.h>
 #include <linux/firmware.h>
 #include <linux/genalloc.h>
diff --git a/drivers/net/can/llce_can.c b/drivers/net/can/llce_can.c
index a72ef87de139..5fcda771fa0a 100644
--- a/drivers/net/can/llce_can.c
+++ b/drivers/net/can/llce_can.c
@@ -112,8 +112,7 @@ static int llce_can_init(struct llce_can *llce)
 	struct llce_can_command cmd = {
 		.cmd_id = LLCE_CAN_CMD_INIT,
 		.cmd_list.init = {
-			.ctrl_config = LLCE_CAN_CONTROLLERCONFIG_CTRL_EN
-			    | LLCE_CAN_CONTROLLERCONFIG_ABR_EN,
+			.ctrl_config = LLCE_CAN_CONTROLLERCONFIG_CTRL_EN,
 			.tx_mb_count = LLCE_CAN_MAX_TX_MB,
 		},
 	};
@@ -457,10 +456,8 @@ static void llce_process_error(struct llce_can *llce, enum llce_fw_return error,
 		break;
 	case LLCE_ERROR_BUSOFF:
 	case LLCE_ERROR_HARDWARE_BUSOFF:
-		/**
-		 * A restart is not needed as we have automatic
-		 * bus-off recovery
-		 */
+		/* A restart is needed after a bus off error */
+		can_bus_off(dev);
 		can_stats->bus_off++;
 		break;
 	case LLCE_ERROR_DATA_LOST:
diff --git a/include/linux/mailbox/nxp-llce/llce_can.h b/include/linux/mailbox/nxp-llce/llce_can.h
index f1eb70248574..96874c99d4e0 100644
--- a/include/linux/mailbox/nxp-llce/llce_can.h
+++ b/include/linux/mailbox/nxp-llce/llce_can.h
@@ -1,28 +1,13 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /* Copyright 2020-2021 NXP */
-#ifndef LLCE_CAN_H
-#define LLCE_CAN_H
+#ifndef LLCE_INTERFACECANTYPES_H
+#define LLCE_INTERFACECANTYPES_H
 
 #include <linux/types.h>
 #include "llce_fw_version.h"
 #include "llce_fw_interface.h"
 #include "llce_interface_config.h"
 
-/**
- * Offset bits for NCBT register
- */
-#define LLCE_NCBT_NPRESDIV_SHIFT_U8 (23U)
-#define LLCE_NCBT_NRJW_SHIFT_U8 (16U)
-#define LLCE_NCBT_NTSEG2_SHIFT_U8 (9U)
-
-/**
- * Offset bits for DCBT register
- */
-#define LLCE_DCBT_DPRESDIV_SHIFT_U8 (23U)
-#define LLCE_DCBT_DRJW_SHIFT_U8 (16U)
-#define LLCE_DCBT_DTSEG2_SHIFT_U8 (9U)
-
-#define LLCE_DEFAULTCONFIG_MAGICVALUE 0x12C0FFEE
 /**
  * Controller option used by the initialization command in order to
  * inform LLCE firmware that a specific controller shall be initialized.
@@ -53,8 +38,7 @@
 #define LLCE_CAN_CONTROLLERCONFIG_LPB_EN (0x00200000U)
 /** CAN controller option used to enable self-reception mode. */
 #define LLCE_CAN_CONTROLLERCONFIG_SRX_EN (0x00400000U)
-/** CAN controller option used to enable automatic bus-off recovery. */
-#define LLCE_CAN_CONTROLLERCONFIG_ABR_EN (0x00000001U)
+
 /**
  * Number of interfaces used for interrupt reporting
  * (one per channel) + number of polling classes.
@@ -133,7 +117,7 @@ enum llce_can_notification_id {
 
 /**
  * Command IDs used to interface with LLCE.
- * Some of those commands are sent by the host to LLCE module and others are
+ * Some of those commands are send by the host to LLCE module and others are
  * sent by LLCE module to the host.
  **/
 enum llce_can_command_id {
@@ -196,9 +180,7 @@ enum llce_can_command_id {
 	 * Host requests the abortion of the lowest priority pending
 	 * transmission of a specific CAN controller.
 	 */
-	LLCE_CAN_CMD_ABORT_MB,
-	/** Custom command to be implemented by user in FDK */
-	LLCE_CAN_CMD_CUSTOM
+	LLCE_CAN_CMD_ABORT_MB
 } __packed;
 
 /**
@@ -337,13 +319,6 @@ enum llce_af_authentication_options {
 	LLCE_AF_AUTHENTICATION_NOT_SUPPORTED
 } __packed;
 
-enum llce_af_custom_processing_options {
-	/** Custom processing of CAN frame is disabled.*/
-	LLCE_AF_CUSTOMPROCESSING_DISABLED = 1U,
-	/** Custom processing of CAN frame is enabled.*/
-	LLCE_AF_CUSTOMPROCESSING_ENABLED,
-} __packed;
-
 /**
  * RXLUT entries type
  * Specifies the type of entry in the table.
@@ -761,8 +736,8 @@ struct llce_can_can2eth_routing_table {
 	/** INPUT: Size of each buffer for this destination */
 	u16 can2eth_buff_size;
 	/**
-	 * INPUT: Number of buffers of size can2eth_buff_size for
-	 * this destination
+	 * INPUT: Number of buffers of size can2eth_buff_size for this
+	 * destination
 	 */
 	u8 can2eth_buff_count;
 	/**
@@ -770,8 +745,6 @@ struct llce_can_can2eth_routing_table {
 	 * IEEE 802.3 standard.
 	 */
 	u8 can2eth_dest_mac[6];
-	/** INPUT: Ethernet physical interface */
-	u8 can2eth_phy_if;
 } __aligned(4) __packed;
 
 /**
@@ -807,8 +780,6 @@ struct llce_can_advanced_feature {
 	enum llce_can_host_receive_options host_receive;
 	/** INPUT: Option for logging feature. */
 	enum llce_af_logging_options can_logging_feature;
-	/** INPUT: Option for custom processing. */
-	enum llce_af_custom_processing_options can_custom_processing;
 	/**
 	 * INPUT: CAN2CAN routing table index.
 	 * Reference to the routing table rule.
@@ -1109,8 +1080,6 @@ union llce_can_command_list {
 	 * or all the message buffers with a specific tag.
 	 */
 	struct llce_can_abort_mb_cmd abort_mb;
-	/** Pointer to argument for custom command */
-	u32 p_custom_cmd_arg;
 };
 
 /**
@@ -1230,7 +1199,7 @@ struct llce_can_notification_table {
 	 * See also struct llce_can_notification
 	 */
 	struct llce_can_notification
-	    can_notif1_Table[LLCE_CAN_CONFIG_HIF_COUNT]
+	    can_notif1_table[LLCE_CAN_CONFIG_HIF_COUNT]
 	    [LLCE_CAN_CONFIG_NOTIF_TABLE_SIZE];
 } __aligned(4) __packed;
 
diff --git a/include/linux/mailbox/nxp-llce/llce_fw_interface.h b/include/linux/mailbox/nxp-llce/llce_fw_interface.h
index e8dc772bd656..22306490730b 100644
--- a/include/linux/mailbox/nxp-llce/llce_fw_interface.h
+++ b/include/linux/mailbox/nxp-llce/llce_fw_interface.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /* Copyright 2020-2021 NXP */
-#ifndef LLCE_FW_INTERFACE_H
-#define LLCE_FW_INTERFACE_H
+#ifndef LLCE_INTERFACEFWMGR_H
+#define LLCE_INTERFACEFWMGR_H
 
 /**
  * CAN firmware error values.
@@ -21,7 +21,7 @@ enum llce_fw_return {
 	LLCE_ERROR_SW_FIFO_EMPTY,
 	/** CAN firmware error: SW FIFO inside LLCE is full. */
 	LLCE_ERROR_SW_FIFO_FULL,
-	/** CAN firmware error: Message buffer is not avaialable. */
+	/** CAN firmware error: Message buffer is not available. */
 	LLCE_ERROR_MB_NOTAVAILABLE,
 	/**
 	 * CAN firmware error: CAN protocol error due to inability to get
@@ -49,7 +49,8 @@ enum llce_fw_return {
 	 */
 	LLCE_ERROR_BCAN_SRT_ENTER,
 	/**
-	 * CAN firmware error: unknown CAN protocol error
+	 * CAN firmware error: CAN protocol error due to inability to
+	 * enter in soft reset.
 	 */
 	LLCE_ERROR_BCAN_UNKNOWN_ERROR,
 	/**
@@ -72,35 +73,6 @@ enum llce_fw_return {
 	 * occurs between the transmitted and the received bit in a CAN frame.
 	 */
 	LLCE_ERROR_BCAN_BIT1ERR,
-	/**
-	 * CAN firmware error: DPBIT1ERR indicates when an inconsistency
-	 * occurs between the transmitted and the received bit in the data phase
-	 * of a CAN-FD frame.
-	 */
-	LLCE_ERROR_BCAN_DPBIT1ERR,
-	/**
-	 * CAN firmware error: DPBIT0ERR indicates when an inconsistency
-	 * occurs between the transmitted and the received bit in the data phase
-	 * of a CAN-FD frame.
-	 */
-	LLCE_ERROR_BCAN_DPBIT0ERR,
-	/**
-	 * CAN firmware error: DPSTFERR indicates that a stuffing error has
-	 * been detected by the receiver node in the data phase of a CAN-FD
-	 * frame.
-	 */
-	LLCE_ERROR_BCAN_DPSTFERR,
-	/**
-	 * CAN firmware error: DPFRMERR indicates that a form error has
-	 * been detected by the receiver node in the data phase of a CAN-FD
-	 * frame - a fixed-form bit field contains at least one illegal bit.
-	 */
-	LLCE_ERROR_BCAN_DPFRMERR,
-	/**
-	 * CAN firmware error: DPCRCERR indicates that a CRC error has been
-	 * detected by the receiver node in the data phase of a CAN-FD frame
-	 */
-	LLCE_ERROR_BCAN_DPCRCERR,
 	/**
 	 * CAN firmware error: FRMERR indicates that a form error has
 	 * been detected by the receiver node in a CAN frame - a fixed-form bit
@@ -112,11 +84,6 @@ enum llce_fw_return {
 	 * been detected by the receiver node in a CAN frame.
 	 */
 	LLCE_ERROR_BCAN_STFERR,
-	/**
-	 * CAN firmware error: TDC mechanism is out of range,
-	 * unable to compensate the transceiver's loop delay.
-	 */
-	LLCE_ERROR_BCAN_TDCFAIL,
 	/**
 	 * CAN firmware error: Data_lost event caused by BCAN RX Fifo
 	 * Overrun.
@@ -157,10 +124,7 @@ enum llce_fw_return {
 	LLCE_ERROR_HARDWARE_BUSOFF,
 	/** CAN firmware error: Controller is not ready. */
 	LLCE_ERROR_CTRL_NOT_READY,
-	/**
-	 * CAN firmware error: Error regarding bus off.
-	 * This notification is skipped in case of auto-recovery.
-	 */
+	/** CAN firmware error: Error regarding bus off. */
 	LLCE_ERROR_BUSOFF,
 	/** CAN firmware error: Logging fifo is full. */
 	LLCE_ERROR_FIFO_LOG_FULL,
@@ -366,18 +330,7 @@ enum llce_fw_return {
 	 */
 	LLCE_ERROR_INDEX_NOT_RECOVERED,
 	/** CAN firmware error: Controller is in reset pending state. */
-	LLCE_ERROR_RESET_PENDING,
-	/**
-	 * CAN firmware notification: BCAN is in automatic buss off
-	 * recovery from busoff state.
-	 */
-	LLCE_NOTIF_BUSOFF_AUTO_RECOVERY_PENDING,
-	/**
-	 * CAN firmware notification: BCAN is ready to leave bus-off
-	 * state after the automatic recovery procedure
-	 */
-	LLCE_NOTIF_BUSOFF_DONE
-
+	LLCE_ERROR_RESET_PENDING
 } __packed;
 
 /**
diff --git a/include/linux/mailbox/nxp-llce/llce_interface_config.h b/include/linux/mailbox/nxp-llce/llce_interface_config.h
index e49a359dd708..394f15d7cccf 100644
--- a/include/linux/mailbox/nxp-llce/llce_interface_config.h
+++ b/include/linux/mailbox/nxp-llce/llce_interface_config.h
@@ -1,10 +1,29 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /* Copyright 2020-2021 NXP */
-#ifndef LLCE_INTERFACE_CONFIG_H
-#define LLCE_INTERFACE_CONFIG_H
+#ifndef LLCE_INTERFACECONFIG_H
+#define LLCE_INTERFACECONFIG_H
 
+/* LLCE base addresses
+ */
+/** Base address for the RXIN FIFO used by the channel 0. */
+#define LLCE_RXIN0_BASEADDR (0x43A00000UL)
+/** Base address for the RXOUT FIFO used by the channel 0. */
+#define LLCE_RXOUT0_BASEADDR (0x43A08000UL)
+/** Base address for the BLRIN FIFO used by the channel 0. */
+#define LLCE_BLRIN0_BASEADDR (0x43B00000UL)
+/** Base address for the BLROUT FIFO used by the channel 0. */
+#define LLCE_BLROUT0_BASEADDR (0x43B08000UL)
+/** Base address for the TXACK FIFO used by the channel 0. */
+#define LLCE_TXACK0_BASEADDR (0x43B10000UL)
+/** Base address for Generic FIFO 0. */
+#define LLCE_GENERIC_FIFO_BASEADDR (0x43A12000UL)
+/** Base address for the CORE2CORE module. */
+#define LLCE_CORE2CORE_BASEADDR (0x43C26000UL)
+/** Base address for the interrupt concentrator registers. */
+#define LLCE_ICSR_BASEADDR (0x43A14000UL)
 
-/* LLCE configuration parameters. */
+/* LLCE configuration parameters.
+ */
 /**
  * Default controller ID needed by the host 0 interface in order to
  * transmit INIT_PLATFORM and DEINIT_PLATFORM commands from host to LLCE.
@@ -99,7 +118,8 @@
  */
 #define LLCE_CAN_CONFIG_MAX_OCCURENCES 255U
 
-/* LIN defines */
+/* LIN defines
+ */
 /** Maximum buffer size used to store the LIN frame payload */
 #define LLCE_LIN_CONFIG_PAYLOAD_MAX_SIZE 8U
 /** Maximum number of LIN transmission buffers */
-- 
2.25.1

