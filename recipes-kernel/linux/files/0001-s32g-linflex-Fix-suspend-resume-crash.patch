From 469149903ab3ca644a944e0f6b203eb0ab2862ab Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Date: Mon, 1 Mar 2021 02:37:41 +0200
Subject: [PATCH] s32g:linflex: Fix suspend/resume crash

Commit 4e0f83274d5d ("serial:linflex: Stop any dma transfer during INITM")
introduces a subtle bug which crashes the serial driver's resume path.
In suspend/resume, uart_resume_port() first calls the serial driver's
set_termios() callback, and only then the startup() callback. This makes
it so linflex_set_termios() gets to call dma ops before the dma mappings
are correctly set in linflex_startup().
Prevent resumption of dma ops in linflex_set_termios() if we're
resuming. That code will execute in linflex_startup() anyway.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Issue: ALB-6516
---
 drivers/tty/serial/fsl_linflexuart.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/fsl_linflexuart.c b/drivers/tty/serial/fsl_linflexuart.c
index ecfee6c7ff16..d15171182d62 100644
--- a/drivers/tty/serial/fsl_linflexuart.c
+++ b/drivers/tty/serial/fsl_linflexuart.c
@@ -1137,8 +1137,12 @@ linflex_set_termios(struct uart_port *port, struct ktermios *termios,
 	if (!sport->dma_rx_use || !sport->dma_tx_use)
 		writel(ier, sport->port.membase + LINIER);
 
-	/* Re-enable the dma transactions if case. */
-	if (sport->dma_rx_use && !linflex_dma_rx(sport)) {
+	/* Re-enable the dma transactions, but not if we're resuming
+	 * from suspend, in which case this code will execute from
+	 * linflex_startup(), which is called a bit later.
+	 */
+	if (sport->dma_rx_buf_bus && sport->dma_rx_use &&
+	    !linflex_dma_rx(sport)) {
 		timer_setup(&sport->timer, linflex_timer_func, 0);
 		sport->timer.expires = jiffies + sport->dma_rx_timeout;
 		add_timer(&sport->timer);
-- 
2.17.1

