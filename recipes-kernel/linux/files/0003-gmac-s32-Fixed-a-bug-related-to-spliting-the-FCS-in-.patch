From 1b6211150a23dc58bf34d2b146ff94e69d8268eb Mon Sep 17 00:00:00 2001
From: Dorin Ionita <dorin.ionita@nxp.com>
Date: Thu, 17 Mar 2022 16:33:03 +0200
Subject: [PATCH 03/11] gmac: s32: Fixed a bug related to spliting the FCS in
 multiple buffers.

When considering frames that occupy more than one buffer in memory, the
corner case of having the FCS split between buffers resulted in integer
underflow and ultimately in kernel panic. This commit addresses this
corner case.

Issue: ALB-8438
Upstream-Status: Pending 

Signed-off-by: Dorin Ionita <dorin.ionita@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index d188a2731524..e7ad93b00eb0 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -3822,6 +3822,7 @@ static int stmmac_rx(struct stmmac_priv *priv, int limit, u32 queue)
 	}
 	while (count < limit) {
 		unsigned int buf1_len = 0, buf2_len = 0;
+		unsigned int fcs_len_in_buf1, fcs_len_in_buf2;
 		enum pkt_hash_types hash_type;
 		struct stmmac_rx_buffer *buf;
 		struct dma_desc *np, *p;
@@ -3912,11 +3913,13 @@ static int stmmac_rx(struct stmmac_priv *priv, int limit, u32 queue)
 		if (likely(!(status & rx_not_ls)) &&
 		    (likely(priv->synopsys_id >= DWMAC_CORE_4_00) ||
 		     unlikely(status != llc_snap))) {
-			if (buf2_len)
-				buf2_len -= ETH_FCS_LEN;
-			else
-				buf1_len -= ETH_FCS_LEN;
 
+			fcs_len_in_buf2 = min_t(unsigned int, ETH_FCS_LEN, buf2_len);
+			fcs_len_in_buf1 = min_t(unsigned int,
+						ETH_FCS_LEN - fcs_len_in_buf2, buf1_len);
+
+			buf2_len -= fcs_len_in_buf2;
+			buf1_len -= fcs_len_in_buf1;
 			len -= ETH_FCS_LEN;
 		}
 
-- 
2.17.1

