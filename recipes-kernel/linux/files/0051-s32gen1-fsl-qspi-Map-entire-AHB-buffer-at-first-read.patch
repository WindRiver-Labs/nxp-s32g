From 1656f2ab84bc1c3856429eb91e3d7b9e39f54310 Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Fri, 29 Jan 2021 12:59:45 +0200
Subject: [PATCH 51/78] s32gen1: fsl-qspi: Map entire AHB buffer at first read

Unmap will be done in `fsl_qspi_remove`.

Issue: ALB-6395
Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
---
 drivers/mtd/spi-nor/fsl-quadspi.c  |  9 ++++++++-
 drivers/mtd/spi-nor/fsl-quadspi.h  |  5 ++++-
 drivers/mtd/spi-nor/s32gen1_qspi.c | 10 ++--------
 3 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/mtd/spi-nor/fsl-quadspi.c b/drivers/mtd/spi-nor/fsl-quadspi.c
index 11c7d143eb79..aaff3c36b07b 100644
--- a/drivers/mtd/spi-nor/fsl-quadspi.c
+++ b/drivers/mtd/spi-nor/fsl-quadspi.c
@@ -3,7 +3,7 @@
  * Freescale QuadSPI driver.
  *
  * Copyright (C) 2013 Freescale Semiconductor, Inc.
- * Copyright 2017, 2020 NXP
+ * Copyright 2017, 2020-2021 NXP
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -920,6 +920,13 @@ static int fsl_qspi_probe(struct platform_device *pdev)
 	if (ret)
 		goto irq_failed;
 
+#ifdef CONFIG_SOC_S32GEN1
+	/* Map AHB Buffer */
+	q->ahb_addr = ioremap(QUADSPI_AHB_BASE, QUADSPI_AHB_SIZE);
+	if (!q->ahb_addr)
+		return -ENOMEM;
+#endif
+
 	if (of_get_property(np, "fsl,qspi-has-second-chip", NULL))
 		q->has_second_chip = true;
 
diff --git a/drivers/mtd/spi-nor/fsl-quadspi.h b/drivers/mtd/spi-nor/fsl-quadspi.h
index 195371373559..85c7fbe9f31b 100644
--- a/drivers/mtd/spi-nor/fsl-quadspi.h
+++ b/drivers/mtd/spi-nor/fsl-quadspi.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0+
  *
  * Copyright (C) 2013 Freescale Semiconductor, Inc.
- * Copyright (C) 2017-2020 NXP
+ * Copyright (C) 2017-2021 NXP
  *
  */
 
@@ -223,6 +223,9 @@
 
 #define QUADSPI_LUT_BASE		0x310
 
+#define QUADSPI_AHB_BASE		0x0
+#define QUADSPI_AHB_SIZE		SZ_64M
+
 /*
  * The definition of the LUT register shows below:
  *
diff --git a/drivers/mtd/spi-nor/s32gen1_qspi.c b/drivers/mtd/spi-nor/s32gen1_qspi.c
index c66a2fccb854..5af7086425b1 100644
--- a/drivers/mtd/spi-nor/s32gen1_qspi.c
+++ b/drivers/mtd/spi-nor/s32gen1_qspi.c
@@ -948,7 +948,6 @@ int qspi_read_mem(struct fsl_qspi *q,
 {
 	u32 mcr_reg;
 	void __iomem *base = q->iobase;
-	void *ahb_virt;
 	struct timespec64 start, end, duration;
 	u64 mb_int, mb_frac;
 	u32 us_passed, rem;
@@ -959,15 +958,11 @@ int qspi_read_mem(struct fsl_qspi *q,
 	qspi_writel(q, lut_cfg << QUADSPI_BFGENCR_SEQID_SHIFT,
 			base + QUADSPI_BFGENCR);
 
-	ahb_virt = ioremap(op->addr.val, op->data.nbytes);
-	if (!ahb_virt)
-		return -ENOMEM;
-
-	__inval_dcache_area(ahb_virt, op->data.nbytes);
+	__inval_dcache_area(q->ahb_addr + op->addr.val, op->data.nbytes);
 
 	/* Read out the data directly from the AHB buffer. */
 	ktime_get_ts64(&start);
-	memcpy(op->data.buf.in, ahb_virt,
+	memcpy(op->data.buf.in, q->ahb_addr + op->addr.val,
 		      op->data.nbytes);
 	ktime_get_ts64(&end);
 
@@ -983,7 +978,6 @@ int qspi_read_mem(struct fsl_qspi *q,
 	}
 
 	qspi_writel(q, mcr_reg, base + QUADSPI_MCR);
-	iounmap(ahb_virt);
 
 	return 0;
 }
-- 
2.25.1

