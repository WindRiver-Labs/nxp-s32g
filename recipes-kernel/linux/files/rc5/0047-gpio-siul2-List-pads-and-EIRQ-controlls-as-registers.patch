From 970a2456c644bae2d86a5f3e002409dc11a731c3 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 9 Aug 2021 13:14:24 +0300
Subject: [PATCH 47/49] gpio: siul2: List pads and EIRQ controlls as registers

commit 970a2456c644bae2d86a5f3e002409dc11a731c3 from
https://source.codeaurora.org/external/autobsps32/linux

This commit converts input/output pads and the regiters associated
with EIRQ controlles from global regmaps to private regs, part of
SIUL driver.

Upstream-Status: Pending

Issue: ALB-7534
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../boot/dts/freescale/fsl-s32-gen1.dtsi      |   8 +-
 arch/arm64/boot/dts/freescale/fsl-s32g.dtsi   |  49 +--
 .../dts/freescale/fsl-s32g274a-simulator.dts  | 281 ------------------
 arch/arm64/boot/dts/freescale/fsl-s32r45.dtsi |  46 +--
 drivers/gpio/gpio-siul2-s32gen1.c             |  97 +++---
 5 files changed, 76 insertions(+), 405 deletions(-)

diff --git a/arch/arm64/boot/dts/freescale/fsl-s32-gen1.dtsi b/arch/arm64/boot/dts/freescale/fsl-s32-gen1.dtsi
index 87d002cb6ed9..68d6f2708216 100644
--- a/arch/arm64/boot/dts/freescale/fsl-s32-gen1.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-s32-gen1.dtsi
@@ -258,7 +258,13 @@
 			  /* MSCR 0-101 */
 			 <1 0 0x0 0x4009C240 0x0 0x198>,
 			 /* IMCR range 512â€“595 */
-			 <2 0 0x0 0x4009CA40 0x0 0x150>;
+			 <2 0 0x0 0x4009CA40 0x0 0x150>,
+			 /* Output pads */
+			 <3 0 0x0 0x4009D700 0x0 0x10>,
+			 /* Input pads */
+			 <4 0 0x0 0x4009D740 0x0 0x10>,
+			 /* EIRQs */
+			 <5 0 0x0 0x44010010 0x0 0x34>;
 		nvram: nvram@4009C000 {
 			compatible = "fsl,s32gen1-siul2-nvmem";
 			reg = <0x0 0x0 0x0 0x10>;
diff --git a/arch/arm64/boot/dts/freescale/fsl-s32g.dtsi b/arch/arm64/boot/dts/freescale/fsl-s32g.dtsi
index 134b2423d5f3..d9f36eae504d 100644
--- a/arch/arm64/boot/dts/freescale/fsl-s32g.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-s32g.dtsi
@@ -395,9 +395,10 @@
 				/* EIRQ[27] - EIRQ[31] */
 				<&pinctrl0 0 36 5>;
 				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
+			reg = <0x3 0x0 0x0 0x10>,
+			      <0x4 0x0 0x0 0x10>,
+			      <0x5 0x0 0x0 0x34>;
+			reg-names = "opads", "ipads", "eirqs";
 			interrupt-controller;
 			#interrupt-cells = <2>;
 			interrupts = <0 210 4>;
@@ -414,7 +415,13 @@
 			  /* MSCR 112-190 */
 		ranges = <1 0 0x0 0x44010400 0x0 0x13C>,
 			 /* IMCR range 631-1023 */
-			 <2 0 0x0 0x44010C1C 0x0 0x5E4>;
+			 <2 0 0x0 0x44010C1C 0x0 0x5E4>,
+			 /* Output pads */
+			 <3 0 0x0 0x44011700 0x0 0x18>,
+			 /* Input pads */
+			 <4 0 0x0 0x44011740 0x0 0x18>,
+			 /* EIRQS */
+			 <5 0 0x0 0x44010010 0x0 0x34>;
 
 		pinctrl1: siul2-pinctrl1@44010000 {
 			compatible = "fsl,s32g-siul2_1-pinctrl";
@@ -460,41 +467,17 @@
 				<&pinctrl1 0 113 3>,
 				/* EIRQ[26] */
 				<&pinctrl1 0 117 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			regmap2 = <&irq_regs>;
+			/* Pad Data I/0 Registers */
+			reg = <0x3 0x0 0x0 0x18>,
+			    <0x04 0x0 0x0 0x18>,
+			    <0x5 0x0 0x0 0x34>;
+			reg-names = "opads", "ipads", "eirqs";
 			interrupt-controller;
 			interrupts = <0 210 4>;
 			#interrupt-cells = <2>;
 			status = "okay";
 		};
 	};
-	irq_regs: siul2_reg@0x44010010 {
-		compatible = "fsl,irq_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x44010010 0x0 0x34>;
-		little-endian;
-	};
-	opad0_regs: siul2_reg@0x4009D700 {
-		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4009D700 0x0 0x10>;
-		reg-io-width = <2>;
-	};
-	ipad0_regs: siul2_reg@0x4009D740 {
-		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4009D740 0x0 0x10>;
-		reg-io-width = <2>;
-	};
-	opad1_regs: siul2_reg@0x44011700 {
-		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x44011700 0x0 0x18>;
-		reg-io-width = <2>;
-	};
-	ipad1_regs: siul2_reg@0x44011740 {
-		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x44011740 0x0 0x18>;
-		reg-io-width = <2>;
-	};
 
 	usbmisc: usbmisc@44064200 {
 		#index-cells = <1>;
diff --git a/arch/arm64/boot/dts/freescale/fsl-s32g274a-simulator.dts b/arch/arm64/boot/dts/freescale/fsl-s32g274a-simulator.dts
index 08738403c496..362677390b57 100644
--- a/arch/arm64/boot/dts/freescale/fsl-s32g274a-simulator.dts
+++ b/arch/arm64/boot/dts/freescale/fsl-s32g274a-simulator.dts
@@ -52,287 +52,6 @@
 		      <0x0 0x40058000 0x0 0x3000>; /*periphdfs*/
 		#clock-cells = <1>;
 	};
-
-	siul2_0 {
-		compatible = "simple-mfd";
-		#address-cells = <2>;
-		#size-cells = <2>;
-		status = "okay";
-			  /* PINCTRL */
-		ranges = <1 0 0x0 0x4009C240 0x0 0x198>,
-			 /* IMCR range */
-			 <2 0 0x0 0x4009CA40 0x0 0x150>;
-		pinctrl0: siul2-pinctrl0@4009C000 {
-			compatible = "fsl,s32g-siul2_0-pinctrl";
-			#pinctrl-cells = <2>;
-			reg = <0x1 0x0 0x0 0x198>,
-			<0x2 0x0 0x0 0x150>;
-			/* MSCR range */
-			pins = <&pinctrl0 0 101>,
-			/* IMCR range */
-			<&pinctrl0 512 595>;
-			status = "okay";
-		};
-		/*
-		 * Note gpio controller nodes are split into sections
-		 * of contiguous GPIO numbering at this
-		 * point in time, functions working with gpio chips
-		 * assume this for many things.
-		 */
-		gpioother0: siul2-gpio0@4009C002 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl0 0 0 19>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			status = "okay";
-		};
-		gpioeirq0: siul2-gpio0@4009C004 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl0 0 19 11>,
-				/* EIRQ pins */
-				<&pinctrl1 910 910 11>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 0 4>;
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_gpioeirq0>;
-			status = "okay";
-		};
-		gpioother1: siul2-gpio0@4009C006 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl0 0 30 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			status = "okay";
-		};
-		gpioeirq1: siul2-gpio0@4009C008 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl0 0 31 1>,
-				/* EIRQ pins */
-				<&pinctrl1 922 922 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 12 4>;
-			pinctrl-names = "default";
-			status = "okay";
-		};
-		gpioother2: siul2-gpio0@4009C00A {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl0 0 32 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			status = "okay";
-		};
-		gpioeirq2: siul2-gpio0@4009C00C {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl0 0 33 3>,
-				/* EIRQ pins */
-				<&pinctrl1 923 923 3>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 13 4>;
-			pinctrl-names = "default";
-			status = "okay";
-		};
-		gpioeirq3: siul2-gpio0@4009C00E {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl0 0 36 5>,
-				/* EIRQ pins */
-				<&pinctrl1 937 937 5>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 27 4>;
-			pinctrl-names = "default";
-			status = "okay";
-		};
-		gpioother3: siul2-gpio0@4009C010 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl0 0 41 61>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			status = "okay";
-		};
-	};
-
-	siul2_1 {
-		compatible = "simple-mfd";
-		#address-cells = <2>;
-		#size-cells = <2>;
-		status = "okay";
-
-			  /* PINCTRL */
-		ranges = <1 0 0x0 0x44010400 0x0 0x13C>,
-			 /* IMCR range */
-			 <2 0 0x0 0x44010C1C 0x0 0x5E4>;
-
-		pinctrl1: siul2-pinctrl1@44010000 {
-			compatible = "fsl,s32g-siul2_1-pinctrl";
-			#pinctrl-cells = <2>;
-			reg = <0x1 0x0 0x0 0x13C>,
-			<0x2 0x0 0x0 0x5E4>;
-			/* MSCR range */
-			pins = <&pinctrl1 112 190>,
-			/* IMCR range */
-			<&pinctrl1 631 1007>;
-			status = "okay";
-		};
-		/*
-		 * Note gpio controller nodes are split into sections
-		 * of contiguous GPIO numbering at this
-		 * point in time, functions working with gpio chips
-		 * assume this for many things.
-		 */
-		gpioother4: siul2-gpio0@44010002 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl1 0 112 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			status = "okay";
-		};
-		gpioeirq4: siul2-gpio0@44010004 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl1 0 113 3>,
-				/* EIRQ pins */
-				<&pinctrl1 933 933 3>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 23 4>;
-			status = "okay";
-		};
-		gpioother5: siul2-gpio0@44010006 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl1 0 116 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			status = "okay";
-		};
-		gpioeirq5: siul2-gpio0@44010008 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl1 0 117 1>,
-				/* EIRQ pins */
-				<&pinctrl1 936 936 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 26 4>;
-			status = "okay";
-		};
-		gpioother6: siul2-gpio0@4401000A {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl1 0 118 5>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			status = "okay";
-		};
-		gpioother7: siul2-gpio0@4401000C {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl1 0 144 24>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			status = "okay";
-		};
-		gpioeirq6: siul2-gpio0@4401000E {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl1 0 168 1>,
-				/* EIRQ pins */
-				<&pinctrl1 921 921 1>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 11 4>;
-			status = "okay";
-		};
-		gpioother8: siul2-gpio0@44010010 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-			gpio-ranges = <&pinctrl1 0 169 15>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			status = "okay";
-		};
-		gpioeirq7: siul2-gpio0@44010012 {
-			compatible = "fsl,s32gen1-siul2-gpio";
-			gpio-controller;
-			#gpio-cells = <2>;
-				/* GPIO 0-15,27-32 */
-			gpio-ranges = <&pinctrl1 0 184 7>,
-				/* EIRQ pins */
-				<&pinctrl1 926 926 7>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
-			regmap2 = <&irq_regs>;
-			interrupt-controller;
-			interrupts = <0 16 4>;
-			status = "okay";
-		};
-	};
 };
 
 &cluster0_l2_cache {
diff --git a/arch/arm64/boot/dts/freescale/fsl-s32r45.dtsi b/arch/arm64/boot/dts/freescale/fsl-s32r45.dtsi
index 899d90bbe8f6..d9530605f9cf 100644
--- a/arch/arm64/boot/dts/freescale/fsl-s32r45.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-s32r45.dtsi
@@ -158,9 +158,10 @@
 				/* EIRQ[31] */
 				<&pinctrl0 0 44 1>;
 				/* Pad Data I/0 Registers */
-			regmap0 = <&opad0_regs>;
-			regmap1 = <&ipad0_regs>;
-			regmap2 = <&irq_regs>;
+			reg = <0x3 0x0 0x0 0x10>,
+			      <0x4 0x0 0x0 0x10>,
+			      <0x5 0x0 0x0 0x30>;
+			reg-names = "opads", "ipads", "eirqs";
 			interrupt-controller;
 			interrupts = <0 237 4>;
 			status = "okay";
@@ -175,7 +176,11 @@
 			  /* PINCTRL */
 		ranges = <1 0 0x0 0x4403C3D8 0x0 0x80>,
 			 /* IMCR range */
-			 <2 0 0x0 0x4403CBAC 0x0 0x2CC>;
+			 <2 0 0x0 0x4403CBAC 0x0 0x2CC>,
+			 /* Output pads */
+			 <3 0 0x0 0x4403D700 0x0 0x14>,
+			 /* Input pads */
+			 <4 0 0x0 0x4403D740 0x0 0x14>;
 
 		pinctrl1: siul2-pinctrl1@4403C000 {
 			compatible =
@@ -202,39 +207,14 @@
 			#gpio-cells = <2>;
 			#pinctrl-cells = <2>;
 			gpio-ranges = <&pinctrl1 0 102 32>;
-				/* Pad Data I/0 Registers */
-			regmap0 = <&opad1_regs>;
-			regmap1 = <&ipad1_regs>;
+			/* Pad Data I/0 Registers */
+			reg = <0x3 0x0 0x0 0x14>,
+			      <0x4 0x0 0x0 0x14>;
+			reg-names = "opads", "ipads";
 			status = "okay";
 		};
 	};
 
-	irq_regs: siul2_reg@0x4403C010 {
-		compatible = "fsl,irq_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4403C010 0x0 0x30>;
-		little-endian;
-	};
-	opad0_regs: siul2_reg@0x4009D700 {
-		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4009D700 0x0 0x10>;
-		reg-io-width = <2>;
-	};
-	ipad0_regs: siul2_reg@0x4009D740 {
-		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4009D740 0x0 0x10>;
-		reg-io-width = <2>;
-	};
-	opad1_regs: siul2_reg@0x4403D700 {
-		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4403D700 0x0 0x14>;
-		reg-io-width = <2>;
-	};
-	ipad1_regs: siul2_reg@0x4403D740 {
-		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
-		reg = <0x0 0x4403D740 0x0 0x14>;
-		reg-io-width = <2>;
-	};
-
 	gmac1: ethernet@44010000 {
 		compatible = "fsl,s32cc-dwmac";
 		reg = <0x0 0x44010000 0x0 0x2000>, /* gmac IP */
diff --git a/drivers/gpio/gpio-siul2-s32gen1.c b/drivers/gpio/gpio-siul2-s32gen1.c
index a0f31ae53498..b60357ecebac 100644
--- a/drivers/gpio/gpio-siul2-s32gen1.c
+++ b/drivers/gpio/gpio-siul2-s32gen1.c
@@ -463,30 +463,30 @@ static void siul2_gpio_irq_mask(struct irq_data *data)
 static const struct regmap_config siul2_regmap_conf = {
 	.val_bits = 32,
 	.reg_bits = 32,
+	.reg_stride = 4,
 	.cache_type = REGCACHE_FLAT,
 };
 
-static int common_regmap_conf(struct device *dev, struct regmap *map,
-			      struct regmap_config *conf, const char *name)
+struct regmap *common_regmap_init(struct platform_device *pdev,
+				  struct regmap_config *conf, const char *name)
 {
-	int ret;
+	struct resource *res;
+	void __iomem *base;
+	struct device *dev = &pdev->dev;
+	resource_size_t size;
 
-	conf->max_register = regmap_get_max_register(map);
-	conf->reg_stride = regmap_get_reg_stride(map);
-	conf->name = devm_kasprintf(dev, GFP_KERNEL, "%s-%s",
-					   dev_name(dev), name);
-	if (!conf->name) {
-		dev_err(dev, "Failed to allocated regmap name\n");
-		return -ENOMEM;
-	}
+	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, name);
+	size = resource_size(res);
+	base = devm_ioremap(dev, res->start, size);
+	if (IS_ERR(base))
+		return base;
 
-	ret = regmap_attach_dev(dev, map, conf);
-	if (ret) {
-		dev_err(dev, "Failed to attach device to regmap\n");
-		return ret;
-	}
 
-	return regmap_reinit_cache(map, conf);
+	conf->val_bits = conf->reg_stride * 8;
+	conf->max_register = size - conf->reg_stride;
+	conf->name = name;
+
+	return regmap_init_mmio(dev, base, conf);
 }
 
 static bool irqregmap_writeable(struct device *dev, unsigned int reg)
@@ -604,13 +604,15 @@ static bool irqmap_volatile_reg(struct device *dev, unsigned int reg)
 	return reg == SIUL2_DISR0;
 }
 
-static int reinit_irqregmap_conf(struct device *dev, struct regmap *map)
+static struct regmap *init_irqregmap(struct platform_device *pdev)
 {
 	struct regmap_config regmap_conf = siul2_regmap_conf;
 
 	regmap_conf.writeable_reg = irqregmap_writeable;
 	regmap_conf.volatile_reg = irqmap_volatile_reg;
-	return common_regmap_conf(dev, map, &regmap_conf, "irq");
+	regmap_conf.val_format_endian = REGMAP_ENDIAN_LITTLE;
+
+	return common_regmap_init(pdev, &regmap_conf, "eirqs");
 }
 
 static bool not_writable(__always_unused struct device *dev,
@@ -619,23 +621,27 @@ static bool not_writable(__always_unused struct device *dev,
 	return false;
 }
 
-static int reinit_opadregmap_conf(struct device *dev, struct regmap *map)
+static struct regmap *init_opadregmap(struct platform_device *pdev)
 {
 	struct regmap_config regmap_conf = siul2_regmap_conf;
 
 	regmap_conf.writeable_reg = regmap_accessible;
 	regmap_conf.readable_reg = regmap_accessible;
-	return common_regmap_conf(dev, map, &regmap_conf, "opad");
+	regmap_conf.reg_stride = 2;
+
+	return common_regmap_init(pdev, &regmap_conf, "opads");
 }
 
-static int reinit_ipadregmap_conf(struct device *dev, struct regmap *map)
+static struct regmap *init_ipadregmap(struct platform_device *pdev)
 {
 	struct regmap_config regmap_conf = siul2_regmap_conf;
 
 	regmap_conf.cache_type = REGCACHE_NONE;
 	regmap_conf.writeable_reg = not_writable;
 	regmap_conf.readable_reg = regmap_accessible;
-	return common_regmap_conf(dev, map, &regmap_conf, "ipad");
+	regmap_conf.reg_stride = 2;
+
+	return common_regmap_init(pdev, &regmap_conf, "ipads");
 }
 
 static int siul2_irq_setup(struct platform_device *pdev,
@@ -651,22 +657,17 @@ static int siul2_irq_setup(struct platform_device *pdev,
 	 * initialize the irq control registers only once.
 	 */
 	static int init_flag;
+	struct device *dev = &pdev->dev;
 
 	/* Skip gpio node without interrupts */
 	intspec = of_get_property(pdev->dev.of_node, "interrupts", &intlen);
 	if (!intspec)
 		return 0;
 
-	gpio_dev->irqmap = syscon_regmap_lookup_by_phandle(
-						pdev->dev.of_node, "regmap2");
-	if (IS_ERR(gpio_dev->irqmap))
+	gpio_dev->irqmap = init_irqregmap(pdev);
+	if (IS_ERR(gpio_dev->irqmap)) {
+		dev_err(dev, "Failed to initialize ipad regmap configuration\n");
 		return PTR_ERR(gpio_dev->irqmap);
-
-	ret = reinit_irqregmap_conf(&pdev->dev, gpio_dev->irqmap);
-	if (ret) {
-		dev_err(&pdev->dev,
-			"Failed to reinitialize regmap configuration\n");
-		return ret;
 	}
 
 	/* EIRQ pins */
@@ -775,7 +776,6 @@ static void siul2_gpio_set(
 		data &= ~mask;
 
 	regmap_write(gpio_dev->opadmap, reg_offset, data);
-
 	spin_unlock_irqrestore(&gpio_dev->lock, flags);
 }
 
@@ -808,37 +808,20 @@ static int siul2_gpio_get(struct gpio_chip *chip, unsigned int offset)
 }
 
 static int siul2_gpio_pads_init(struct platform_device *pdev,
-				     struct siul2_gpio_dev *gpio_dev)
+				struct siul2_gpio_dev *gpio_dev)
 {
-	int ret;
+	struct device *dev = &pdev->dev;
 
-	gpio_dev->opadmap =
-		syscon_regmap_lookup_by_phandle(
-		 pdev->dev.of_node, "regmap0");
+	gpio_dev->opadmap = init_opadregmap(pdev);
 	if (IS_ERR(gpio_dev->opadmap)) {
-		dev_err(&pdev->dev,
-			"unable to get opadmap from device tree\n");
+		dev_err(dev, "Failed to initialize opad regmap configuration\n");
 		return PTR_ERR(gpio_dev->opadmap);
 	}
 
-	ret = reinit_opadregmap_conf(&pdev->dev, gpio_dev->opadmap);
-	if (ret) {
-		dev_err(&pdev->dev,
-			"Failed to reinitialize opad regmap configuration\n");
-		return ret;
-	}
-
-	gpio_dev->ipadmap =
-		syscon_regmap_lookup_by_phandle(
-		 pdev->dev.of_node, "regmap1");
-	if (IS_ERR(gpio_dev->ipadmap))
+	gpio_dev->ipadmap = init_ipadregmap(pdev);
+	if (IS_ERR(gpio_dev->ipadmap)) {
+		dev_err(dev, "Failed to initialize ipad regmap configuration\n");
 		return PTR_ERR(gpio_dev->ipadmap);
-
-	ret = reinit_ipadregmap_conf(&pdev->dev, gpio_dev->ipadmap);
-	if (ret) {
-		dev_err(&pdev->dev,
-			"Failed to reinitialize ipad regmap configuration\n");
-		return ret;
 	}
 
 	return 0;
-- 
2.17.1

