From e29e31bd5ed2b06e6095cc05d7f1cb2aa9e178e5 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 10 Aug 2021 09:18:51 +0300
Subject: [PATCH 48/49] gpio: siul2: Make use of devm_gpiochip_add_data

commit e29e31bd5ed2b06e6095cc05d7f1cb2aa9e178e5 from
https://source.codeaurora.org/external/autobsps32/linux

gpio: siul2: Use devm_gpiochip_add_data instead of gpiochip_add_data

Upstream-Status: Pending

Issue: ALB-7537
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/gpio/gpio-siul2-s32gen1.c | 35 ++++++++++---------------------
 1 file changed, 11 insertions(+), 24 deletions(-)

diff --git a/drivers/gpio/gpio-siul2-s32gen1.c b/drivers/gpio/gpio-siul2-s32gen1.c
index b60357ecebac..acef160d6fbd 100644
--- a/drivers/gpio/gpio-siul2-s32gen1.c
+++ b/drivers/gpio/gpio-siul2-s32gen1.c
@@ -727,18 +727,6 @@ static int siul2_irq_setup(struct platform_device *pdev,
 	return ret;
 }
 
-int siul2_gpio_remove(struct platform_device *pdev)
-{
-	struct siul2_gpio_dev *gpio_dev = platform_get_drvdata(pdev);
-	int err = 0;
-
-	if (!gpio_dev)
-		return -EINVAL;
-
-	gpiochip_remove(&gpio_dev->gc);
-	return err;
-}
-
 static const struct of_device_id siul2_gpio_dt_ids[] = {
 	{ .compatible = "fsl,s32g-siul2-gpio", .data = &s32g2_device_data },
 	{ .compatible = "fsl,s32gen1-siul2-gpio" },
@@ -835,9 +823,10 @@ int siul2_gpio_probe(struct platform_device *pdev)
 	struct of_phandle_args pinspec;
 	struct gpio_chip *gc;
 	size_t bitmap_size;
+	struct device *dev = &pdev->dev;
 	struct gpio_irq_chip *girq;
 
-	gpio_dev = devm_kzalloc(&pdev->dev, sizeof(*gpio_dev), GFP_KERNEL);
+	gpio_dev = devm_kzalloc(dev, sizeof(*gpio_dev), GFP_KERNEL);
 	if (!gpio_dev)
 		return -ENOMEM;
 
@@ -853,12 +842,11 @@ int siul2_gpio_probe(struct platform_device *pdev)
 
 	err = siul2_get_gpio_pinspec(pdev, &pinspec, 0);
 	if (err) {
-		dev_err(&pdev->dev,
-			"unable to get pinspec from device tree\n");
+		dev_err(dev, "unable to get pinspec from device tree\n");
 		return -EIO;
 	}
 
-	of_id = of_match_device(siul2_gpio_dt_ids, &pdev->dev);
+	of_id = of_match_device(siul2_gpio_dt_ids, dev);
 	if (of_id)
 		gpio_dev->platdata = of_id->data;
 
@@ -869,18 +857,18 @@ int siul2_gpio_probe(struct platform_device *pdev)
 
 	bitmap_size = BITS_TO_LONGS(gc->ngpio) *
 		sizeof(*gpio_dev->pin_dir_bitmap);
-	gpio_dev->pin_dir_bitmap = devm_kzalloc(&pdev->dev, bitmap_size,
+	gpio_dev->pin_dir_bitmap = devm_kzalloc(dev, bitmap_size,
 						GFP_KERNEL);
 	gpio_dev->irq = (struct irq_chip) {
-		.name			= dev_name(&pdev->dev),
+		.name			= dev_name(dev),
 		.irq_ack		= siul2_gpio_irq_mask,
 		.irq_mask		= siul2_gpio_irq_mask,
 		.irq_unmask		= siul2_gpio_irq_unmask,
 		.irq_set_type		= siul2_gpio_irq_set_type,
 	};
 
-	gc->parent = &pdev->dev;
-	gc->label = dev_name(&pdev->dev);
+	gc->parent = dev;
+	gc->label = dev_name(dev);
 
 	gc->set = siul2_gpio_set;
 	gc->get = siul2_gpio_get;
@@ -898,16 +886,16 @@ int siul2_gpio_probe(struct platform_device *pdev)
 	girq->default_type = IRQ_TYPE_NONE;
 	girq->handler = handle_simple_irq;
 
-	err = gpiochip_add_data(gc, gpio_dev);
+	err = devm_gpiochip_add_data(dev, gc, gpio_dev);
 	if (err) {
-		dev_err(&pdev->dev, "unable to add gpiochip: %d\n", err);
+		dev_err(dev, "unable to add gpiochip: %d\n", err);
 		return -EINVAL;
 	}
 
 	/* EIRQs setup */
 	err = siul2_irq_setup(pdev, gpio_dev);
 	if (err) {
-		dev_err(&pdev->dev, "failed to setup IRQ : %d\n", err);
+		dev_err(dev, "failed to setup IRQ : %d\n", err);
 		return -EINVAL;
 	}
 
@@ -959,7 +947,6 @@ static struct platform_driver siul2_gpio_driver = {
 		.pm = &siul2_pm_ops,
 	},
 	.probe		= siul2_gpio_probe,
-	.remove		= siul2_gpio_remove,
 };
 
 int siul2_gpio_init(void)
-- 
2.17.1

