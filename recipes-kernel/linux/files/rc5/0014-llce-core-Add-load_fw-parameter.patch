From ce42bcb5cb7dd8504cc6fb43399124e1c2ddeacc Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 13 Jul 2021 12:22:10 +0300
Subject: [PATCH 14/49] llce-core: Add 'load_fw' parameter

commit ce42bcb5cb7dd8504cc6fb43399124e1c2ddeacc from
https://source.codeaurora.org/external/autobsps32/linux

This parameter can be used to disable llce firmware loading
operation.

Upstream-Status: Pending

Issue: ALB-5830, ALB-7344
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/mfd/llce-core.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/mfd/llce-core.c b/drivers/mfd/llce-core.c
index c645fd2e5970..b1e3c4b8cdc9 100644
--- a/drivers/mfd/llce-core.c
+++ b/drivers/mfd/llce-core.c
@@ -6,6 +6,7 @@
 #include <linux/kernel.h>
 #include <linux/mailbox/nxp-llce/llce_fw_interface.h>
 #include <linux/module.h>
+#include <linux/moduleparam.h>
 #include <linux/of_address.h>
 #include <linux/of_platform.h>
 #include <linux/platform_device.h>
@@ -56,6 +57,9 @@ struct llce_core {
 	size_t nfrws;
 };
 
+static bool load_fw = true;
+module_param(load_fw, bool, 0660);
+
 static void devm_sram_pool_release(struct device *dev, void *res)
 {
 	struct sram_pool *spool = res;
@@ -361,6 +365,9 @@ static int llce_core_probe(struct platform_device *pdev)
 	struct llce_core *core;
 	int ret;
 
+	if (!load_fw)
+		return devm_of_platform_populate(&pdev->dev);
+
 	core = devm_kmalloc(dev, sizeof(*core), GFP_KERNEL);
 	if (!core)
 		return -ENOMEM;
@@ -417,6 +424,9 @@ static int llce_core_remove(struct platform_device *pdev)
 {
 	struct llce_core *core = platform_get_drvdata(pdev);
 
+	if (!load_fw)
+		return 0;
+
 	llce_release_fw_images(core);
 	deinit_core_clock(core);
 	return 0;
@@ -426,6 +436,9 @@ static int __maybe_unused llce_core_suspend(struct device *dev)
 {
 	struct llce_core *core = dev_get_drvdata(dev);
 
+	if (!load_fw)
+		return 0;
+
 	deinit_core_clock(core);
 
 	return 0;
@@ -436,6 +449,9 @@ static int __maybe_unused llce_core_resume(struct device *dev)
 	struct llce_core *core = dev_get_drvdata(dev);
 	int ret;
 
+	if (!load_fw)
+		return 0;
+
 	ret = init_core_clock(dev, core);
 	if (ret)
 		return ret;
-- 
2.17.1

