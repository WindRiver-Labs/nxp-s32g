From 2dc7d17175228322c9515abf29364769f3b5d708 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 13 Jul 2021 11:24:06 +0300
Subject: [PATCH 13/49] can: llce: Add 'logging' parameter

commit 2dc7d17175228322c9515abf29364769f3b5d708 from
https://source.codeaurora.org/external/autobsps32/linux

'logging' parameter can be used to enable logging on each
interface exported by llce can driver. This feature is only available
using llce advanced firmware.

Upstream-Status: Pending

Issue: ALB-5830, ALB-7344
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/can/llce_can.c | 71 ++++++++++++++++++++++++++++++--------
 1 file changed, 57 insertions(+), 14 deletions(-)

diff --git a/drivers/net/can/llce_can.c b/drivers/net/can/llce_can.c
index baf1a3a2fd2b..b2824de76952 100644
--- a/drivers/net/can/llce_can.c
+++ b/drivers/net/can/llce_can.c
@@ -10,6 +10,7 @@
 #include <linux/mailbox_client.h>
 #include <linux/mailbox_controller.h>
 #include <linux/module.h>
+#include <linux/moduleparam.h>
 #include <linux/platform_device.h>
 #include <linux/stringify.h>
 
@@ -44,6 +45,9 @@ struct llce_can {
 	struct clk *clk;
 };
 
+static bool logging;
+module_param(logging, bool, 0660);
+
 static const struct can_bittiming_const llce_can_bittiming = {
 	.name = LLCE_CAN_DRV_NAME,
 	.tseg1_min = 4,
@@ -157,28 +161,67 @@ static int llce_can_deinit(struct llce_can *llce)
 	return 0;
 }
 
-static int can_add_open_filter(struct mbox_chan *conf_chan)
+static void set_rx_filter(struct llce_can_rx_filter *rx_filter, u8 intf)
 {
-	struct device *dev = llce_can_chan_dev(conf_chan);
-	struct llce_chan_priv *priv = conf_chan->con_priv;
-	struct llce_can_command cmd = {
+	*rx_filter = (struct llce_can_rx_filter) {
+		.id_mask = 0,
+		.message_id = 0,
+		.filter_id = 0,
+		.mb_count = LLCE_CAN_MAX_TX_MB,
+		.rx_dest_interface = intf,
+		.entry_type = LLCE_CAN_ENTRY_CFG_MASKED,
+	};
+}
+
+static void set_basic_filter(struct llce_can_command *cmd, u8 intf)
+{
+	*cmd = (struct llce_can_command) {
 		.cmd_id = LLCE_CAN_CMD_SETFILTER,
 		.cmd_list.set_filter = {
 			.rx_filters_count = 1,
-			.rx_filters = {
-				{
-					.id_mask = 0,
-					.message_id = 0,
-					.filter_id = 0,
-					.mb_count = LLCE_CAN_MAX_TX_MB,
-					.rx_dest_interface = priv->index,
-					.entry_type = LLCE_CAN_ENTRY_CFG_MASKED,
-				},
-			},
 		},
 	};
+
+	set_rx_filter(&cmd->cmd_list.set_filter.rx_filters[0], intf);
+}
+
+static void set_advanced_filter(struct llce_can_command *cmd, u8 intf)
+{
+	struct llce_can_advanced_filter *afilt;
+
+	*cmd = (struct llce_can_command) {
+		.cmd_id = LLCE_CAN_CMD_SETADVANCEDFILTER,
+		.cmd_list.set_advanced_filter = {
+			.rx_filters_count = 1,
+		},
+	};
+
+	afilt = &cmd->cmd_list.set_advanced_filter.advanced_filters[0];
+	afilt->llce_can_Advanced_feature = (struct llce_can_advanced_feature) {
+		.can_authentication_feature = LLCE_AF_AUTHENTICATION_DISABLED,
+		.can_custom_processing = LLCE_AF_CUSTOMPROCESSING_DISABLED,
+		.can_logging_feature = LLCE_AF_LOGGING_ENABLED,
+		.host_receive = LLCE_AF_HOSTRECEIVE_ENABLED,
+		.can2can_routing_table_idx = (u8)0x0U,
+		.can2eth_routing_table_idx = (u8)0x0U,
+
+	};
+
+	set_rx_filter(&afilt->llce_can_Rx_filter, intf);
+}
+
+static int can_add_open_filter(struct mbox_chan *conf_chan)
+{
+	struct device *dev = llce_can_chan_dev(conf_chan);
+	struct llce_chan_priv *priv = conf_chan->con_priv;
+	struct llce_can_command cmd;
 	int ret;
 
+	if (logging)
+		set_advanced_filter(&cmd, priv->index);
+	else
+		set_basic_filter(&cmd, priv->index);
+
 	ret = send_cmd_msg(conf_chan, &cmd);
 	if (ret) {
 		dev_err(dev, "Failed to set RX filter\n");
-- 
2.17.1

