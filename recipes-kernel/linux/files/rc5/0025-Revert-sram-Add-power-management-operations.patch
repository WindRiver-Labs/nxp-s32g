From 9679e87015988c72bbd9334b218cee04207eaee5 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 28 Jul 2021 14:28:58 +0300
Subject: [PATCH 25/49] Revert "sram: Add power management operations"

commit 9679e87015988c72bbd9334b218cee04207eaee5 from
https://source.codeaurora.org/external/autobsps32/linux

This reverts commit 9d9c6de4d016a12cbe55bf246f0c64ae57d8d1a7.

Upstream-Status: Pending

Issue: ALB-6953
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/misc/sram.c | 43 -------------------------------------------
 1 file changed, 43 deletions(-)

diff --git a/drivers/misc/sram.c b/drivers/misc/sram.c
index 70a70ae327c1..6c1a23cb3e8c 100644
--- a/drivers/misc/sram.c
+++ b/drivers/misc/sram.c
@@ -3,7 +3,6 @@
  * Generic on-chip SRAM allocation driver
  *
  * Copyright (C) 2012 Philipp Zabel, Pengutronix
- * Copyright 2020 NXP
  */
 
 #include <linux/clk.h>
@@ -332,15 +331,6 @@ static int atmel_securam_wait(void)
 					10000, 500000);
 }
 
-static int llce_init_sram(struct device *dev)
-{
-	struct sram_dev *sram = dev_get_drvdata(dev);
-	size_t size = gen_pool_size(sram->pool);
-
-	memset_io((void __iomem *)sram->virt_base, 0, size);
-	return 0;
-}
-
 static const struct of_device_id sram_dt_ids[] = {
 	{ .compatible = "mmio-sram" },
 	{ .compatible = "atmel,sama5d2-securam", .data = atmel_securam_wait },
@@ -422,43 +412,10 @@ static int sram_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static int __maybe_unused sram_suspend(struct device *dev)
-{
-	struct sram_dev *sram = dev_get_drvdata(dev);
-
-	if (sram->clk)
-		clk_disable_unprepare(sram->clk);
-
-	return 0;
-}
-
-static int __maybe_unused sram_resume(struct device *dev)
-{
-	struct sram_dev *sram = dev_get_drvdata(dev);
-	int (*init_func)(struct device *dev);
-	int ret;
-
-	if (sram->clk)
-		clk_prepare_enable(sram->clk);
-
-	init_func = of_device_get_match_data(dev);
-	if (!init_func)
-		return 0;
-
-	ret = init_func(dev);
-	if (ret)
-		dev_err(dev, "Failed to initialize SRAM\n");
-
-	return ret;
-}
-
-static SIMPLE_DEV_PM_OPS(sram_pm_ops, sram_suspend, sram_resume);
-
 static struct platform_driver sram_driver = {
 	.driver = {
 		.name = "sram",
 		.of_match_table = sram_dt_ids,
-		.pm = &sram_pm_ops,
 	},
 	.probe = sram_probe,
 	.remove = sram_remove,
-- 
2.17.1

