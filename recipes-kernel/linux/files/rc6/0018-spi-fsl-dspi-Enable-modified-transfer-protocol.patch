From fc0446d91da90f5a2e335844f1a9fbaa3e791839 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Wed, 4 Aug 2021 10:33:45 +0300
Subject: [PATCH 18/19] spi: fsl-dspi: Enable modified transfer protocol

commit fc0446d91da90f5a2e335844f1a9fbaa3e791839 from
https://source.codeaurora.org/external/autobsps32/linux

Set MTFE bit in MCR register for frequencies higher than 25MHz.

Upstream-Status: Pending

Issue: ALB-7460
Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Bogdan-Gabriel Roman <bogdan-gabriel.roman@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/spi/spi-fsl-dspi.c | 46 +++++++++++++++++++++++++++++++++-----
 1 file changed, 40 insertions(+), 6 deletions(-)

diff --git a/drivers/spi/spi-fsl-dspi.c b/drivers/spi/spi-fsl-dspi.c
index 1c1a48cfb1c6..377799cf6365 100644
--- a/drivers/spi/spi-fsl-dspi.c
+++ b/drivers/spi/spi-fsl-dspi.c
@@ -24,6 +24,7 @@
 
 #define SPI_MCR				0x00
 #define SPI_MCR_MASTER			BIT(31)
+#define SPI_MCR_MTFE			BIT(26)
 #define SPI_MCR_PCSIS(x)		((x) << 16)
 #define SPI_MCR_CLR_TXF			BIT(11)
 #define SPI_MCR_CLR_RXF			BIT(10)
@@ -37,6 +38,7 @@
 
 #define SPI_CTAR(x)			(0x0c + (((x) & GENMASK(2, 0)) * 4))
 #define SPI_CTAR_FMSZ(x)		(((x) << 27) & GENMASK(30, 27))
+#define SPI_CTAR_DBR			BIT(31)
 #define SPI_CTAR_CPOL			BIT(26)
 #define SPI_CTAR_CPHA			BIT(25)
 #define SPI_CTAR_LSBFE			BIT(24)
@@ -110,6 +112,8 @@
 
 #define DMA_COMPLETION_TIMEOUT		msecs_to_jiffies(3000)
 
+#define SPI_25MHZ					25000000
+
 struct chip_data {
 	u32			ctar_val;
 };
@@ -233,9 +237,9 @@ struct fsl_dspi {
 
 	struct regmap				*regmap;
 	struct regmap				*regmap_pushr;
-	int					irq;
+	int						irq;
 	struct clk				*clk;
-
+	bool					mtf_enabled;
 	struct spi_transfer			*cur_transfer;
 	struct spi_message			*cur_msg;
 	struct chip_data			*cur_chip;
@@ -633,7 +637,7 @@ static void dspi_release_dma(struct fsl_dspi *dspi)
 }
 
 static void hz_to_spi_baud(char *pbr, char *br, int speed_hz,
-			   unsigned long clkrate)
+			   unsigned long clkrate, bool mtf_enabled)
 {
 	/* Valid baud rate pre-scaler values */
 	int pbr_tbl[4] = {2, 3, 5, 7};
@@ -642,7 +646,7 @@ static void hz_to_spi_baud(char *pbr, char *br, int speed_hz,
 			256,	512,	1024,	2048,
 			4096,	8192,	16384,	32768 };
 	int scale_needed, scale, minscale = INT_MAX;
-	int i, j;
+	int i, j, dbr = 1;
 
 	scale_needed = clkrate / speed_hz;
 	if (clkrate % speed_hz)
@@ -650,7 +654,12 @@ static void hz_to_spi_baud(char *pbr, char *br, int speed_hz,
 
 	for (i = 0; i < ARRAY_SIZE(brs); i++)
 		for (j = 0; j < ARRAY_SIZE(pbr_tbl); j++) {
-			scale = brs[i] * pbr_tbl[j];
+
+			if (!mtf_enabled)
+				scale = brs[i] * pbr_tbl[j];
+			else
+				scale = (brs[i] * pbr_tbl[j]) / (1 + dbr);
+
 			if (scale >= scale_needed) {
 				if (scale < minscale) {
 					minscale = scale;
@@ -1007,6 +1016,18 @@ static int dspi_transfer_one_message(struct spi_controller *ctlr,
 	return status;
 }
 
+static int dspi_set_mtf(struct fsl_dspi *dspi)
+{
+	if (!spi_controller_is_slave(dspi->ctlr)) {
+		if (dspi->mtf_enabled)
+			regmap_update_bits(dspi->regmap, SPI_MCR, SPI_MCR_MTFE, SPI_MCR_MTFE);
+		else
+			regmap_update_bits(dspi->regmap, SPI_MCR, SPI_MCR_MTFE, 0);
+	}
+
+	return 0;
+}
+
 static int dspi_setup(struct spi_device *spi)
 {
 	struct fsl_dspi *dspi = spi_controller_get_devdata(spi->controller);
@@ -1039,7 +1060,15 @@ static int dspi_setup(struct spi_device *spi)
 	}
 
 	clkrate = clk_get_rate(dspi->clk);
-	hz_to_spi_baud(&pbr, &br, spi->max_speed_hz, clkrate);
+
+	if (is_s32gen1_dspi(dspi) && spi->max_speed_hz > SPI_25MHZ)
+		dspi->mtf_enabled = true;
+	else
+		dspi->mtf_enabled = false;
+
+	dspi_set_mtf(dspi);
+
+	hz_to_spi_baud(&pbr, &br, spi->max_speed_hz, clkrate, dspi->mtf_enabled);
 
 	/* Set PCS to SCK delay scale values */
 	ns_delay_scale(&pcssck, &cssck, cs_sck_delay, clkrate);
@@ -1061,6 +1090,9 @@ static int dspi_setup(struct spi_device *spi)
 				  SPI_CTAR_PBR(pbr) |
 				  SPI_CTAR_BR(br);
 
+		if (dspi->mtf_enabled)
+			chip->ctar_val |= SPI_CTAR_DBR;
+
 		if (spi->mode & SPI_LSB_FIRST)
 			chip->ctar_val |= SPI_CTAR_LSBFE;
 	}
@@ -1203,6 +1235,8 @@ static int dspi_resume(struct device *dev)
 			dev_err(dev, "failed to initialize dspi\n");
 			return ret;
 		}
+
+		dspi_set_mtf(dspi);
 	}
 
 	if (dspi->irq)
-- 
2.17.1

