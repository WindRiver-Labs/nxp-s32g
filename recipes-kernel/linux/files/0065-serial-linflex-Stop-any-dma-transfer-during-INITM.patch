From a3385f9551e8dac912afa1c8ffb585db4b346081 Mon Sep 17 00:00:00 2001
From: Larisa Grigore <larisa.grigore@nxp.com>
Date: Fri, 5 Feb 2021 17:19:18 +0200
Subject: [PATCH 65/78] serial:linflex: Stop any dma transfer during INITM

set_termios can be called while a DMA transfer is in progress
(during a restart for example).
Make sure all message transfers to and from the LIN bus are stopped
otherwise Linflex may not be able to recover properly after INIT mode
is exited.

Issue: ALB-6257, ALB-6375
Signed-off-by: Larisa Grigore <larisa.grigore@nxp.com>
---
 drivers/tty/serial/fsl_linflexuart.c | 31 +++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/fsl_linflexuart.c b/drivers/tty/serial/fsl_linflexuart.c
index 350447d0f6ca..4f6b28573d14 100644
--- a/drivers/tty/serial/fsl_linflexuart.c
+++ b/drivers/tty/serial/fsl_linflexuart.c
@@ -948,15 +948,19 @@ linflex_set_termios(struct uart_port *port, struct ktermios *termios,
 	struct linflex_port *sport = container_of(port,
 					struct linflex_port, port);
 	unsigned long flags;
-	unsigned long cr, old_cr, cr1, gcr;
+	unsigned long cr, old_cr, cr1, gcr, ier;
 	unsigned int old_csize = old ? old->c_cflag & CSIZE : CS8;
 #if !defined(CONFIG_S32GEN1_EMULATOR)
 	unsigned int baud;
 	unsigned long ibr, fbr, divisr, dividr;
 #endif
+	struct circ_buf *xmit;
 
 	spin_lock_irqsave(&sport->port.lock, flags);
 
+	linflex_stop_rx(port);
+	linflex_stop_tx(port);
+
 	cr = old_cr = readl(sport->port.membase + UARTCR) &
 		~(LINFLEXD_UARTCR_RXEN | LINFLEXD_UARTCR_TXEN);
 
@@ -1112,7 +1116,32 @@ linflex_set_termios(struct uart_port *port, struct ktermios *termios,
 	if ((jiffies - INITIAL_JIFFIES) / HZ > 10)
 		linflex_string_write(sport, "", 1);
 
+	/* Re-enable the interrupts if case. */
+	ier = readl(sport->port.membase + LINIER);
+	if (!sport->dma_rx_use)
+		ier |= LINFLEXD_LINIER_DRIE;
+
+	if (!sport->dma_tx_use)
+		ier |= LINFLEXD_LINIER_DTIE;
+
+	if (!sport->dma_rx_use || !sport->dma_tx_use)
+		writel(ier, sport->port.membase + LINIER);
+
+	/* Re-enable the dma transactions if case. */
+	if (sport->dma_rx_use && !linflex_dma_rx(sport)) {
+		timer_setup(&sport->timer, linflex_timer_func, 0);
+		sport->timer.expires = jiffies + sport->dma_rx_timeout;
+		add_timer(&sport->timer);
+	}
+	if (sport->dma_tx_use) {
+		xmit = &sport->port.state->xmit;
+		if (uart_circ_chars_pending(xmit) < WAKEUP_CHARS)
+			uart_write_wakeup(&sport->port);
+
+		linflex_prepare_tx(sport);
+	}
 	spin_unlock_irqrestore(&sport->port.lock, flags);
+
 #endif /* CONFIG_S32V234_PALLADIUM */
 }
 
-- 
2.25.1

