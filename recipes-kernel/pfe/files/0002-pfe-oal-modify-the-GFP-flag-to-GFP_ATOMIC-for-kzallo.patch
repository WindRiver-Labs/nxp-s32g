From e1368cc3f80cc772c30535790e14c924431d429b Mon Sep 17 00:00:00 2001
From: MengLi <meng.li@windriver.com>
Date: Fri, 14 May 2021 15:07:40 +0800
Subject: [PATCH 2/2] pfe: oal: modify the GFP flag to GFP_ATOMIC for kzalloc

In PFE, when a new mac address added into its internal DB,
the oal_mm_malloc() function will be called, in this function,
standard kzalloc() will be called to allocate memory with
flag GFP_KERNEL.

This will cause the following calltrace with kernel config
CONFIG_DEBUG_ATOMIC_SLEEP enabled:

        Call trace:
         dump_backtrace+0x0/0x184
         show_stack+0x28/0x34
         dump_stack+0xd0/0x12c
         ___might_sleep+0x1a4/0x244
         __might_sleep+0x5c/0x90
         __kmalloc+0x2b4/0x440
         oal_mm_malloc+0x28/0x34 [pfeng]
         pfe_emac_addr_db_add+0x3c/0xb8 [pfeng]
         pfe_emac_add_addr+0x160/0x1bc [pfeng]
         pfe_phy_if_add_mac_addr+0x74/0x168 [pfeng]
         pfe_log_if_add_mac_addr+0x60/0x158 [pfeng]
         pfeng_logif_set_rx_mode+0xac/0x1f0 [pfeng]
         __dev_set_rx_mode+0x60/0xa4
         __dev_open+0x13c/0x1b0
         __dev_change_flags+0x1b4/0x220
         dev_change_flags+0x40/0x80
         devinet_ioctl+0x674/0x6e4
         inet_ioctl+0x1dc/0x260
         sock_do_ioctl+0x58/0x230
         sock_ioctl+0x1f4/0x494
         do_vfs_ioctl+0x344/0x420
         ksys_ioctl+0x88/0xc0
         __arm64_sys_ioctl+0x2c/0xd0
         el0_svc_common.constprop.0+0x78/0x13c
         el0_svc_handler+0x80/0xa0
         el0_svc+0x8/0x208

because before adding the mac address, the netif_addr_lock_bh()
will get dev->addr_list_lock to protect the mac address
adding progress, while GFP_KERNEL may sleep when allocating memory.
So change the GFP_KERNEL to GFP_ATOMIC to fix it.

Upstream-Status: Pengding

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sw/pfe_platform/src/pfe_emac.c   | 2 +-
 sw/pfe_platform/src/pfe_mac_db.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/sw/pfe_platform/src/pfe_emac.c b/sw/pfe_platform/src/pfe_emac.c
index 3390f96..c329692 100644
--- a/sw/pfe_platform/src/pfe_emac.c
+++ b/sw/pfe_platform/src/pfe_emac.c
@@ -151,7 +151,7 @@ static errno_t pfe_emac_addr_db_add(pfe_emac_t *emac, const pfe_mac_addr_t addr,
 #endif /* PFE_CFG_NULL_ARG_CHECK */
 
 	/*	Create new list entry */
-	entry = oal_mm_malloc(sizeof(pfe_mac_addr_db_entry_t));
+	entry = kzalloc(sizeof(pfe_mac_addr_db_entry_t), GFP_ATOMIC);
 	if (NULL == entry)
 	{
 		NXP_LOG_ERROR("oal_mm_malloc() failed\n");
diff --git a/sw/pfe_platform/src/pfe_mac_db.c b/sw/pfe_platform/src/pfe_mac_db.c
index 00a973a..475d653 100644
--- a/sw/pfe_platform/src/pfe_mac_db.c
+++ b/sw/pfe_platform/src/pfe_mac_db.c
@@ -208,7 +208,7 @@ errno_t pfe_mac_db_add_addr(pfe_mac_db_t *db, const pfe_mac_addr_t addr, pfe_drv
 	if (NULL == entry)
 	{
 		/*	Add address to local list */
-		entry = oal_mm_malloc(sizeof(pfe_mac_db_list_entry_t));
+		entry = kzalloc(sizeof(pfe_mac_db_list_entry_t), GFP_ATOMIC);
 		if (NULL == entry)
 		{
 			NXP_LOG_WARNING("Memory allocation failed\n");
-- 
2.17.1

