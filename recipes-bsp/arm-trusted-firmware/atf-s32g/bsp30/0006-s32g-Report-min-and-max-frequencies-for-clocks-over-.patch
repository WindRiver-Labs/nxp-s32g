From 39661be01e3c09c2f0ec4fce504fbe6de8a2d8db Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 22 Jun 2021 12:17:38 +0300
Subject: [PATCH 6/7] s32g: Report min and max frequencies for clocks over SCMI

Describe the clocks over SCMI using a name and an allowed frequency
range [min-max] instead of a single rate described in device tree.

Upstream-Status: Pending

Issue: ALB-7362
Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32g/clk/get_rate.c               | 47 +++++++++++++++----
 drivers/nxp/s32g/clk/s32g274a_scmi_ids.c      |  3 +-
 drivers/nxp/s32g/clk/s32gen1_scmi_clk.c       |  5 +-
 drivers/nxp/s32g/clk/s32gen1_scmi_ids.c       |  3 +-
 .../drivers/nxp/s32g/clk/s32gen1_clk_funcs.h  |  2 +
 plat/nxp/s32g/s32g_scmi_clk.c                 |  2 +-
 6 files changed, 49 insertions(+), 13 deletions(-)

diff --git a/drivers/nxp/s32g/clk/get_rate.c b/drivers/nxp/s32g/clk/get_rate.c
index cf9e2f05c..3cecc1ebf 100644
--- a/drivers/nxp/s32g/clk/get_rate.c
+++ b/drivers/nxp/s32g/clk/get_rate.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <clk/mc_cgm_regs.h>
 #include <clk/s32gen1_clk_funcs.h>
@@ -321,26 +321,57 @@ unsigned long get_module_rate(struct s32gen1_clk_obj *module,
 	return 0;
 }
 
-unsigned long s32gen1_get_rate(struct clk *c)
+static struct s32gen1_clk *get_leaf_clk(struct clk *c)
 {
 	struct s32gen1_clk *clk;
-	struct s32gen1_clk_priv *priv;
 
 	if (!c)
-		return 0;
-
-	priv = s32gen1_get_clk_priv(c);
+		return NULL;
 
 	clk = get_clock(c->id);
 	if (!clk) {
 		ERROR("Invalid clock\n");
-		return 0;
+		return NULL;
 	}
 
 	if (clk->desc.type != s32gen1_clk_t) {
 		ERROR("Invalid clock type: %d\n", clk->desc.type);
-		return 0;
+		return NULL;
 	}
 
+	return clk;
+}
+
+unsigned long s32gen1_get_rate(struct clk *c)
+{
+	struct s32gen1_clk *clk;
+	struct s32gen1_clk_priv *priv;
+
+	priv = s32gen1_get_clk_priv(c);
+
+	clk = get_leaf_clk(c);
+	if (!clk)
+		return 0;
+
 	return get_module_rate(&clk->desc, priv);
 }
+
+unsigned long s32gen1_get_maxrate(struct clk *c)
+{
+	struct s32gen1_clk *clk = get_leaf_clk(c);
+
+	if (!clk)
+		return 0;
+
+	return clk->max_freq;
+}
+
+unsigned long s32gen1_get_minrate(struct clk *c)
+{
+	struct s32gen1_clk *clk = get_leaf_clk(c);
+
+	if (!clk)
+		return 0;
+
+	return clk->min_freq;
+}
diff --git a/drivers/nxp/s32g/clk/s32g274a_scmi_ids.c b/drivers/nxp/s32g/clk/s32g274a_scmi_ids.c
index 3c56fe73f..f0bec6b7a 100644
--- a/drivers/nxp/s32g/clk/s32g274a_scmi_ids.c
+++ b/drivers/nxp/s32g/clk/s32g274a_scmi_ids.c
@@ -444,7 +444,8 @@ int plat_scmi_clk_get_rates(struct clk *clk, unsigned long *rates,
 	}
 
 	sclock.id = id;
-	rates[0] = s32gen1_get_rate(&sclock);
+	rates[0] = s32gen1_get_minrate(&sclock);
+	rates[1] = s32gen1_get_maxrate(&sclock);
 
 	return 0;
 }
diff --git a/drivers/nxp/s32g/clk/s32gen1_scmi_clk.c b/drivers/nxp/s32g/clk/s32gen1_scmi_clk.c
index fda680e91..142a02ca2 100644
--- a/drivers/nxp/s32g/clk/s32gen1_scmi_clk.c
+++ b/drivers/nxp/s32g/clk/s32gen1_scmi_clk.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <clk/s32gen1_clk_funcs.h>
 #include <clk/s32gen1_scmi_clk.h>
@@ -149,7 +149,8 @@ int s32gen1_scmi_clk_get_rates(struct clk *clk, unsigned long *rates,
 	if (is_compound)
 		return cc_scmi_clk_get_rates(clk, rates, nrates);
 
-	rates[0] = s32gen1_get_rate(clk);
+	rates[0] = s32gen1_get_minrate(clk);
+	rates[1] = s32gen1_get_maxrate(clk);
 
 	return 0;
 }
diff --git a/drivers/nxp/s32g/clk/s32gen1_scmi_ids.c b/drivers/nxp/s32g/clk/s32gen1_scmi_ids.c
index ff71d6031..b4c46e2c7 100644
--- a/drivers/nxp/s32g/clk/s32gen1_scmi_ids.c
+++ b/drivers/nxp/s32g/clk/s32gen1_scmi_ids.c
@@ -478,7 +478,8 @@ int cc_scmi_clk_get_rates(struct clk *clk, unsigned long *rates,
 	}
 
 	sclock.id = id;
-	rates[0] = s32gen1_get_rate(&sclock);
+	rates[0] = s32gen1_get_minrate(&sclock);
+	rates[1] = s32gen1_get_maxrate(&sclock);
 
 	return 0;
 }
diff --git a/include/drivers/nxp/s32g/clk/s32gen1_clk_funcs.h b/include/drivers/nxp/s32g/clk/s32gen1_clk_funcs.h
index b985b6233..0c4e0cd72 100644
--- a/include/drivers/nxp/s32g/clk/s32gen1_clk_funcs.h
+++ b/include/drivers/nxp/s32g/clk/s32gen1_clk_funcs.h
@@ -23,6 +23,8 @@ void s32gen1_enable_partition(struct s32gen1_clk_priv *priv,
 unsigned long s32gen1_get_rate(struct clk *clk);
 unsigned long get_module_rate(struct s32gen1_clk_obj *module,
 			      struct s32gen1_clk_priv *priv);
+unsigned long s32gen1_get_minrate(struct clk *c);
+unsigned long s32gen1_get_maxrate(struct clk *c);
 
 void *get_base_addr(enum s32gen1_clk_source id, struct s32gen1_clk_priv *priv);
 
diff --git a/plat/nxp/s32g/s32g_scmi_clk.c b/plat/nxp/s32g/s32g_scmi_clk.c
index 6ef86e956..e0db078bc 100644
--- a/plat/nxp/s32g/s32g_scmi_clk.c
+++ b/plat/nxp/s32g/s32g_scmi_clk.c
@@ -102,7 +102,7 @@ int32_t plat_scmi_clock_rates_array(unsigned int agent_id, unsigned int scmi_id,
 	struct clk clk;
 	int ret;
 
-	*nb_elts = 1;
+	*nb_elts = 2;
 
 	/* One single rate. Frequency scaling to be added */
 	if (rates == NULL)
-- 
2.17.1

