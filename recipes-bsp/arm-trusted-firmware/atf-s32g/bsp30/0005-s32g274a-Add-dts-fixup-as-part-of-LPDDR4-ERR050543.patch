From 3004e7a2b8d62a660e3daa345c37f87b885af1bc Mon Sep 17 00:00:00 2001
From: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Date: Fri, 11 Jun 2021 16:35:28 +0300
Subject: [PATCH 5/7] s32g274a: Add dts fixup as part of LPDDR4 ERR050543

Upstream-Status: Pending

Issue: ALB-5558
Signed-off-by: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32g/include/s32g_bl_common.h |  5 ++++-
 plat/nxp/s32g/s32g_bl2_el3.c           | 29 +++++++++++++++++++++++++-
 2 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/plat/nxp/s32g/include/s32g_bl_common.h b/plat/nxp/s32g/include/s32g_bl_common.h
index fcf93580e..11e01a0e6 100644
--- a/plat/nxp/s32g/include/s32g_bl_common.h
+++ b/plat/nxp/s32g/include/s32g_bl_common.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -23,6 +23,9 @@
 
 #define UPTR(PTR)			((uintptr_t)(PTR))
 
+/* Used for DDR */
+extern uint8_t polling_needed;
+
 struct s32g_i2c_driver {
 	struct s32g_i2c_bus bus;
 	int fdt_node;
diff --git a/plat/nxp/s32g/s32g_bl2_el3.c b/plat/nxp/s32g/s32g_bl2_el3.c
index f674da419..8beac0527 100644
--- a/plat/nxp/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32g/s32g_bl2_el3.c
@@ -297,6 +297,29 @@ static int ft_fixup_scmi_clks(void *blob)
 	return 0;
 }
 
+static int ft_fixup_ddr_errata(void *blob)
+{
+	int nodeoff, ret;
+
+	if (polling_needed != 1) {
+		return 0;
+	}
+
+	nodeoff = fdt_node_offset_by_compatible(blob, -1, "fsl,s32gen1-ddr-err050543");
+	if (nodeoff < 0) {
+		ERROR("Failed to get offset of 'fsl,s32gen1-ddr-err050543' node\n");
+		return nodeoff;
+	}
+
+	ret = fdt_setprop_string(blob, nodeoff, "status", "okay");
+	if (ret) {
+		ERROR("Failed to enable 'fsl,s32gen1-ddr-err050543' node\n");
+		return ret;
+	}
+
+	return 0;
+}
+
 static int ft_fixups(void *blob)
 {
 	size_t size = fdt_totalsize(blob);
@@ -306,9 +329,13 @@ static int ft_fixups(void *blob)
 	fdt_set_totalsize(blob, size);
 
 	ret = ft_fixup_scmi_clks(blob);
+	if (ret)
+		goto out;
 
-	flush_dcache_range((uintptr_t)blob, size);
+	ret = ft_fixup_ddr_errata(blob);
 
+out:
+	flush_dcache_range((uintptr_t)blob, size);
 	return ret;
 }
 
-- 
2.17.1

