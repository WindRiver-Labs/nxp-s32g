From 9a5461168a06acc5d8adf6675a4fffca37948988 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Thu, 14 Oct 2021 11:26:28 +0300
Subject: [PATCH 16/24] s32g: Add an accessory function for lockstep check

Issue: ALB-7955
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32g/include/s32g_bl_common.h | 2 ++
 plat/nxp/s32g/s32g_bl_common.c         | 8 ++++++++
 plat/nxp/s32g/s32g_ncore.c             | 8 ++++----
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/plat/nxp/s32g/include/s32g_bl_common.h b/plat/nxp/s32g/include/s32g_bl_common.h
index b9ac14915..f23ba2889 100644
--- a/plat/nxp/s32g/include/s32g_bl_common.h
+++ b/plat/nxp/s32g/include/s32g_bl_common.h
@@ -28,6 +28,8 @@ struct s32g_i2c_driver {
 	int fdt_node;
 };
 
+bool is_lockstep_enabled(void);
+
 void s32g_gic_setup(void);
 void plat_gic_save(void);
 void plat_gic_restore(void);
diff --git a/plat/nxp/s32g/s32g_bl_common.c b/plat/nxp/s32g/s32g_bl_common.c
index 3ce740709..1be1bc64f 100644
--- a/plat/nxp/s32g/s32g_bl_common.c
+++ b/plat/nxp/s32g/s32g_bl_common.c
@@ -26,6 +26,14 @@
 static struct s32g_i2c_driver i2c_drivers[S32G_MAX_I2C_MODULES];
 static size_t i2c_fill_level;
 
+bool is_lockstep_enabled(void)
+{
+	if (mmio_read_32(GPR_BASE_ADDR + GPR06_OFF) & CA53_LOCKSTEP_EN)
+		return true;
+
+	return false;
+}
+
 unsigned int plat_get_syscnt_freq2(void)
 {
 	return COUNTER_FREQUENCY;
diff --git a/plat/nxp/s32g/s32g_ncore.c b/plat/nxp/s32g/s32g_ncore.c
index 6d5dbf7f6..63e68b608 100644
--- a/plat/nxp/s32g/s32g_ncore.c
+++ b/plat/nxp/s32g/s32g_ncore.c
@@ -1,9 +1,10 @@
 /*
- * Copyright 2019-2020 NXP
+ * Copyright 2019-2021 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
 #include <lib/mmio.h>
+#include <s32g_bl_common.h>
 #include "s32g_ncore.h"
 #include "platform_def.h"
 
@@ -54,9 +55,8 @@ static void set_caiu(uint32_t caiu, bool on)
 		mmio_write_32(DIRUCASER(diru), dirucase);
 	}
 
-	if (caiu == A53_CLUSTER1_CAIU)
-		if (mmio_read_32(GPR_BASE_ADDR + GPR06_OFF) & CA53_LOCKSTEP_EN)
-			return;
+	if (caiu == A53_CLUSTER1_CAIU && is_lockstep_enabled())
+		return;
 
 	caiuidr = mmio_read_32(CAIUIDR(caiu));
 
-- 
2.17.1

