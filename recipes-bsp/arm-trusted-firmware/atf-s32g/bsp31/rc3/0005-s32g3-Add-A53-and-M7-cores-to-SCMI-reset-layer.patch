From 000a84851dc5220b0e1ae7d40c1b0af7e4a05011 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 20 Sep 2021 16:33:03 +0300
Subject: [PATCH 05/24] s32g3: Add A53 and M7 cores to SCMI reset layer

Issue: ALB-7721
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 include/dt-bindings/reset/s32g3-scmi-reset.h  | 24 +++++++++++++++++++
 .../dt-bindings/reset/s32gen1-scmi-reset.h    |  2 +-
 plat/nxp/s32g/s32g_scmi_rst.c                 | 18 ++++++++++++++
 3 files changed, 43 insertions(+), 1 deletion(-)
 create mode 100644 include/dt-bindings/reset/s32g3-scmi-reset.h

diff --git a/include/dt-bindings/reset/s32g3-scmi-reset.h b/include/dt-bindings/reset/s32g3-scmi-reset.h
new file mode 100644
index 000000000..fa302ffaf
--- /dev/null
+++ b/include/dt-bindings/reset/s32g3-scmi-reset.h
@@ -0,0 +1,24 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Copyright 2021 NXP
+ */
+#ifndef __DT_BINDINGS_S32G3_SCMI_RESET_H
+#define __DT_BINDINGS_S32G3_SCMI_RESET_H
+
+#include <dt-bindings/reset/s32g-scmi-reset.h>
+
+#define S32G3_SCMI_RST(N)	((N) + S32G_SCMI_RST_MAX_ID)
+
+#define S32G3_SCMI_RST_CM7_3	S32G3_SCMI_RST(0)
+#define S32G3_SCMI_RST_A53_4	S32G3_SCMI_RST(1)
+#define S32G3_SCMI_RST_A53_5	S32G3_SCMI_RST(2)
+#define S32G3_SCMI_RST_A53_6	S32G3_SCMI_RST(3)
+#define S32G3_SCMI_RST_A53_7	S32G3_SCMI_RST(4)
+#define S32G3_SCMI_RST_MAX_ID	S32G3_SCMI_RST(5)
+
+#if S32GEN1_SCMI_RST_MAX_ID < S32G3_SCMI_RST_MAX_ID
+#error Please increase the value of S32GEN1_SCMI_RST_MAX_ID
+#endif
+
+#endif
+
diff --git a/include/dt-bindings/reset/s32gen1-scmi-reset.h b/include/dt-bindings/reset/s32gen1-scmi-reset.h
index 7112dacab..1b24c2d5a 100644
--- a/include/dt-bindings/reset/s32gen1-scmi-reset.h
+++ b/include/dt-bindings/reset/s32gen1-scmi-reset.h
@@ -27,7 +27,7 @@
 #define S32GEN1_SCMI_RST_A53_3		S32GEN1_SCMI_RST(15)
 
 #define S32GEN1_SCMI_PLAT_RST_BASE_ID	S32GEN1_SCMI_RST(16)
-#define S32GEN1_SCMI_RST_MAX_ID		S32GEN1_PLAT_SCMI_RST(2)
+#define S32GEN1_SCMI_RST_MAX_ID		S32GEN1_PLAT_SCMI_RST(7)
 
 #endif
 
diff --git a/plat/nxp/s32g/s32g_scmi_rst.c b/plat/nxp/s32g/s32g_scmi_rst.c
index 97b63aedc..353eb5338 100644
--- a/plat/nxp/s32g/s32g_scmi_rst.c
+++ b/plat/nxp/s32g/s32g_scmi_rst.c
@@ -5,7 +5,12 @@
 #include <common/debug.h>
 #include <drivers/scmi-msg.h>
 #include <drivers/scmi.h>
+#ifdef PLAT_s32g2
 #include <dt-bindings/reset/s32g-scmi-reset.h>
+#endif
+#ifdef PLAT_s32g3
+#include <dt-bindings/reset/s32g3-scmi-reset.h>
+#endif
 
 struct reset_entry {
 	const char *name;
@@ -34,10 +39,23 @@ static const struct reset_entry reset_table[] = {
 	[S32GEN1_SCMI_RST_SERDES0] = PERIPH_RESET(5, "serdes0"),
 	[S32GEN1_SCMI_RST_PCIE1] = PERIPH_RESET(16, "pcie1"),
 	[S32GEN1_SCMI_RST_SERDES1] = PERIPH_RESET(17, "serdes1"),
+#ifdef PLAT_s32g2
 	[S32GEN1_SCMI_RST_A53_0] = PERIPH_RESET(65, "a53_0"),
 	[S32GEN1_SCMI_RST_A53_1] = PERIPH_RESET(66, "a53_1"),
 	[S32GEN1_SCMI_RST_A53_2] = PERIPH_RESET(67, "a53_2"),
 	[S32GEN1_SCMI_RST_A53_3] = PERIPH_RESET(68, "a53_3"),
+#endif
+#ifdef PLAT_s32g3
+	[S32GEN1_SCMI_RST_A53_0] = PERIPH_RESET(65, "a53_0"),
+	[S32GEN1_SCMI_RST_A53_1] = PERIPH_RESET(66, "a53_1"),
+	[S32GEN1_SCMI_RST_A53_2] = PERIPH_RESET(69, "a53_2"),
+	[S32GEN1_SCMI_RST_A53_3] = PERIPH_RESET(70, "a53_3"),
+	[S32G3_SCMI_RST_A53_4] = PERIPH_RESET(67, "a53_4"),
+	[S32G3_SCMI_RST_A53_5] = PERIPH_RESET(68, "a53_5"),
+	[S32G3_SCMI_RST_A53_6] = PERIPH_RESET(71, "a53_6"),
+	[S32G3_SCMI_RST_A53_7] = PERIPH_RESET(72, "a53_7"),
+	[S32G3_SCMI_RST_CM7_3] = PERIPH_RESET(6, "cm7_3"),
+#endif
 	/* PFE and LLCE cannot be reset as an independent peripherals */
 	[S32G_SCMI_RST_PFE] = PART_RESET(2, "pfe"),
 	[S32G_SCMI_RST_LLCE] = PART_RESET(3, "llce"),
-- 
2.17.1

