From e02ccdbe30fb138eb482fe81b81601aafb347431 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Tue, 19 May 2020 07:05:02 +0300
Subject: [PATCH 119/269] s32g274a: Enable VR5510 driver

Issue: ALB-4907
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 fdts/s32g274aevb.dts      |  24 ++++++++
 plat/s32g/platform.mk     |  13 +++--
 plat/s32g/s32g274a_bl31.c | 117 +++++++++++++++++++++++++++++++++++---
 3 files changed, 142 insertions(+), 12 deletions(-)

diff --git a/fdts/s32g274aevb.dts b/fdts/s32g274aevb.dts
index fd0708c08..2fdf083f7 100644
--- a/fdts/s32g274aevb.dts
+++ b/fdts/s32g274aevb.dts
@@ -3,6 +3,8 @@
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
+#include <dt-bindings/reset/s32gen1-wkpu.h>
+
 /dts-v1/;
 
 / {
@@ -19,6 +21,28 @@
 		#address-cells = <1>;
 		#size-cells = <0>;
 		reg = <0x402DC000 0x10000>;
+	};
+};
+
+/* PMIC */
+&i2c4 {
+	status = "okay";
+	clock-frequency=<100000>;
+
+	vr5510@20 {
+		compatible = "fsl,vr5510";
+		reg = <0x20>;
 		status = "okay";
 	};
+
+	vr5510_fsu@21 {
+		compatible = "fsl,vr5510";
+		reg = <0x21>;
+		status = "okay";
+	};
+
+};
+
+&wkpu {
+	status = "okay";
 };
diff --git a/plat/s32g/platform.mk b/plat/s32g/platform.mk
index 002d73d97..5de64d7c3 100644
--- a/plat/s32g/platform.mk
+++ b/plat/s32g/platform.mk
@@ -17,7 +17,8 @@ PLAT_INCLUDES		+= -Iplat/s32g/include \
 			   -Iinclude/lib \
 			   -Iinclude/lib/libc \
 			   -Iinclude/drivers \
-			   -Iinclude/lib/psci
+			   -Iinclude/lib/psci \
+			   -Iinclude/drivers/nxp/s32g
 
 BL2_AT_EL3		:= 1
 
@@ -29,6 +30,8 @@ PLAT_BL_COMMON_SOURCES	+= plat/s32g/s32g_lowlevel_common.S \
 			   plat/s32g/s32g274a_bl_common.c \
 			   plat/s32g/s32g_dt.c \
 			   drivers/nxp/s32g/i2c/s32g274a_i2c.c \
+			   drivers/delay_timer/delay_timer.c \
+			   drivers/delay_timer/generic_delay_timer.c \
 			   lib/cpus/aarch64/cortex_a53.S
 
 BL1_SOURCES		+= plat/s32g/s32g_ssram_bl1.c \
@@ -43,8 +46,6 @@ BL2_SOURCES		+= plat/s32g/s32g_lowlevel_bl2.S \
 			   plat/s32g/s32g274a_storage.c \
 			   plat/s32g/s32g274a_edma.c \
 			   drivers/io/io_storage.c \
-			   drivers/delay_timer/delay_timer.c \
-			   drivers/delay_timer/generic_delay_timer.c \
 			   common/desc_image_load.c \
 			   drivers/mmc/mmc.c \
 			   drivers/nxp/s32g/io/io_mmc.c \
@@ -61,9 +62,13 @@ BL31_SOURCES		+= plat/s32g/s32g274a_bl31.c \
 			   plat/common/plat_gicv3.c \
 			   drivers/arm/gic/v3/gicv3_main.c \
 			   drivers/arm/gic/v3/gicv3_helpers.c \
-			   drivers/arm/gic/common/gic_common.c
+			   drivers/arm/gic/common/gic_common.c \
+			   lib/utils/crc8.c \
+			   drivers/nxp/s32g/pmic/vr5510.c
+
 BL31_SOURCES		+= plat/s32g/bl31_lowlevel.S \
 			   plat/s32g/include/plat_macros.S
+
 BL31_SOURCES		+= ${XLAT_TABLES_LIB_SRCS}
 
 # Device tree
diff --git a/plat/s32g/s32g274a_bl31.c b/plat/s32g/s32g274a_bl31.c
index f79710b83..ac389f1b0 100644
--- a/plat/s32g/s32g274a_bl31.c
+++ b/plat/s32g/s32g274a_bl31.c
@@ -7,26 +7,37 @@
 #include <arch_helpers.h>
 #include <assert.h>
 #include <common/bl_common.h>
-#include <psci.h>
 #include <drivers/arm/gicv3.h>
-#include <lib/xlat_tables/xlat_tables_v2.h>
 #include <lib/mmio.h>
+#include <lib/xlat_tables/xlat_tables_v2.h>
+#include <libfdt.h>
+#include <psci.h>
 
+#include "drivers/generic_delay_timer.h"
+#include "i2c/s32g274a_i2c.h"
 #include "platform_def.h"
-#include "s32g_mc_me.h"
-#include "s32g_mc_rgm.h"
+#include "pmic/vr5510.h"
+#include "s32g274a_pm.h"
+#include "s32g_clocks.h"
+#include "s32g_dt.h"
 #include "s32g_linflexuart.h"
 #include "s32g_lowlevel.h"
-#include "s32g_xrdc.h"
-#include "s32g_clocks.h"
-#include "s32g_pinctrl.h"
+#include "s32g_mc_me.h"
+#include "s32g_mc_rgm.h"
 #include "s32g_ncore.h"
+#include "s32g_pinctrl.h"
+#include "s32g_xrdc.h"
 
-#include "s32g274a_pm.h"
+#define S32G_MAX_I2C_MODULES 5
 
 #define MMU_ROUND_UP_TO_4K(x)	\
 			(((x) & ~0xfff) == (x) ? (x) : ((x) & ~0xfff) + 0x1000)
 
+struct s32g_i2c_driver {
+	struct s32g_i2c_bus bus;
+	int fdt_node;
+};
+
 IMPORT_SYM(uintptr_t, __RW_START__, BL31_RW_START);
 IMPORT_SYM(uintptr_t, __RW_END__, BL31_RW_END);
 
@@ -174,6 +185,92 @@ void s32g_gic_setup(void)
 	gicv3_cpuif_enable(plat_my_core_pos());
 }
 
+static struct s32g_i2c_driver *init_i2c_module(void *fdt, int fdt_node)
+{
+	static struct s32g_i2c_driver i2c_drivers[S32G_MAX_I2C_MODULES];
+	static size_t fill_level;
+	struct s32g_i2c_driver *driver;
+	struct dt_node_info i2c_info;
+	size_t i;
+	int ret;
+
+	ret = fdt_node_check_compatible(fdt, fdt_node, "fsl,vf610-i2c");
+	if (ret)
+		return NULL;
+
+	for (i = 0; i < fill_level; i++) {
+		if (i2c_drivers[i].fdt_node == fdt_node)
+			return &i2c_drivers[i];
+	}
+
+	if (fill_level >= ARRAY_SIZE(i2c_drivers)) {
+		INFO("Discovered too many instances of I2C\n");
+		return NULL;
+	}
+
+	driver = &i2c_drivers[fill_level];
+
+	dt_fill_device_info(&i2c_info, fdt_node);
+
+	if (i2c_info.base == 0U) {
+		INFO("ERROR i2c base\n");
+		return NULL;
+	}
+
+	driver->fdt_node = fdt_node;
+	s32g_i2c_get_setup_from_fdt(fdt, fdt_node, &driver->bus);
+	s32g_i2c_init(&driver->bus);
+
+	fill_level++;
+	return driver;
+}
+
+static void dt_init_pmic(void)
+{
+	void *fdt;
+	int pmic_node;
+	int i2c_node;
+	struct s32g_i2c_driver *i2c_driver;
+	int ret;
+
+	if (dt_open_and_check() < 0) {
+		INFO("ERROR fdt check\n");
+		return;
+	}
+
+	if (fdt_get_address(&fdt) == 0) {
+		INFO("ERROR fdt\n");
+		return;
+	}
+
+	pmic_node = -1;
+	while (true) {
+		pmic_node = fdt_node_offset_by_compatible(fdt, pmic_node,
+				"fsl,vr5510");
+		if (pmic_node == -1)
+			break;
+
+		i2c_node = fdt_parent_offset(fdt, pmic_node);
+		if (i2c_node == -1) {
+			INFO("Failed to get parent of PMIC node\n");
+			return;
+		}
+
+		i2c_driver = init_i2c_module(fdt, i2c_node);
+		if (i2c_driver == NULL) {
+			INFO("PMIC isn't subnode of an I2C node\n");
+			return;
+		}
+
+		ret = vr5510_register_instance(fdt, pmic_node,
+					       &i2c_driver->bus);
+		if (ret) {
+			INFO("Failed to register VR5510 instance\n");
+			return;
+		}
+	}
+}
+
 void bl31_plat_arch_setup(void)
 {
 	static struct console_s32g console;
@@ -196,6 +293,10 @@ static unsigned int plat_s32g274a_mpidr_to_core_pos(unsigned long mpidr)
 void bl31_platform_setup(void)
 {
 	s32g_gic_setup();
+
+	generic_delay_timer_init();
+
+	dt_init_pmic();
 }
 
 /* TODO: Last-minute modifications before exiting BL31:
-- 
2.17.1

