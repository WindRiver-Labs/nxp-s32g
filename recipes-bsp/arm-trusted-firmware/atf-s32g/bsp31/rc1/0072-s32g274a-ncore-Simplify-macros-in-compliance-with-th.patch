From 95396a24162be6380ea809428f482f219e738434 Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Date: Tue, 28 Jan 2020 14:40:43 +0200
Subject: [PATCH 072/269] s32g274a: ncore: Simplify macros in compliance with
 the refman

NOTE: When we release TF-A, this commit should be squashed to erase from
the history the registers not strictly in the SoC memory map.

Upstream-Status: Pending 

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
Issue: ALB-4497
---
 plat/s32g/include/s32g_ncore.h | 51 ++++++++++++++++++++
 plat/s32g/s32g_ncore.c         | 85 +++++++---------------------------
 2 files changed, 69 insertions(+), 67 deletions(-)

diff --git a/plat/s32g/include/s32g_ncore.h b/plat/s32g/include/s32g_ncore.h
index c773ea351..92ff40770 100644
--- a/plat/s32g/include/s32g_ncore.h
+++ b/plat/s32g/include/s32g_ncore.h
@@ -7,12 +7,63 @@
 #ifndef S32G_NCORE_H
 #define S32G_NCORE_H
 
+#ifndef __ASSEMBLY__
 #include <arch_helpers.h>
+#endif
+#include "platform_def.h"
+
+#define NCORE_BASE_ADDR		(0x50400000)
+#define S32G_NCORE_SIZE		SIZE_1M
 
 #define A53_CLUSTER0_CAIU	(0)
 #define A53_CLUSTER1_CAIU	(1)
 
+#define DIRU(n)			(NCORE_BASE_ADDR + 0x80000)
+#define DIRUSFER(n)		(DIRU(n) + 0x10)
+#define DIRUSFER_SFEN(sf)	BIT(sf)
+#define DIRUCASER(n) (DIRU(n) + 0x40)
+#define DIRUCASER_NCBU(n)	(DIRU(n) + 0x40 + 0xc)
+#define DIRUCASER_CASNPEN(caiu)	BIT(caiu)
+#define DIRUSFMAR(n)		(DIRU(n) + 0x84)
+#define DIRUSFMAR_MNTOPACTV	BIT(0)
+#define DIRUSFMCR(n)		(DIRU(n) + 0x80)
+#define DIRUSFMCR_SFID(sf)	((sf) << 16)
+#define DIRUSFMCR_SFMNTOP_INITIALIZE_ALL_ENTRIES	(0x0)
+
+#define CAIU(n)                 (NCORE_BASE_ADDR + (n * 0x1000))
+#define CAIUIDR(n)		(CAIU(n) + 0xffc)
+#define CAIUIDR_TYPE		(0xf << 16)
+#define CAIUIDR_TYPE_ACE_DVM	(0x0 << 16)
+
+#define	CSR_OFF			(0xff000)
+#define CSR			(NCORE_BASE_ADDR + CSR_OFF)
+#define CSADSER_OFF		(0x40)
+#define CSADSER			(CSR + CSADSER_OFF)
+#define CSADSER_DVMSNPEN(caiu)	BIT(caiu)
+#define CSIDR			(CSR + 0xffc)
+#define CSIDR_NUMSFS_SHIFT	(18)
+#define CSIDR_NUMSFS_MASK	(0x1f << CSIDR_NUMSFS_SHIFT)
+#define CSIDR_NUMSFS(csidr)	(((csidr) & CSIDR_NUMSFS_MASK) \
+				 >> CSIDR_NUMSFS_SHIFT)
+#define CSUIDR			(CSR + 0xff8)
+#define CSUIDR_NUMCMIUS_SHIFT	(24)
+#define CSUIDR_NUMCMIUS_MASK	(0x3f << CSUIDR_NUMCMIUS_SHIFT)
+#define CSUIDR_NUMCMIUS(csuidr)	(((csuidr) & CSUIDR_NUMCMIUS_MASK) \
+				 >> CSUIDR_NUMCMIUS_SHIFT)
+#define CSUIDR_NUMDIRUS_SHIFT	(16)
+#define CSUIDR_NUMDIRUS_MASK	(0x3f << CSUIDR_NUMDIRUS_SHIFT)
+#define CSUIDR_NUMDIRUS(csuidr)	(((csuidr) & CSUIDR_NUMDIRUS_MASK) \
+				 >> CSUIDR_NUMDIRUS_SHIFT)
+#define CSUIDR_NUMNCBUS_SHIFT	(8)
+#define CSUIDR_NUMNCBUS_MASK	(0x3f << CSUIDR_NUMNCBUS_SHIFT)
+#define CSUIDR_NUMNCBUS(csuidr)	(((csuidr) & CSUIDR_NUMNCBUS_MASK) \
+				 >> CSUIDR_NUMNCBUS_SHIFT)
+
+#define CA53_LOCKSTEP_EN	BIT(0)
+
+#ifndef __ASSEMBLY__
 void ncore_caiu_online(uint32_t caiu);
 void ncore_init(void);
+#endif
 
 #endif /* S32G_NCORE_H */
diff --git a/plat/s32g/s32g_ncore.c b/plat/s32g/s32g_ncore.c
index 96ac8412e..fe2b75df4 100644
--- a/plat/s32g/s32g_ncore.c
+++ b/plat/s32g/s32g_ncore.c
@@ -3,71 +3,23 @@
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
+#include <lib/mmio.h>
+#include "s32g_ncore.h"
+#include "platform_def.h"
 
-#include <s32g_ncore.h>
-
-#define NCORE_BASE_ADDR		(0x50400000ul)
-
-#define DIRU(n)			(NCORE_BASE_ADDR + 0x80000 + (n * 0x1000))
-#define DIRUSFER(n)		(DIRU(n) + 0x10)
-#define DIRUSFER_SFEN(sf)	BIT(sf)
-#define DIRUCASER_CAIU(n, caiu) (DIRU(n) + 0x40 + (caiu /  32) * 0x4)
-#define DIRUCASER_NCBU(n)	(DIRU(n) + 0x40 + 0xc)
-#define DIRUCASER_CASNPEN(caiu)	BIT(caiu % 32)
-#define DIRUSFMAR(n)		(DIRU(n) + 0x84)
-#define DIRUSFMAR_MNTOPACTV	BIT(0)
-#define DIRUSFMCR(n)		(DIRU(n) + 0x80)
-#define DIRUSFMCR_SFID(sf)	((sf) << 16)
-#define DIRUSFMCR_SFMNTOP_INITIALIZE_ALL_ENTRIES	(0x0)
-
-#define CAIU(n)                 (NCORE_BASE_ADDR + (n * 0x1000))
-#define CAIUIDR(n)		(CAIU(n) + 0xffc)
-#define CAIUIDR_TYPE		(0xf << 16)
-#define CAIUIDR_TYPE_ACE_DVM	(0x0 << 16)
-
-#define CSR			(NCORE_BASE_ADDR + 0xff000)
-#define CSADSER_CAIU(caiu)	(CSR + 0x40 + (caiu / 32) * 0x4)
-#define CSADSER_NCBU		(CSR + 0x40 + 0xc)
-#define CSADSER_DVMSNPEN(caiu)	BIT(caiu % 32)
-#define CSIDR			(CSR + 0xffc)
-#define CSIDR_NUMSFS_SHIFT	(18)
-#define CSIDR_NUMSFS_MASK	(0x1f << CSIDR_NUMSFS_SHIFT)
-#define CSIDR_NUMSFS(csidr)	(((csidr) & CSIDR_NUMSFS_MASK) \
-				 >> CSIDR_NUMSFS_SHIFT)
-#define CSUIDR			(CSR + 0xff8)
-#define CSUIDR_NUMCMIUS_SHIFT	(24)
-#define CSUIDR_NUMCMIUS_MASK	(0x3f << CSUIDR_NUMCMIUS_SHIFT)
-#define CSUIDR_NUMCMIUS(csuidr)	(((csuidr) & CSUIDR_NUMCMIUS_MASK) \
-				 >> CSUIDR_NUMCMIUS_SHIFT)
-#define CSUIDR_NUMDIRUS_SHIFT	(16)
-#define CSUIDR_NUMDIRUS_MASK	(0x3f << CSUIDR_NUMDIRUS_SHIFT)
-#define CSUIDR_NUMDIRUS(csuidr)	(((csuidr) & CSUIDR_NUMDIRUS_MASK) \
-				 >> CSUIDR_NUMDIRUS_SHIFT)
-#define CSUIDR_NUMNCBUS_SHIFT	(8)
-#define CSUIDR_NUMNCBUS_MASK	(0x3f << CSUIDR_NUMNCBUS_SHIFT)
-#define CSUIDR_NUMNCBUS(csuidr)	(((csuidr) & CSUIDR_NUMNCBUS_MASK) \
-				 >> CSUIDR_NUMNCBUS_SHIFT)
-
-#define A53_GPR_BASE_ADDR	(0x4007c400ul)
-#define GPR06			(A53_GPR_BASE_ADDR + 0x18)
-#define CA53_LOCKSTEP_EN	BIT(0)
-
-#define readl(addr)		(*(uint32_t *)addr)
-#define writel(data, addr)	(*(uint32_t *)addr = (uint32_t)data)
 
 static void ncore_diru_online(uint32_t diru)
 {
 	int numsfs, sf;
 
-	numsfs = CSIDR_NUMSFS(readl(CSIDR)) + 1;
+	numsfs = CSIDR_NUMSFS(mmio_read_32(CSIDR)) + 1;
 	for (sf = 0; sf < numsfs; sf++) {
-		writel(DIRUSFMCR_SFID(sf) |
-		       DIRUSFMCR_SFMNTOP_INITIALIZE_ALL_ENTRIES,
-		       DIRUSFMCR(diru));
-		while (readl(DIRUSFMAR(diru)) & DIRUSFMAR_MNTOPACTV)
+		mmio_write_32(DIRUSFMCR(diru), DIRUSFMCR_SFID(sf) |
+				DIRUSFMCR_SFMNTOP_INITIALIZE_ALL_ENTRIES);
+		while (mmio_read_32(DIRUSFMAR(diru)) & DIRUSFMAR_MNTOPACTV)
 			;
-		writel(readl(DIRUSFER(diru)) | DIRUSFER_SFEN(sf),
-		       DIRUSFER(diru));
+		mmio_write_32(DIRUSFER(diru),
+			      mmio_read_32(DIRUSFER(diru)) | DIRUSFER_SFEN(sf));
 	}
 }
 
@@ -89,20 +41,19 @@ void ncore_caiu_online(uint32_t caiu)
 {
 	int numdirus, diru;
 
-	numdirus = CSUIDR_NUMDIRUS(readl(CSUIDR));
+	numdirus = CSUIDR_NUMDIRUS(mmio_read_32(CSUIDR));
 	for (diru = 0; diru < numdirus; diru++)
-		writel(readl(DIRUCASER_CAIU(diru, caiu)) |
-		       DIRUCASER_CASNPEN(caiu),
-		       DIRUCASER_CAIU(diru, caiu));
+		mmio_write_32(DIRUCASER(diru), mmio_read_32(DIRUCASER(diru)) |
+						DIRUCASER_CASNPEN(caiu));
 
 	if (caiu == A53_CLUSTER1_CAIU)
-		if (readl(GPR06) & CA53_LOCKSTEP_EN)
+		if (mmio_read_32(GPR_BASE_ADDR + GPR06_OFF) & CA53_LOCKSTEP_EN)
 			return;
 
-	if ((readl(CAIUIDR(caiu)) & CAIUIDR_TYPE) == CAIUIDR_TYPE_ACE_DVM)
-		writel(readl(CSADSER_CAIU(caiu)) |
-		       CSADSER_DVMSNPEN(caiu),
-		       CSADSER_CAIU(caiu));
+	if ((mmio_read_32(CAIUIDR(caiu)) &
+				CAIUIDR_TYPE) == CAIUIDR_TYPE_ACE_DVM)
+		mmio_write_32(CSADSER, mmio_read_32(CSADSER) |
+							CSADSER_DVMSNPEN(caiu));
 }
 
 void ncore_init(void)
@@ -110,7 +61,7 @@ void ncore_init(void)
 	uint32_t numdirus, diru;
 	uint32_t numcmius, cmiu;
 	uint32_t numncbus, ncbu;
-	uint32_t csuidr = readl(CSUIDR);
+	uint32_t csuidr = mmio_read_32(CSUIDR);
 
 	numdirus = CSUIDR_NUMDIRUS(csuidr);
 	for (diru = 0; diru < numdirus; diru++)
-- 
2.17.1

