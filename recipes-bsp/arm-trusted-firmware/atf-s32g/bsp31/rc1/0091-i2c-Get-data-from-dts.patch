From 14a79c4100f4d0a90946328a3ed71fdc98b1897d Mon Sep 17 00:00:00 2001
From: Larisa <larisa.grigore@nxp.com>
Date: Wed, 22 Apr 2020 15:30:26 +0300
Subject: [PATCH 091/269] i2c: Get data from dts

Issue: ALB-4872
Upstream-Status: Pending 

Signed-off-by: Larisa Grigore <larisa.grigore@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32g/i2c/s32g274a_i2c.c         | 23 +++++++++++++++++++++
 fdts/s32g274aevb.dts                        | 12 +++++++++++
 include/drivers/nxp/s32g/i2c/s32g274a_i2c.h |  5 +++--
 3 files changed, 38 insertions(+), 2 deletions(-)

diff --git a/drivers/nxp/s32g/i2c/s32g274a_i2c.c b/drivers/nxp/s32g/i2c/s32g274a_i2c.c
index d552c576c..9057d70ca 100644
--- a/drivers/nxp/s32g/i2c/s32g274a_i2c.c
+++ b/drivers/nxp/s32g/i2c/s32g274a_i2c.c
@@ -16,9 +16,11 @@
 
 #include <stdio.h>
 #include <lib/mmio.h>
+#include <libfdt.h>
 #include <drivers/delay_timer.h>
 #include <drivers/nxp/s32g/i2c/s32g274a_i2c.h>
 #include "s32g_clocks.h"
+#include "s32g_dt.h"
 
 #define I2C_QUIRK_FLAG		(1 << 0)
 #define I2C_QUIRK_REG
@@ -502,5 +504,26 @@ int s32g_i2c_init(struct s32g_i2c_bus *bus)
 		return -EINVAL;
 	}
 
+	bus->driver_data = I2C_QUIRK_FLAG;
+	bus->slaveaddr = S32G_DEFAULT_SLAVE;
 	return bus_i2c_set_bus_speed(bus, bus->speed);
 }
+
+/*
+ * @brief  Get I2C setup information from the device tree
+ * @param  fdt: Pointer to the device tree
+ * @param  node: I2C node offset
+ * @param  bus: Ref to the initialization i2c_bus
+ */
+void s32g_i2c_get_setup_from_fdt(void *fdt, int node,
+				 struct s32g_i2c_bus *bus)
+{
+	const fdt32_t *cuint;
+
+	cuint = fdt_getprop(fdt, node, "reg", NULL);
+	bus->base = cuint == NULL ? 0 : fdt32_to_cpu(*cuint);
+
+	cuint = fdt_getprop(fdt, node, "clock-frequency", NULL);
+	bus->speed = cuint == NULL ? S32G_DEFAULT_SPEED : fdt32_to_cpu(*cuint);
+}
+
diff --git a/fdts/s32g274aevb.dts b/fdts/s32g274aevb.dts
index 453440e8e..fd0708c08 100644
--- a/fdts/s32g274aevb.dts
+++ b/fdts/s32g274aevb.dts
@@ -9,4 +9,16 @@
 	compatible = "fsl,s32g274aevb";
 	#address-cells = <1>;
 	#size-cells = <1>;
+
+	aliases {
+		i2c4 = &i2c4;
+	};
+
+	i2c4: i2c@402D8000 {
+		compatible = "fsl,vf610-i2c";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <0x402DC000 0x10000>;
+		status = "okay";
+	};
 };
diff --git a/include/drivers/nxp/s32g/i2c/s32g274a_i2c.h b/include/drivers/nxp/s32g/i2c/s32g274a_i2c.h
index e5dc7e1c6..3e1f23e2e 100644
--- a/include/drivers/nxp/s32g/i2c/s32g274a_i2c.h
+++ b/include/drivers/nxp/s32g/i2c/s32g274a_i2c.h
@@ -13,8 +13,8 @@
 #include <common/debug.h>
 #include <lib/utils_def.h>
 
-#define S32G_I2C4_SPEED 100000
-#define S32G_I2C4_SLAVE 0
+#define S32G_DEFAULT_SPEED 100000
+#define S32G_DEFAULT_SLAVE 0
 
 /*
  * Information about i2c controller
@@ -33,6 +33,7 @@ struct s32g_i2c_bus {
 	int             slaveaddr;
 };
 
+void s32g_i2c_get_setup_from_fdt(void *fdt, int node, struct s32g_i2c_bus *bus);
 int s32g_i2c_init(struct s32g_i2c_bus *bus);
 int s32g_i2c_read(struct s32g_i2c_bus *bus, uint8_t chip,
 		unsigned int addr, int alen, uint8_t *buffer,
-- 
2.17.1

