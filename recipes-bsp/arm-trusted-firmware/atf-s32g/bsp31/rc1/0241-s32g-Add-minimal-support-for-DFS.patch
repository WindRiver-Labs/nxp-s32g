From 076a886fbe2cfff0c30dc87bee1512b97fe07f22 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 22 Jun 2021 16:31:25 +0300
Subject: [PATCH 241/269] s32g: Add minimal support for DFS

This DFS support is limited to enabled clocks and can be only
performed if the targeted rate can be obtained by changing the
division factor of the last divider (e.g. MC_CGM dividers)
attached to the clock.

Issue: ALB-7363
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32g/s32g_scmi_clk.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/plat/nxp/s32g/s32g_scmi_clk.c b/plat/nxp/s32g/s32g_scmi_clk.c
index e0db078bc..49eb7a70a 100644
--- a/plat/nxp/s32g/s32g_scmi_clk.c
+++ b/plat/nxp/s32g/s32g_scmi_clk.c
@@ -104,7 +104,6 @@ int32_t plat_scmi_clock_rates_array(unsigned int agent_id, unsigned int scmi_id,
 
 	*nb_elts = 2;
 
-	/* One single rate. Frequency scaling to be added */
 	if (rates == NULL)
 		return SCMI_SUCCESS;
 
@@ -144,23 +143,31 @@ int32_t plat_scmi_clock_set_rate(unsigned int agent_id, unsigned int scmi_id,
 {
 	struct clk_driver *drv;
 	struct clk clk;
+	int ret;
 
 	/* Already running at the requested frequency */
 	if (s32gen1_scmi_clk_is_enabled(scmi_id) &&
 	    plat_scmi_clock_get_rate(agent_id, scmi_id) == rate)
 		return SCMI_SUCCESS;
 
-	/**
-	 * Limitation: The rate of a clock cannot be
-	 * changed once it's enabled
-	 */
-	if (s32gen1_scmi_clk_is_enabled(scmi_id))
-		return SCMI_DENIED;
-
 	drv = get_clk_driver_by_name(S32GEN1_CLK_DRV_NAME);
 	clk.drv = drv;
 	clk.id = scmi_id;
 
+	/**
+	 * Limitation: The rate of a clock cannot be
+	 * changed once it's enabled.
+	 */
+	if (s32gen1_scmi_clk_is_enabled(scmi_id)) {
+		/**
+		 * Best effort. It will only succeed if the
+		 * rate change is limited to a single divider.
+		 */
+		ret = s32gen1_scmi_enable(&clk, false);
+		if (ret)
+			return ret;
+	}
+
 	if (s32gen1_scmi_clk_set_rate(&clk, rate) != rate)
 		return SCMI_INVALID_PARAMETERS;
 
-- 
2.17.1

