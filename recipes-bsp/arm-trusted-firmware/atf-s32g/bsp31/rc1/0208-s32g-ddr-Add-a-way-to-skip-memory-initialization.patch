From 8995b4fde688e0881e0409239189248d38db076d Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Wed, 27 Jan 2021 11:34:21 +0200
Subject: [PATCH 208/269] s32g: ddr: Add a way to skip memory initialization

init_mem parameter should be used to enable or not the DDR memory.

Issue: ALB-5845
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32g/ddr/ddr_init.c          | 2 +-
 drivers/nxp/s32g/ddr/ddr_utils_mmio.c    | 5 +++--
 drivers/nxp/s32g/ddr/ddrss.c             | 2 +-
 include/drivers/nxp/s32g/ddr/ddr_utils.h | 2 +-
 4 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/nxp/s32g/ddr/ddr_init.c b/drivers/nxp/s32g/ddr/ddr_init.c
index c7b8b94b5..2c3d0782e 100644
--- a/drivers/nxp/s32g/ddr/ddr_init.c
+++ b/drivers/nxp/s32g/ddr/ddr_init.c
@@ -63,7 +63,7 @@ uint32_t ddr_init(void)
 			return ret;
 
 		/* Execute post training setup */
-		ret = post_train_setup();
+		ret = post_train_setup(true);
 		if (ret != NO_ERR)
 			return ret;
 	}
diff --git a/drivers/nxp/s32g/ddr/ddr_utils_mmio.c b/drivers/nxp/s32g/ddr/ddr_utils_mmio.c
index 3c2cdd58a..919ac4a38 100644
--- a/drivers/nxp/s32g/ddr/ddr_utils_mmio.c
+++ b/drivers/nxp/s32g/ddr/ddr_utils_mmio.c
@@ -196,7 +196,7 @@ uint32_t enable_axi_ports(void)
  * Post PHY training setup - complementary settings that need to be
  * performed after running the firmware.
  */
-uint32_t post_train_setup(void)
+uint32_t post_train_setup(bool init_mem)
 {
 	uint32_t ret = NO_ERR;
 	uint32_t tmp32;
@@ -277,7 +277,8 @@ uint32_t post_train_setup(void)
 	 * If ECC feature is enabled (ECCCFG0[ecc_mode] > 0)
 	 * initialize memory with the ecc scrubber
 	 */
-	if ((mmio_read_32(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG0) & 0x7) > 0) {
+	if ((mmio_read_32(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG0) & 0x7) > 0 &&
+	    init_mem) {
 		ret = init_memory_ecc_scrubber();
 		if (ret != NO_ERR)
 			return ret;
diff --git a/drivers/nxp/s32g/ddr/ddrss.c b/drivers/nxp/s32g/ddr/ddrss.c
index 88d8699b3..8c9f707e6 100644
--- a/drivers/nxp/s32g/ddr/ddrss.c
+++ b/drivers/nxp/s32g/ddr/ddrss.c
@@ -530,6 +530,6 @@ int ddrss_to_normal_mode(uintptr_t csr_array)
 		return ret;
 	mmio_write_32(MICROCONT_MUX_SEL, LOCK_CSR_ACCESS);
 
-	return post_train_setup();
+	return post_train_setup(false);
 }
 
diff --git a/include/drivers/nxp/s32g/ddr/ddr_utils.h b/include/drivers/nxp/s32g/ddr/ddr_utils.h
index e72779880..c21d760af 100644
--- a/include/drivers/nxp/s32g/ddr/ddr_utils.h
+++ b/include/drivers/nxp/s32g/ddr/ddr_utils.h
@@ -145,7 +145,7 @@ uint32_t set_axi_parity(void);
  * @brief Post PHY train setup - complementary settings
  * that needs to be performed after running the firmware.
  */
-uint32_t post_train_setup(void);
+uint32_t post_train_setup(bool init_mem);
 
 uint32_t wait_firmware_execution(void);
 
-- 
2.17.1

