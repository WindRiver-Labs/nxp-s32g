From c050ac728eb4f5aa9ecb8b2fc806fa517fa1bf2c Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Wed, 15 Jul 2020 06:42:40 +0300
Subject: [PATCH 158/269] s32g: Reset RTC during resume procedure

Reset RTC register to avoid accidental RTC wake-up interrupts.

Issue: ALB-4910
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32g/include/platform_def.h |  3 +++
 plat/nxp/s32g/s32g_resume.c          | 19 +++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/plat/nxp/s32g/include/platform_def.h b/plat/nxp/s32g/include/platform_def.h
index df064ac3c..2945c3768 100644
--- a/plat/nxp/s32g/include/platform_def.h
+++ b/plat/nxp/s32g/include/platform_def.h
@@ -108,8 +108,11 @@
 
 /* RTC definitions space */
 #define S32G_RTC_BASE		0x40060000
+#define RTC_RTCC_OFFSET		0x4
 #define RTC_RTCS_OFFSET		0x8
 #define RTC_RTCS_RTCF		BIT(29)
+#define RTC_APIVAL_OFFSET	0x10
+#define RTC_RTCVAL_OFFSET	0x14
 
 /* Top of the 4GB of physical memory, accessible through the
  * extended memory map.
diff --git a/plat/nxp/s32g/s32g_resume.c b/plat/nxp/s32g/s32g_resume.c
index fed32f88b..d9417842d 100644
--- a/plat/nxp/s32g/s32g_resume.c
+++ b/plat/nxp/s32g/s32g_resume.c
@@ -6,12 +6,28 @@
 #include "s32g_bl_common.h"
 #include "s32g_linflexuart.h"
 #include "s32g_resume.h"
+#include "s32gen1-wkpu.h"
 #include <bl31/bl31.h>		/* for bl31_warm_entrypoint() */
 #include <lib/el3_runtime/context_mgmt.h>
 #include <lib/el3_runtime/cpu_data.h>
+#include <lib/mmio.h>
 
 void s32g_ncore_isol_cluster0(void);
 
+static void reset_rtc(void)
+{
+	uint32_t rtc = S32G_RTC_BASE;
+	uint32_t rtcs;
+
+	mmio_write_32(rtc + RTC_APIVAL_OFFSET, 0x0);
+	mmio_write_32(rtc + RTC_RTCVAL_OFFSET, 0x0);
+
+	mmio_write_32(rtc + RTC_RTCC_OFFSET, 0x0);
+
+	rtcs = mmio_read_32(rtc + RTC_RTCS_OFFSET);
+	mmio_write_32(rtc + RTC_RTCS_OFFSET, rtcs);
+}
+
 void s32g_resume_entrypoint(void)
 {
 	static struct console_s32g console;
@@ -20,6 +36,9 @@ void s32g_resume_entrypoint(void)
 	s32g_ncore_isol_cluster0();
 	s32g_early_plat_init(true);
 
+	reset_rtc();
+	s32gen1_wkpu_reset();
+
 	console_s32g_register(S32G_UART_BASE, S32G_UART_CLOCK_HZ,
 			      S32G_UART_BAUDRATE, &console);
 	plat_gic_restore();
-- 
2.17.1

