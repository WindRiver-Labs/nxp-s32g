From 87ecd302eb719cd0963a86345b08ce999b75e4eb Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Mon, 6 Jul 2020 15:28:30 +0300
Subject: [PATCH 152/269] s32g: Save and restore GIC context

Issue: ALB-4910
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32g/include/s32g_lowlevel.h |  2 ++
 plat/nxp/s32g/platform.mk             |  2 ++
 plat/nxp/s32g/s32g_bl31.c             | 19 +++++++++++++++++++
 plat/nxp/s32g/s32g_psci.c             |  7 +++++++
 plat/nxp/s32g/s32g_resume.c           |  1 +
 5 files changed, 31 insertions(+)

diff --git a/plat/nxp/s32g/include/s32g_lowlevel.h b/plat/nxp/s32g/include/s32g_lowlevel.h
index d234a95d4..36c515ae6 100644
--- a/plat/nxp/s32g/include/s32g_lowlevel.h
+++ b/plat/nxp/s32g/include/s32g_lowlevel.h
@@ -14,6 +14,8 @@ int plat_core_pos_by_mpidr(u_register_t mpidr);
 int plat_is_my_cpu_primary(void);
 void s32g_smp_fixup(void);
 void s32g_gic_setup(void);
+void plat_gic_save(void);
+void plat_gic_restore(void);
 void s32g_early_plat_init(bool skip_ddr_clk);
 
 #endif /* S32G_LOWLEVEL_H */
diff --git a/plat/nxp/s32g/platform.mk b/plat/nxp/s32g/platform.mk
index e0d2ab1b9..414d17029 100644
--- a/plat/nxp/s32g/platform.mk
+++ b/plat/nxp/s32g/platform.mk
@@ -38,6 +38,8 @@ PLAT_BL_COMMON_SOURCES	+= plat/nxp/s32g/s32g_lowlevel_common.S \
 			   drivers/nxp/s32g/i2c/s32g_i2c.c \
 			   drivers/delay_timer/delay_timer.c \
 			   drivers/delay_timer/generic_delay_timer.c \
+			   drivers/arm/gic/v3/gic500.c\
+			   drivers/arm/gic/v3/arm_gicv3_common.c \
 			   lib/cpus/aarch64/cortex_a53.S\
 			   ${BL31SRAM_SRC_DUMP} \
 
diff --git a/plat/nxp/s32g/s32g_bl31.c b/plat/nxp/s32g/s32g_bl31.c
index 7dbb7a280..29ca83379 100644
--- a/plat/nxp/s32g/s32g_bl31.c
+++ b/plat/nxp/s32g/s32g_bl31.c
@@ -42,6 +42,9 @@ struct s32g_i2c_driver {
 IMPORT_SYM(uintptr_t, __RW_START__, BL31_RW_START);
 IMPORT_SYM(uintptr_t, __RW_END__, BL31_RW_END);
 
+static gicv3_redist_ctx_t rdisif_ctxs[PLATFORM_CORE_COUNT];
+static gicv3_dist_ctx_t dist_ctx;
+
 static const mmap_region_t s32g_mmap[] = {
 	MAP_REGION_FLAT(S32G_SSRAM_BASE, S32G_SSRAM_LIMIT - S32G_SSRAM_BASE,
 			 MT_MEMORY | MT_RW | MT_SECURE),
@@ -189,6 +192,22 @@ void s32g_gic_setup(void)
 	gicv3_cpuif_enable(plat_my_core_pos());
 }
 
+void plat_gic_save(void)
+{
+	for (int i = 0; i < PLATFORM_CORE_COUNT; i++)
+		gicv3_rdistif_save(i, &rdisif_ctxs[i]);
+
+	gicv3_distif_save(&dist_ctx);
+}
+
+void plat_gic_restore(void)
+{
+	gicv3_distif_init_restore(&dist_ctx);
+
+	for (int i = 0; i < PLATFORM_CORE_COUNT; i++)
+		gicv3_rdistif_init_restore(i, &rdisif_ctxs[i]);
+}
+
 static struct s32g_i2c_driver *init_i2c_module(void *fdt, int fdt_node)
 {
 	static struct s32g_i2c_driver i2c_drivers[S32G_MAX_I2C_MODULES];
diff --git a/plat/nxp/s32g/s32g_psci.c b/plat/nxp/s32g/s32g_psci.c
index 88d9e8dd2..42c3c9444 100644
--- a/plat/nxp/s32g/s32g_psci.c
+++ b/plat/nxp/s32g/s32g_psci.c
@@ -260,6 +260,7 @@ static void __dead2 s32g_pwr_domain_pwr_down_wfi(
 					const psci_power_state_t *target_state)
 {
 	unsigned int pos = plat_my_core_pos();
+	unsigned int i;
 
 	NOTICE("S32G TF-A: %s: cpu = %u\n", __func__, pos);
 
@@ -273,6 +274,11 @@ static void __dead2 s32g_pwr_domain_pwr_down_wfi(
 		plat_panic_handler();
 	}
 
+	for (i = 0; i < PLATFORM_CORE_COUNT; i++) {
+		gicv3_cpuif_disable(i);
+	}
+
+	plat_gic_save();
 	set_warm_entry();
 	prepare_vr5510();
 
@@ -313,6 +319,7 @@ static void s32g_pwr_domain_suspend_finish(
 					const psci_power_state_t *target_state)
 {
 	NOTICE("S32G TF-A: %s\n", __func__);
+	gicv3_cpuif_enable(plat_my_core_pos());
 }
 
 static void s32g_pwr_domain_suspend(const psci_power_state_t *target_state)
diff --git a/plat/nxp/s32g/s32g_resume.c b/plat/nxp/s32g/s32g_resume.c
index e0b4fd448..08ca24651 100644
--- a/plat/nxp/s32g/s32g_resume.c
+++ b/plat/nxp/s32g/s32g_resume.c
@@ -22,5 +22,6 @@ void s32g_resume_entrypoint(void)
 
 	console_s32g_register(S32G_UART_BASE, S32G_UART_CLOCK_HZ,
 			      S32G_UART_BAUDRATE, &console);
+	plat_gic_restore();
 	bl31_warm_entrypoint();
 }
-- 
2.17.1

