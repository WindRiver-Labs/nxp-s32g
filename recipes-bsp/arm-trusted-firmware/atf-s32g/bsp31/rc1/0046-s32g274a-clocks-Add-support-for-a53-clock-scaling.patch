From 611612f1d9b05446feb91d61fbb7798814b43eaf Mon Sep 17 00:00:00 2001
From: Dan Nica <dan.nica@nxp.com>
Date: Wed, 18 Dec 2019 11:30:07 +0200
Subject: [PATCH 046/269] s32g274a: clocks: Add support for a53 clock scaling

Issue: ALB-4296
Upstream-Status: Pending 

Signed-off-by: Dan Nica <dan.nica@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/s32g/include/s32g_clocks.h | 19 +++++++++++-
 plat/s32g/s32g_clocks.c         | 54 +++++++++++++++++++++++++++++++--
 2 files changed, 70 insertions(+), 3 deletions(-)

diff --git a/plat/s32g/include/s32g_clocks.h b/plat/s32g/include/s32g_clocks.h
index 271133057..7c681d25a 100644
--- a/plat/s32g/include/s32g_clocks.h
+++ b/plat/s32g/include/s32g_clocks.h
@@ -64,6 +64,13 @@ enum s32g_pll_type {
 /* Number of dividers for each PLL */
 static const uint32_t s32g_pll_phi_nr[S32G_PLL_NR] = {2, 8, 2, 1};
 
+/* This should be kept in sync with the CORE_PLL
+ * configuration (MFI, MFN, RDIV). Due to not
+ * having floating point support, it is impossible
+ * to accurately calculate it at runtime.
+ */
+#define CORE_PLL_FVCO	(2000000000ul)
+
 /* Array of parameters for each PLL */
 static const uint32_t s32g_pll_rdiv[S32G_PLL_NR] = {1, 1, 1, 1};
 static const uint32_t s32g_pll_mfi[S32G_PLL_NR] = {50, 50, 60, 40};
@@ -277,10 +284,20 @@ enum s32g_mc_cgm {
 #define MC_CGM_MUXn_CSS_SELSTAT(css)	((MC_CGM_MUXn_CSS_SELSTAT_MASK & (css))\
 					>> MC_CGM_MUXn_CSS_SELSTAT_OFFSET)
 
-#define MC_CGM_MUXn_CSC_SEL_ARM_PLL_PHI0	4
+#define MC_CGM_MUXn_CSC_SEL_CORE_PLL_FIRC	0
+#define MC_CGM_MUXn_CSC_SEL_CORE_PLL_PHI0	4
 #define MC_CGM_MUXn_CSC_SEL_PERIPH_PLL_PHI3	21
 #define MC_CGM_MUXn_CSC_SEL_DDR_PLL_PHI0	36
 
 void s32g_plat_clock_init(void);
 
+#define S32G274A_A53_CORE_CLK_MIN		(48000000ul)
+#define S32G274A_A53_CORE_CLK_MAX		(1000000000ul)
+#define IS_A53_CORE_CLK_VALID(f)	(((f) >= S32G274A_A53_CORE_CLK_MIN) && \
+					 ((f) <= S32G274A_A53_CORE_CLK_MAX))
+
+static const uint32_t core_pll_odiv_supported[] = { 1, 2, 4, 10, 20, 40 };
+
+int s32g_set_a53_core_clk(uint64_t freq);
+
 #endif /* _S32G_CLOCKS_H_ */
diff --git a/plat/s32g/s32g_clocks.c b/plat/s32g/s32g_clocks.c
index ef2886e69..cab195304 100644
--- a/plat/s32g/s32g_clocks.c
+++ b/plat/s32g/s32g_clocks.c
@@ -8,7 +8,7 @@
 #include <assert.h>
 #include "s32g_clocks.h"
 #include "s32g_mc_me.h"
-
+#include <stdbool.h>
 
 static uint64_t plldig_set_refclk(enum s32g_pll_type pll,
 				  enum s32g_refclk refclk)
@@ -275,6 +275,56 @@ int sw_mux_clk_config(uint8_t cgm, uint8_t mux, uint8_t source)
 	return -EIO;
 }
 
+static bool is_a53_core_clk_supported(uint64_t clk)
+{
+	int i;
+
+	if (!IS_A53_CORE_CLK_VALID(clk))
+		return false;
+
+	for (i = 0; i < ARRAY_SIZE(core_pll_odiv_supported); i++) {
+		if ((CORE_PLL_FVCO / clk == core_pll_odiv_supported[i]) &&
+		    (!(CORE_PLL_FVCO % clk)))
+			return true;
+	}
+	return false;
+}
+
+int s32g_set_a53_core_clk(uint64_t clk)
+{
+	uint64_t core_pll_phi_freq[2] = {clk, CORE_PLL_PHI1_FREQ};
+	uint32_t odiv;
+	int i;
+
+	if (!is_a53_core_clk_supported(clk)) {
+		printf("Requested frequency is not supported. Use one of:\n");
+		for (i = 0; i < ARRAY_SIZE(core_pll_odiv_supported); i++) {
+			odiv = core_pll_odiv_supported[i];
+			if (CORE_PLL_FVCO % odiv)
+				continue;
+			if (!IS_A53_CORE_CLK_VALID(CORE_PLL_FVCO / odiv))
+				continue;
+			printf("\t%lu\n", CORE_PLL_FVCO / odiv);
+		}
+		return -EINVAL;
+	}
+
+	sw_mux_clk_config(MC_CGM1, 0,
+			  MC_CGM_MUXn_CSC_SEL_CORE_PLL_FIRC);
+	disable_dfs(S32G_CORE_DFS);
+
+	/* Configure the CORE_PLL */
+	program_pll(S32G_CORE_PLL, S32G_REFCLK_FXOSC, core_pll_phi_freq,
+		    s32g_pll_rdiv[S32G_CORE_PLL], s32g_pll_mfi[S32G_CORE_PLL],
+		    s32g_pll_mfn[S32G_CORE_PLL]);
+	/* Configure the CORE_DFS*/
+	program_dfs(S32G_CORE_DFS, s32g_core_dfs_params);
+	/* Configure the core CGM mux */
+	sw_mux_clk_config(MC_CGM1, 0, MC_CGM_MUXn_CSC_SEL_CORE_PLL_PHI0);
+
+	return 0;
+}
+
 void s32g_plat_clock_init(void)
 {
 	assert(ARRAY_SIZE(s32g_core_pll_phi_freq) ==
@@ -302,7 +352,7 @@ void s32g_plat_clock_init(void)
 	/* Configure the CORE_DFS) */
 	program_dfs(S32G_CORE_DFS, s32g_core_dfs_params);
 	/* Configure the core CGM mux */
-	sw_mux_clk_config(MC_CGM1, 0, MC_CGM_MUXn_CSC_SEL_ARM_PLL_PHI0);
+	sw_mux_clk_config(MC_CGM1, 0, MC_CGM_MUXn_CSC_SEL_CORE_PLL_PHI0);
 
 	/* Configure the PERIPH_PLL */
 	program_pll(S32G_PERIPH_PLL, S32G_REFCLK_FXOSC,
-- 
2.17.1

