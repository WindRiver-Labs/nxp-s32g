From 529d2313a405e9ddf1bc0d7ccb39d3e6fae4b308 Mon Sep 17 00:00:00 2001
From: Dan Nica <dan.nica@nxp.com>
Date: Wed, 15 Jan 2020 14:51:15 +0200
Subject: [PATCH 061/269] ddrss: Save a predefined list of CSRs to Standby SRAM

When resuming DDRSS from I/O LP3 Retention Mode, we'll have to restore
those CSRs to the state they had after executing the training
firmware.

Issue: ALB-4507
Upstream-Status: Pending 

Signed-off-by: Dan Nica <dan.nica@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32g/ddr/ddrss.c         |  40 ++++
 drivers/nxp/s32g/ddr/ddrss_regconf.c | 284 +++++++++++++++++++++++++++
 include/drivers/nxp/s32g/ddr/ddrss.h |   3 +
 3 files changed, 327 insertions(+)

diff --git a/drivers/nxp/s32g/ddr/ddrss.c b/drivers/nxp/s32g/ddr/ddrss.c
index f2d231152..4c01b8e63 100644
--- a/drivers/nxp/s32g/ddr/ddrss.c
+++ b/drivers/nxp/s32g/ddr/ddrss.c
@@ -8,6 +8,7 @@
 #include <common/debug.h>
 #include <nxp/s32g/ddr/ddrss.h>
 #include "s32g_mc_rgm.h"
+#include "platform.h"
 
 static inline void write_regconf_16(struct regconf *rc, size_t length)
 {
@@ -62,6 +63,40 @@ static bool run_firmware(void)
 	return (mailbox_read_mail() == MAIL_TRAINING_SUCCESS);
 }
 
+static void store_csr(uintptr_t store_at)
+{
+	int i, j;
+	uint16_t csr;
+	uint64_t ssram_data;
+	extern uintptr_t csr_to_store[];
+	extern size_t csr_to_store_length;
+
+	mmio_write_16(MICROCONTMUXSEL, 0);
+	mmio_write_16(UCCLKHCLKENABLES, HCLKEN_MASK | UCCLKEN_MASK);
+
+	for (i = 0; i < csr_to_store_length / 4; i++) {
+		ssram_data = 0;
+		for (j = 0; j < 4; j++) {
+			csr = mmio_read_16(DDRSS_BASE_ADDR
+					   + csr_to_store[i * 4 + j]);
+			ssram_data |= (uint64_t)csr << (j * 16);
+		}
+		mmio_write_64(store_at, ssram_data);
+		store_at += 8;
+	}
+
+	ssram_data = 0;
+	for (j = 0; j < csr_to_store_length % 4; j++) {
+		csr = mmio_read_16(DDRSS_BASE_ADDR
+				   + csr_to_store[i * 4 + j]);
+		ssram_data |= (uint64_t)csr << (j * 16);
+	}
+	mmio_write_64(store_at, ssram_data);
+
+	mmio_write_16(UCCLKHCLKENABLES, HCLKEN_MASK);
+	mmio_write_16(MICROCONTMUXSEL, MICROCONTMUXSEL_MASK);
+}
+
 void ddrss_init(struct ddrss_conf *ddrss_conf,
 		struct ddrss_firmware *ddrss_firmware)
 {
@@ -108,6 +143,11 @@ void ddrss_init(struct ddrss_conf *ddrss_conf,
 	while (mmio_read_16(CALBUSY) & CALBUSY_MASK)
 		;
 
+	/* Store a predefined list of CSRs in Standby SRAM, to be used
+	 * when resuming the DDRSS from I/O LP3 Retention Mode
+	 */
+	store_csr((uintptr_t)STANDBY_SRAM_BASE);
+
 	mmio_write_32(SWCTL, 0);
 	mmio_write_32(DFIMISC, mmio_read_32(DFIMISC) | DFI_INIT_START_MASK);
 	mmio_write_32(SWCTL, SW_DONE_MASK);
diff --git a/drivers/nxp/s32g/ddr/ddrss_regconf.c b/drivers/nxp/s32g/ddr/ddrss_regconf.c
index 1e865e6d5..fc87f2220 100644
--- a/drivers/nxp/s32g/ddr/ddrss_regconf.c
+++ b/drivers/nxp/s32g/ddr/ddrss_regconf.c
@@ -6,6 +6,290 @@
 #include <lib/utils_def.h>
 #include <nxp/s32g/ddr/ddrss.h>
 
+uintptr_t csr_to_store[] = {
+	0x00001690,	/* DWC_DDRPHYA_MASTER0_VREFINGLOBAL_P0 */
+	0x00001718,	/* DWC_DDRPHYA_MASTER0_PLLCTRL3 */
+	0x0001451c,	/* DWC_DDRPHYA_DBYTE0_DQDQSRCVCNTRL_B0_P0 */
+	0x0001651c,	/* DWC_DDRPHYA_DBYTE1_DQDQSRCVCNTRL_B0_P0 */
+	0x0001851c,	/* DWC_DDRPHYA_DBYTE2_DQDQSRCVCNTRL_B0_P0 */
+	0x0001a51c,	/* DWC_DDRPHYA_DBYTE3_DQDQSRCVCNTRL_B0_P0 */
+	0x00014520,	/* DWC_DDRPHYA_DBYTE0_DQDQSRCVCNTRL_B1_P0 */
+	0x00016520,	/* DWC_DDRPHYA_DBYTE1_DQDQSRCVCNTRL_B1_P0 */
+	0x00018520,	/* DWC_DDRPHYA_DBYTE2_DQDQSRCVCNTRL_B1_P0 */
+	0x0001a520,	/* DWC_DDRPHYA_DBYTE3_DQDQSRCVCNTRL_B1_P0 */
+	0x000003f0,	/* DWC_DDRPHYA_ANIB0_ATXDLY_P0 */
+	0x000023f0,	/* DWC_DDRPHYA_ANIB1_ATXDLY_P0 */
+	0x000043f0,	/* DWC_DDRPHYA_ANIB2_ATXDLY_P0 */
+	0x000063f0,	/* DWC_DDRPHYA_ANIB3_ATXDLY_P0 */
+	0x000146b0,	/* DWC_DDRPHYA_DBYTE0_RXENDLYTG0_U0_P0 */
+	0x000166b0,	/* DWC_DDRPHYA_DBYTE1_RXENDLYTG0_U0_P0 */
+	0x000186b0,	/* DWC_DDRPHYA_DBYTE2_RXENDLYTG0_U0_P0 */
+	0x0001a6b0,	/* DWC_DDRPHYA_DBYTE3_RXENDLYTG0_U0_P0 */
+	0x000146b4,	/* DWC_DDRPHYA_DBYTE0_RXENDLYTG0_U1_P0 */
+	0x000166b4,	/* DWC_DDRPHYA_DBYTE1_RXENDLYTG0_U1_P0 */
+	0x000186b4,	/* DWC_DDRPHYA_DBYTE2_RXENDLYTG0_U1_P0 */
+	0x0001a6b4,	/* DWC_DDRPHYA_DBYTE3_RXENDLYTG0_U1_P0 */
+	0x000146d0,	/* DWC_DDRPHYA_DBYTE0_RXENDLYTG1_U0_P0 */
+	0x000166d0,	/* DWC_DDRPHYA_DBYTE1_RXENDLYTG1_U0_P0 */
+	0x000186d0,	/* DWC_DDRPHYA_DBYTE2_RXENDLYTG1_U0_P0 */
+	0x0001a6d0,	/* DWC_DDRPHYA_DBYTE3_RXENDLYTG1_U0_P0 */
+	0x000146d4,	/* DWC_DDRPHYA_DBYTE0_RXENDLYTG1_U1_P0 */
+	0x000166d4,	/* DWC_DDRPHYA_DBYTE1_RXENDLYTG1_U1_P0 */
+	0x000186d4,	/* DWC_DDRPHYA_DBYTE2_RXENDLYTG1_U1_P0 */
+	0x0001a6d4,	/* DWC_DDRPHYA_DBYTE3_RXENDLYTG1_U1_P0 */
+	0x00014b50,	/* DWC_DDRPHYA_DBYTE0_TXDQSDLYTG0_U1_P0 */
+	0x00016b50,	/* DWC_DDRPHYA_DBYTE1_TXDQSDLYTG0_U1_P0 */
+	0x00018b50,	/* DWC_DDRPHYA_DBYTE2_TXDQSDLYTG0_U1_P0 */
+	0x0001ab50,	/* DWC_DDRPHYA_DBYTE3_TXDQSDLYTG0_U1_P0 */
+	0x00014b4c,	/* DWC_DDRPHYA_DBYTE0_TXDQSDLYTG0_U0_P0 */
+	0x00016b4c,	/* DWC_DDRPHYA_DBYTE1_TXDQSDLYTG0_U0_P0 */
+	0x00018b4c,	/* DWC_DDRPHYA_DBYTE2_TXDQSDLYTG0_U0_P0 */
+	0x0001ab4c,	/* DWC_DDRPHYA_DBYTE3_TXDQSDLYTG0_U0_P0 */
+	0x00014b70,	/* DWC_DDRPHYA_DBYTE0_TXDQSDLYTG1_U1_P0 */
+	0x00016b70,	/* DWC_DDRPHYA_DBYTE1_TXDQSDLYTG1_U1_P0 */
+	0x00018b70,	/* DWC_DDRPHYA_DBYTE2_TXDQSDLYTG1_U1_P0 */
+	0x0001ab70,	/* DWC_DDRPHYA_DBYTE3_TXDQSDLYTG1_U1_P0 */
+	0x00014b6c,	/* DWC_DDRPHYA_DBYTE0_TXDQSDLYTG1_U0_P0 */
+	0x00016b6c,	/* DWC_DDRPHYA_DBYTE1_TXDQSDLYTG1_U0_P0 */
+	0x00018b6c,	/* DWC_DDRPHYA_DBYTE2_TXDQSDLYTG1_U0_P0 */
+	0x0001ab6c,	/* DWC_DDRPHYA_DBYTE3_TXDQSDLYTG1_U0_P0 */
+	0x00014640,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R8 */
+	0x00016640,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R8 */
+	0x00018640,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R8 */
+	0x0001a640,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R8 */
+	0x0001463c,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R7 */
+	0x0001663c,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R7 */
+	0x0001863c,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R7 */
+	0x0001a63c,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R7 */
+	0x00014638,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R6 */
+	0x00016638,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R6 */
+	0x00018638,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R6 */
+	0x0001a638,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R6 */
+	0x00014634,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R5 */
+	0x00016634,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R5 */
+	0x00018634,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R5 */
+	0x0001a634,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R5 */
+	0x00014630,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R4 */
+	0x00016630,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R4 */
+	0x00018630,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R4 */
+	0x0001a630,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R4 */
+	0x0001462c,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R3 */
+	0x0001662c,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R3 */
+	0x0001862c,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R3 */
+	0x0001a62c,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R3 */
+	0x00014628,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R2 */
+	0x00016628,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R2 */
+	0x00018628,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R2 */
+	0x0001a628,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R2 */
+	0x00014624,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R1 */
+	0x00016624,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R1 */
+	0x00018624,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R1 */
+	0x0001a624,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R1 */
+	0x00014620,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG0_R0 */
+	0x00016620,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG0_R0 */
+	0x00018620,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG0_R0 */
+	0x0001a620,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG0_R0 */
+	0x00014664,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R8 */
+	0x00016664,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R8 */
+	0x00018664,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R8 */
+	0x0001a664,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R8 */
+	0x00014660,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R7 */
+	0x00016660,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R7 */
+	0x00018660,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R7 */
+	0x0001a660,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R7 */
+	0x0001465c,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R6 */
+	0x0001665c,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R6 */
+	0x0001865c,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R6 */
+	0x0001a65c,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R6 */
+	0x00014658,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R5 */
+	0x00016658,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R5 */
+	0x00018658,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R5 */
+	0x0001a658,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R5 */
+	0x00014654,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R4 */
+	0x00016654,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R4 */
+	0x00018654,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R4 */
+	0x0001a654,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R4 */
+	0x00014650,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R3 */
+	0x00016650,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R3 */
+	0x00018650,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R3 */
+	0x0001a650,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R3 */
+	0x0001464c,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R2 */
+	0x0001664c,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R2 */
+	0x0001864c,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R2 */
+	0x0001a64c,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R2 */
+	0x00014648,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R1 */
+	0x00016648,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R1 */
+	0x00018648,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R1 */
+	0x0001a648,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R1 */
+	0x00014644,	/* DWC_DDRPHYA_DBYTE0_RXPBDLYTG1_R0 */
+	0x00016644,	/* DWC_DDRPHYA_DBYTE1_RXPBDLYTG1_R0 */
+	0x00018644,	/* DWC_DDRPHYA_DBYTE2_RXPBDLYTG1_R0 */
+	0x0001a644,	/* DWC_DDRPHYA_DBYTE3_RXPBDLYTG1_R0 */
+	0x00014730,	/* DWC_DDRPHYA_DBYTE0_RXCLKDLYTG0_U0_P0 */
+	0x00016730,	/* DWC_DDRPHYA_DBYTE1_RXCLKDLYTG0_U0_P0 */
+	0x00018730,	/* DWC_DDRPHYA_DBYTE2_RXCLKDLYTG0_U0_P0 */
+	0x0001a730,	/* DWC_DDRPHYA_DBYTE3_RXCLKDLYTG0_U0_P0 */
+	0x00014734,	/* DWC_DDRPHYA_DBYTE0_RXCLKDLYTG0_U1_P0 */
+	0x00016734,	/* DWC_DDRPHYA_DBYTE1_RXCLKDLYTG0_U1_P0 */
+	0x00018734,	/* DWC_DDRPHYA_DBYTE2_RXCLKDLYTG0_U1_P0 */
+	0x0001a734,	/* DWC_DDRPHYA_DBYTE3_RXCLKDLYTG0_U1_P0 */
+	0x00014750,	/* DWC_DDRPHYA_DBYTE0_RXCLKDLYTG1_U0_P0 */
+	0x00016750,	/* DWC_DDRPHYA_DBYTE1_RXCLKDLYTG1_U0_P0 */
+	0x00018750,	/* DWC_DDRPHYA_DBYTE2_RXCLKDLYTG1_U0_P0 */
+	0x0001a750,	/* DWC_DDRPHYA_DBYTE3_RXCLKDLYTG1_U0_P0 */
+	0x00014754,	/* DWC_DDRPHYA_DBYTE0_RXCLKDLYTG1_U1_P0 */
+	0x00016754,	/* DWC_DDRPHYA_DBYTE1_RXCLKDLYTG1_U1_P0 */
+	0x00018754,	/* DWC_DDRPHYA_DBYTE2_RXCLKDLYTG1_U1_P0 */
+	0x0001a754,	/* DWC_DDRPHYA_DBYTE3_RXCLKDLYTG1_U1_P0 */
+	0x0001492c,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R8_P0 */
+	0x0001692c,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R8_P0 */
+	0x0001892c,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R8_P0 */
+	0x0001a92c,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R8_P0 */
+	0x00014928,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R7_P0 */
+	0x00016928,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R7_P0 */
+	0x00018928,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R7_P0 */
+	0x0001a928,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R7_P0 */
+	0x00014924,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R6_P0 */
+	0x00016924,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R6_P0 */
+	0x00018924,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R6_P0 */
+	0x0001a924,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R6_P0 */
+	0x00014920,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R5_P0 */
+	0x00016920,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R5_P0 */
+	0x00018920,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R5_P0 */
+	0x0001a920,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R5_P0 */
+	0x0001491c,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R4_P0 */
+	0x0001691c,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R4_P0 */
+	0x0001891c,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R4_P0 */
+	0x0001a91c,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R4_P0 */
+	0x00014918,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R3_P0 */
+	0x00016918,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R3_P0 */
+	0x00018918,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R3_P0 */
+	0x0001a918,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R3_P0 */
+	0x00014914,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R2_P0 */
+	0x00016914,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R2_P0 */
+	0x00018914,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R2_P0 */
+	0x0001a914,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R2_P0 */
+	0x00014910,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R1_P0 */
+	0x00016910,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R1_P0 */
+	0x00018910,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R1_P0 */
+	0x0001a910,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R1_P0 */
+	0x0001490c,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG0_R0_P0 */
+	0x0001690c,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG0_R0_P0 */
+	0x0001890c,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG0_R0_P0 */
+	0x0001a90c,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG0_R0_P0 */
+	0x000149bc,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R8_P0 */
+	0x000169bc,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R8_P0 */
+	0x000189bc,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R8_P0 */
+	0x0001a9bc,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R8_P0 */
+	0x000149b8,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R7_P0 */
+	0x000169b8,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R7_P0 */
+	0x000189b8,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R7_P0 */
+	0x0001a9b8,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R7_P0 */
+	0x000149b4,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R6_P0 */
+	0x000169b4,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R6_P0 */
+	0x000189b4,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R6_P0 */
+	0x0001a9b4,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R6_P0 */
+	0x000149b0,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R5_P0 */
+	0x000169b0,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R5_P0 */
+	0x000189b0,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R5_P0 */
+	0x0001a9b0,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R5_P0 */
+	0x000149ac,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R4_P0 */
+	0x000169ac,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R4_P0 */
+	0x000189ac,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R4_P0 */
+	0x0001a9ac,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R4_P0 */
+	0x000149a8,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R3_P0 */
+	0x000169a8,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R3_P0 */
+	0x000189a8,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R3_P0 */
+	0x0001a9a8,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R3_P0 */
+	0x000149a4,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R2_P0 */
+	0x000169a4,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R2_P0 */
+	0x000189a4,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R2_P0 */
+	0x0001a9a4,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R2_P0 */
+	0x000149a0,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R1_P0 */
+	0x000169a0,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R1_P0 */
+	0x000189a0,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R1_P0 */
+	0x0001a9a0,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R1_P0 */
+	0x0001499c,	/* DWC_DDRPHYA_DBYTE0_TXDQDLYTG1_R0_P0 */
+	0x0001699c,	/* DWC_DDRPHYA_DBYTE1_TXDQDLYTG1_R0_P0 */
+	0x0001899c,	/* DWC_DDRPHYA_DBYTE2_TXDQDLYTG1_R0_P0 */
+	0x0001a99c,	/* DWC_DDRPHYA_DBYTE3_TXDQDLYTG1_R0_P0 */
+	0x0001446c,	/* DWC_DDRPHYA_DBYTE0_DFIMRL_P0 */
+	0x0001646c,	/* DWC_DDRPHYA_DBYTE1_DFIMRL_P0 */
+	0x0001846c,	/* DWC_DDRPHYA_DBYTE2_DFIMRL_P0 */
+	0x0001a46c,	/* DWC_DDRPHYA_DBYTE3_DFIMRL_P0 */
+	0x000015e0,	/* DWC_DDRPHYA_MASTER0_HWTLPCSENA */
+	0x000015e4,	/* DWC_DDRPHYA_MASTER0_HWTLPCSENB */
+	0x00014850,	/* DWC_DDRPHYA_DBYTE0_PPTCTLSTATIC */
+	0x00016850,	/* DWC_DDRPHYA_DBYTE1_PPTCTLSTATIC */
+	0x00018850,	/* DWC_DDRPHYA_DBYTE2_PPTCTLSTATIC */
+	0x0001a850,	/* DWC_DDRPHYA_DBYTE3_PPTCTLSTATIC */
+	0x00001374,	/* DWC_DDRPHYA_MASTER0_PPTTRAINSETUP_P0 */
+	0x00001388,	/* DWC_DDRPHYA_MASTER0_PPTTRAINSETUP2_P0 */
+	0x00014860,	/* DWC_DDRPHYA_DBYTE0_PPTDQSCNTINVTRNTG0_P0 */
+	0x00016860,	/* DWC_DDRPHYA_DBYTE1_PPTDQSCNTINVTRNTG0_P0 */
+	0x00018860,	/* DWC_DDRPHYA_DBYTE2_PPTDQSCNTINVTRNTG0_P0 */
+	0x0001a860,	/* DWC_DDRPHYA_DBYTE3_PPTDQSCNTINVTRNTG0_P0 */
+	0x00014870,	/* DWC_DDRPHYA_DBYTE0_PPTDQSCNTINVTRNTG1_P0 */
+	0x00016870,	/* DWC_DDRPHYA_DBYTE1_PPTDQSCNTINVTRNTG1_P0 */
+	0x00018870,	/* DWC_DDRPHYA_DBYTE2_PPTDQSCNTINVTRNTG1_P0 */
+	0x0001a870,	/* DWC_DDRPHYA_DBYTE3_PPTDQSCNTINVTRNTG1_P0 */
+	0x0000140c,	/* DWC_DDRPHYA_MASTER0_HWTMRL_P0 */
+	0x00001608,	/* DWC_DDRPHYA_MASTER0_DLLGAINCTL_P0 */
+	0x00001618,	/* DWC_DDRPHYA_MASTER0_DLLLOCKPARAM_P0 */
+	0x000003c8,	/* DWC_DDRPHYA_ACSM0_ACSMCTRL13 */
+	0x00000308,	/* DWC_DDRPHYA_ACSM0_ACSMCTRL23 */
+	0x00000c10,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR1_P0 */
+	0x00000c28,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR2_P0 */
+	0x00000c40,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR3_P0 */
+	0x00000c58,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR4_P0 */
+	0x00000c70,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR5_P0 */
+	0x00000c88,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR6_P0 */
+	0x00000ca0,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR7_P0 */
+	0x00000cb8,	/* DWC_DDRPHYA_INITENG0_SEQ0BGPR8_P0 */
+	0x000145fc,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R0 */
+	0x000165fc,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R0 */
+	0x000185fc,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R0 */
+	0x0001a5fc,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R0 */
+	0x00014600,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R1 */
+	0x00016600,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R1 */
+	0x00018600,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R1 */
+	0x0001a600,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R1 */
+	0x00014604,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R2 */
+	0x00016604,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R2 */
+	0x00018604,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R2 */
+	0x0001a604,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R2 */
+	0x00014608,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R3 */
+	0x00016608,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R3 */
+	0x00018608,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R3 */
+	0x0001a608,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R3 */
+	0x0001460c,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R4 */
+	0x0001660c,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R4 */
+	0x0001860c,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R4 */
+	0x0001a60c,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R4 */
+	0x00014610,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R5 */
+	0x00016610,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R5 */
+	0x00018610,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R5 */
+	0x0001a610,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R5 */
+	0x00014614,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R6 */
+	0x00016614,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R6 */
+	0x00018614,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R6 */
+	0x0001a614,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R6 */
+	0x00014618,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R7 */
+	0x00016618,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R7 */
+	0x00018618,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R7 */
+	0x0001a618,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R7 */
+	0x0001461c,	/* DWC_DDRPHYA_DBYTE0_TRAININGINCDECDTSMEN_R8 */
+	0x0001661c,	/* DWC_DDRPHYA_DBYTE1_TRAININGINCDECDTSMEN_R8 */
+	0x0001861c,	/* DWC_DDRPHYA_DBYTE2_TRAININGINCDECDTSMEN_R8 */
+	0x0001a61c,	/* DWC_DDRPHYA_DBYTE3_TRAININGINCDECDTSMEN_R8 */
+	0x000015f4,	/* DWC_DDRPHYA_MASTER0_HWTCAMODE */
+	0x00014430,	/* DWC_DDRPHYA_DBYTE0_TSMBYTE0 */
+	0x00016430,	/* DWC_DDRPHYA_DBYTE1_TSMBYTE0 */
+	0x00018430,	/* DWC_DDRPHYA_DBYTE2_TSMBYTE0 */
+	0x0001a430,	/* DWC_DDRPHYA_DBYTE3_TSMBYTE0 */
+};
+size_t csr_to_store_length = ARRAY_SIZE(csr_to_store);
+
 static struct regconf ddrc_configuration[] = {
 	{ 0x40000, 0x83080020 },
 	{ 0x40010, 0x00000030 },
diff --git a/include/drivers/nxp/s32g/ddr/ddrss.h b/include/drivers/nxp/s32g/ddr/ddrss.h
index 2f0119205..a823f2f79 100644
--- a/include/drivers/nxp/s32g/ddr/ddrss.h
+++ b/include/drivers/nxp/s32g/ddr/ddrss.h
@@ -35,6 +35,9 @@
 #define DWC_DDRPHYA_DRTUB0		(DDRSS_BASE_ADDR + 0xbd0)
 #define UCTWRITEPROT			(DWC_DDRPHYA_DRTUB0 + 0xc)
 #define UCTWRITEPROT_MASK		BIT(0)
+#define UCCLKHCLKENABLES		(DWC_DDRPHYA_DRTUB0 + 0x1c)
+#define HCLKEN_MASK			BIT(1)
+#define UCCLKEN_MASK			BIT(0)
 
 #define DWC_DDRPHYA_INITENG0		(DDRSS_BASE_ADDR + 0xc04)
 #define SEQ0BDISABLEFLAG6		(DWC_DDRPHYA_INITENG0 + 0x110)
-- 
2.17.1

