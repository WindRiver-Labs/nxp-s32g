From 9e0711dc689bce47d68a7ba46927383334193f6d Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Tue, 7 Jul 2020 10:27:09 +0300
Subject: [PATCH 157/269] s32g274ardb: Implement system off callback

Issue: ALB-5115
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 include/drivers/nxp/s32g/pmic/vr5510.h |  1 +
 plat/nxp/s32g/include/s32g_bl_common.h |  3 ++-
 plat/nxp/s32g/s32g_psci.c              | 11 +++++++++--
 plat/nxp/s32g/s32g_vr5510.c            | 21 ++++++++++++++++++++-
 4 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/include/drivers/nxp/s32g/pmic/vr5510.h b/include/drivers/nxp/s32g/pmic/vr5510.h
index 59b14f1a9..c1f61f88d 100644
--- a/include/drivers/nxp/s32g/pmic/vr5510.h
+++ b/include/drivers/nxp/s32g/pmic/vr5510.h
@@ -16,6 +16,7 @@
 
 /* Main Unit */
 #define VR5510_M_SM_CTRL1	2
+#define VR5510_CTRL1_GOTO_OFF		BIT(0)
 #define VR5510_CTRL1_STBY_TIMER_EN	BIT(10)
 #define VR5510_CTRL1_TIMER_STBY_WIN(N)	((N) << 12)
 #define VR5510_CTRL1_TIMER_16MS		VR5510_CTRL1_TIMER_STBY_WIN(0)
diff --git a/plat/nxp/s32g/include/s32g_bl_common.h b/plat/nxp/s32g/include/s32g_bl_common.h
index 108649f0e..537372417 100644
--- a/plat/nxp/s32g/include/s32g_bl_common.h
+++ b/plat/nxp/s32g/include/s32g_bl_common.h
@@ -13,7 +13,8 @@ void s32g_gic_setup(void);
 void plat_gic_save(void);
 void plat_gic_restore(void);
 void s32g_early_plat_init(bool skip_ddr_clk);
-int prepare_pmic(void);
+int pmic_prepare_for_suspend(void);
+void pmic_system_off(void);
 
 void update_core_state(uint32_t core, uint32_t state);
 bool is_last_core(void);
diff --git a/plat/nxp/s32g/s32g_psci.c b/plat/nxp/s32g/s32g_psci.c
index 15c93fabf..3a9d63083 100644
--- a/plat/nxp/s32g/s32g_psci.c
+++ b/plat/nxp/s32g/s32g_psci.c
@@ -153,7 +153,7 @@ static void __dead2 platform_suspend(void)
 
 	plat_gic_save();
 	set_warm_entry();
-	prepare_pmic();
+	pmic_prepare_for_suspend();
 
 	/* Shutting down cores */
 	/* M7 cores */
@@ -250,13 +250,19 @@ static void s32g_pwr_domain_off(const psci_power_state_t *target_state)
 	NOTICE("S32G TF-A: %s\n", __func__);
 }
 
-void __dead2 s32g_system_reset(void)
+static void __dead2 s32g_system_reset(void)
 {
 	NOTICE("S32G TF-A: %s\n", __func__);
 	s32g_destructive_reset();
 	plat_panic_handler();
 }
 
+static void __dead2 s32g_system_off(void)
+{
+	pmic_system_off();
+	plat_panic_handler();
+}
+
 const plat_psci_ops_t s32g_psci_pm_ops = {
 	/* cap: PSCI_CPU_OFF */
 	.pwr_domain_off = s32g_pwr_domain_off,
@@ -272,6 +278,7 @@ const plat_psci_ops_t s32g_psci_pm_ops = {
 	.pwr_domain_suspend_finish = s32g_pwr_domain_suspend_finish,
 	.pwr_domain_pwr_down_wfi = s32g_pwr_domain_pwr_down_wfi,
 	.system_reset = s32g_system_reset,
+	.system_off = s32g_system_off,
 };
 
 int plat_setup_psci_ops(uintptr_t sec_entrypoint,
diff --git a/plat/nxp/s32g/s32g_vr5510.c b/plat/nxp/s32g/s32g_vr5510.c
index ae9ffe4e8..e0ce9aec2 100644
--- a/plat/nxp/s32g/s32g_vr5510.c
+++ b/plat/nxp/s32g/s32g_vr5510.c
@@ -5,7 +5,7 @@
  */
 #include "pmic/vr5510.h"
 
-int prepare_pmic(void)
+int pmic_prepare_for_suspend(void)
 {
 	int ret;
 	vr5510_t mu, fsu;
@@ -105,4 +105,23 @@ int prepare_pmic(void)
 	return 0;
 }
 
+void pmic_system_off(void)
+{
+	int ret;
+	vr5510_t mu;
+
+	uint16_t reg;
+	uint8_t *regp = (uint8_t *)&reg;
+
+	ret = vr5510_get_inst(VR5510_MU_NAME, &mu);
+	if (ret) {
+		ERROR("Failed to get VR5510 MU\n");
+		return;
+	}
+
+	reg = VR5510_CTRL1_GOTO_OFF;
+	ret = vr5510_write(mu, VR5510_M_SM_CTRL1, regp, sizeof(reg));
+	if (ret)
+		ERROR("Failed to write VR5510_M_SM_CTRL1 register\n");
+}
 
-- 
2.17.1

