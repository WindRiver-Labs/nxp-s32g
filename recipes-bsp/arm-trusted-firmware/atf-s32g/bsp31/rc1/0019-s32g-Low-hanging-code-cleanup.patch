From baa0d3ebd0e0c5453b554474153898ad6385ac4f Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Date: Wed, 27 Feb 2019 14:53:51 +0200
Subject: [PATCH 019/269] s32g: Low-hanging code cleanup

Cosmetic changes, removing or converting some of the TODOs and FIXMEs
throughout the code.

Issue: ALB-3485

Upstream-Status: Pending 

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/s32g/include/platform_def.h | 16 ++++------------
 plat/s32g/s32g275_bl31.c         |  3 +--
 plat/s32g/s32g_helpers.S         | 17 +++++------------
 plat/s32g/s32g_psci.c            |  2 +-
 plat/s32g/s32g_xrdc.c            |  9 +--------
 5 files changed, 12 insertions(+), 35 deletions(-)

diff --git a/plat/s32g/include/platform_def.h b/plat/s32g/include/platform_def.h
index 00d6c1eb8..50d2d618e 100644
--- a/plat/s32g/include/platform_def.h
+++ b/plat/s32g/include/platform_def.h
@@ -52,7 +52,7 @@
 /* Generic timer frequency; this goes directly into CNTFRQ_EL0 */
 #define COUNTER_FREQUENCY		0x00989680	/* 10MHz */
 
-/* GIC (re)definitions, some from U-Boot's asm/gic.h and the s32gen1 config */
+/* GIC (re)definitions */
 #define S32G275_GIC_BASE	0x50800000
 #define PLAT_GICD_BASE		S32G275_GIC_BASE
 #define PLAT_GICR_BASE		(S32G275_GIC_BASE + 0x80000)
@@ -80,13 +80,10 @@
 #define S32G_PMEM_LEN		0x00200000	/* 2MB */
 #define S32G_PMEM_START		(S32G_PMEM_END - S32G_PMEM_LEN)
 
-/* +----------------------+
- * | Memory layout macros |
- * |----------------------|
- * | FIXME Nice ASCII art,|
- * |      please remove it|
- * v ... ... ... ... ...  v
+/*
+ * Memory layout macros
  */
+
 /* Note: depending on the compiler optimization level, this may or may not be
  * enough to prevent overflowing onto the adjacent SRAM image. Handle with care,
  * wear a helmet and compile with -Os.
@@ -116,15 +113,10 @@
 
 /* FIXME value randomly chosen; should probably be revisited */
 #define PLATFORM_STACK_SIZE		0x4000
-/* ^ ... ... ... ... ...  ^
- * |                      |
- * +----------------------+
- */
 
 #define MAX_IO_HANDLES			4
 #define MAX_IO_DEVICES			3
 
-/* Debugging options */
 #define PLAT_LOG_LEVEL_ASSERT		LOG_LEVEL_VERBOSE
 
 #if defined IMAGE_BL1
diff --git a/plat/s32g/s32g275_bl31.c b/plat/s32g/s32g275_bl31.c
index 5a77eca84..f258f2adb 100644
--- a/plat/s32g/s32g275_bl31.c
+++ b/plat/s32g/s32g275_bl31.c
@@ -52,7 +52,7 @@ static uint32_t s32g_get_spsr_for_bl33_entry(void)
 	el_status &= ID_AA64PFR0_ELX_MASK;
 
 	mode = (el_status) ? MODE_EL2 : MODE_EL1;
-	assert(mode == MODE_EL2); /* FIXME debugging only! this must go */
+	assert(mode == MODE_EL2);
 
 	spsr = SPSR_64(mode, MODE_SP_ELX, DISABLE_ALL_EXCEPTIONS);
 
@@ -81,7 +81,6 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 	bl33_image_ep_info.spsr = s32g_get_spsr_for_bl33_entry();
 	SET_SECURITY_STATE(bl33_image_ep_info.h.attr, NON_SECURE);
 
-	/* TODO check return */
 	console_s32g_register(S32G_UART_BASE, S32G_UART_CLOCK_HZ,
 			S32G_UART_BAUDRATE, &console);
 }
diff --git a/plat/s32g/s32g_helpers.S b/plat/s32g/s32g_helpers.S
index 746fd96a5..9b598b7d8 100644
--- a/plat/s32g/s32g_helpers.S
+++ b/plat/s32g/s32g_helpers.S
@@ -18,10 +18,6 @@
 .globl console_s32g_putc
 .globl console_s32g_flush
 
-/*
- * Almost all these helper functions have been copied copied from
- * imx8_helpers.S (plat/imx), ls_helpers.S (plat/layerscape), or u-boot.
- */
 .globl s32g_smp_fixup
 
 
@@ -91,7 +87,6 @@ endfunc plat_core_pos_by_mpidr
  *			     uint32_t baud,
  *			     struct console_s32g *console)
  * Hard-coded configuration: 8 data bits, no parity, 1 stop bit, no start bits
- * (logic borrowed from the s32g-uboot linflex driver)
  *
  * In: x0 - UART register base address
  *     w1 - UART clock in Hz
@@ -122,8 +117,8 @@ wait_init_mode:
 	movz	w16, #0x1	/* UARTCR_UART */
 	str	w16, [x0, #S32G_LINFLEX_UARTCR]
 
-	/* hard-coded linflexd_serial_setbrg() result from u-boot,
-	 * when UARTCR[ROSE]=0
+	/* hard-coded linflexd_serial_setbrg() result,
+	 * working with UARTCR[ROSE]=0
 	 * FIXME: real implementation needed */
 	movz	w16, #72		/* ibr */
 	str	w16, [x0, #S32G_LINFLEX_LINIBRR]
@@ -137,7 +132,6 @@ wait_init_mode:
 #endif /* S32G_VIRTUAL_PLATFORM */
 
 	/* 8-bit data, no parity, Tx/Rx enabled, UART mode */
-	/* TODO reduce number of orr's */
 	movz	w16, #0x40	/* UARTCR_PC1 */
 	movz	w17, #0x20	/* UARTCR_RXEN */
 	orr	w16, w16, w17
@@ -147,15 +141,14 @@ wait_init_mode:
 	orr	w16, w16, w17
 	movz	w17, #0x2	/* UARTCR_WL0 */
 	orr	w16, w16, w17
-	/* FIXME UARTCR_UART has been set before */
-	movz	w17, #0x1	/* UARTCR_UART */
-	orr	w16, w16, w17
+	movz    w17, #0x1       /* UARTCR_UART */
+	orr     w16, w16, w17
 	movz	w17, #0x200	/* UARTCR_RFBM */
 	orr	w16, w16, w17
 	movz	w17, #0x100	/* UARTCR_TFBM */
 	orr	w16, w16, w17
 #ifdef S32G_VIRTUAL_PLATFORM
-	/* FIXME: setting the ROSE bit without also setting OSR is illegal; this
+	/* Note: Setting the ROSE bit without also setting OSR is illegal; this
 	 * only works because of a functional simulator quirk. We're keeping it,
 	 * though, for easier debugging and sped-up output (on VDK only!).
 	 * Also, these settings only speed up the output; the input would be
diff --git a/plat/s32g/s32g_psci.c b/plat/s32g/s32g_psci.c
index 29179b9f6..3589adc63 100644
--- a/plat/s32g/s32g_psci.c
+++ b/plat/s32g/s32g_psci.c
@@ -131,7 +131,7 @@ void s32g_psci_move_to_pram(void)
 	 */
 	_Static_assert(S32G_PMEM_END >= S32G_PMEM_START,
 		       "S32G: PMEM_END < PMEM_START");
-	/* TODO Ideally, this would have been a static assert, also; however,
+	/* Ideally, this would have been a static assert; however,
 	 * __BL31_START__ and __BL31_END__ are linker symbols, so static assert
 	 * isn't possible.
 	 */
diff --git a/plat/s32g/s32g_xrdc.c b/plat/s32g/s32g_xrdc.c
index b0afd8c03..37dc93c03 100644
--- a/plat/s32g/s32g_xrdc.c
+++ b/plat/s32g/s32g_xrdc.c
@@ -134,10 +134,6 @@ enum xrdc_dacp {
  *
  * Registers can be accessed via 8-, 16- or 32-bit reads and 32-bit writes.
  */
-/* TODO This is too ugly to be real; keep an eye on the RefMan releases
- *      and change this at the nearest opportunity.
- * <ugliness>
- */
 static volatile struct xrdc_regs {
 	uint32_t CR;			/* offset 0x000 */
 	uint8_t reserved0[236];
@@ -242,9 +238,6 @@ static volatile struct xrdc_regs {
 	struct xrdc_mrgd_reg MRGD208_223[16];	/* offset 0x3A00 */
 } __attribute__((packed, aligned(4))) *s32g_xrdc;
 
-/* </ugliness>
- */
-
 /**
  * Validate MRGD index and get MRGD struct
  */
@@ -401,7 +394,7 @@ static int xrdc_init(void *vaddr)
 	 */
 
 	/* assign the debugger to a domain */
-	/* FIXME conditionally-compile debugger access */
+	/* TODO conditionally-compile debugger access */
 	mda = xrdc_get_mda_by_idx(s32g_xrdc, MDAC_JTAG_DEBUG_MID, 0);
 	if (!mda) {
 		ERROR("%s(): Error getting MDA for domain %d and index %d; "
-- 
2.17.1

