From a3091b4d4d628f79192585ab4e70158c29e0e3c0 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Fri, 29 Oct 2021 11:05:45 +0300
Subject: [PATCH 09/14] s32g3: mc_me Correct the way A53 cluster is enabled

Issue: ALB-8016
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/s32g/include/s32g_mc_me.h |  1 +
 plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c  | 11 +++++++++++
 plat/nxp/s32/s32g/s32g3/s32g3_mc_me.c  | 11 +++++++++++
 plat/nxp/s32/s32g/s32g_mc_me.c         | 10 +---------
 4 files changed, 24 insertions(+), 9 deletions(-)

diff --git a/plat/nxp/s32/s32g/include/s32g_mc_me.h b/plat/nxp/s32/s32g/include/s32g_mc_me.h
index 4df6f24ba..cd075a042 100644
--- a/plat/nxp/s32/s32g/include/s32g_mc_me.h
+++ b/plat/nxp/s32/s32g/include/s32g_mc_me.h
@@ -121,6 +121,7 @@ const struct a53_haddr_mapping *s32g_get_a53_haddr_mappings(size_t *size);
 void mc_me_enable_partition_block(uint32_t part, uint32_t block);
 void mc_me_enable_partition(uint32_t part);
 uint8_t mc_me_core2prtn_core_id(uint8_t part, uint8_t id);
+uint32_t mc_me_get_cluster_ptrn(uint32_t core);
 
 void s32g_destructive_reset(void);
 
diff --git a/plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c b/plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c
index 3c4ecbe42..8baab50ba 100644
--- a/plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c
+++ b/plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c
@@ -31,3 +31,14 @@ void s32g_turn_off_mcores(void)
 	s32g_turn_off_core(S32G_MC_ME_CM7_PART, 1);
 	s32g_turn_off_core(S32G_MC_ME_CM7_PART, 0);
 }
+
+uint32_t mc_me_get_cluster_ptrn(uint32_t core)
+{
+	/**
+	 * For S32G2 we have the following mapping:
+	 *     MC_ME_PRTN1_CORE0_* -> CA53 cluster0 core0/1
+	 *     MC_ME_PRTN1_CORE2_* -> CA53 cluster1 core0/1
+	 */
+	return (core % 4) & ~1;
+}
+
diff --git a/plat/nxp/s32/s32g/s32g3/s32g3_mc_me.c b/plat/nxp/s32/s32g/s32g3/s32g3_mc_me.c
index c82af4f89..cb429f6f4 100644
--- a/plat/nxp/s32/s32g/s32g3/s32g3_mc_me.c
+++ b/plat/nxp/s32/s32g/s32g3/s32g3_mc_me.c
@@ -71,3 +71,14 @@ void s32g_turn_off_mcores(void)
 	s32g_turn_off_core(S32G_MC_ME_CM7_PART, 1);
 	s32g_turn_off_core(S32G_MC_ME_CM7_PART, 0);
 }
+
+uint32_t mc_me_get_cluster_ptrn(uint32_t core)
+{
+	/**
+	 * For S32G3 we have the following mapping:
+	 *     MC_ME_PRTN1_CORE0_* -> CA53 cluster0 core0/1/2/3
+	 *     MC_ME_PRTN1_CORE2_* -> CA53 cluster1 core0/1/2/3
+	 */
+	return mc_me_core2prtn_core_id(S32G_MC_ME_CA53_PART, core) & 2;
+}
+
diff --git a/plat/nxp/s32/s32g/s32g_mc_me.c b/plat/nxp/s32/s32g/s32g_mc_me.c
index bdf36fa2d..17e9bda25 100644
--- a/plat/nxp/s32/s32g/s32g_mc_me.c
+++ b/plat/nxp/s32/s32g/s32g_mc_me.c
@@ -209,18 +209,10 @@ static void enable_a53_partition(void)
 
 static void enable_a53_core_cluster(uint32_t core)
 {
+	uint32_t pconf_cluster = mc_me_get_cluster_ptrn(core);
 	uint32_t stat, part = S32G_MC_ME_CA53_PART;
 	uint64_t addr;
 
-	/* For S32G2 we have the following mapping:
-	 * MC_ME_PRTN1_CORE0_* -> CA53 cluster0 core0/1
-	 * MC_ME_PRTN1_CORE2_* -> CA53 cluster1 core0/1
-	 * For G32G3 we have the following mapping:
-	 * MC_ME_PRTN1_CORE0_* -> CA53 cluster0 core0/1/2/3
-	 * MC_ME_PRTN1_CORE2_* -> CA53 cluster1 core0/1/2/3
-	 */
-	uint32_t pconf_cluster = (core % 4) & ~1;
-
 	addr = MC_ME_PRTN_PART(part, pconf_cluster) +
 	    S32G_MC_ME_PRTN_N_STAT_OFF;
 	stat = mmio_read_32(addr);
-- 
2.17.1

