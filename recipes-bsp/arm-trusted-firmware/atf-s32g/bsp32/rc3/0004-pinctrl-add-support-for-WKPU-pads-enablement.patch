From 70a0f62406b9f2a0c98d73f0035fcdb77b1744a1 Mon Sep 17 00:00:00 2001
From: Bogdan-Gabriel Roman <bogdan-gabriel.roman@nxp.com>
Date: Fri, 14 Jan 2022 14:51:43 +0200
Subject: [PATCH 4/6] pinctrl: add support for WKPU pads enablement

Issue: ALB-8318
Upstream-Status: Pending 

Signed-off-by: Bogdan-Gabriel Roman <bogdan-gabriel.roman@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/s32g/include/s32g_pinctrl.h |  3 +-
 plat/nxp/s32/s32g/s32g_pinctrl.c         | 59 +++++++++++++++++++++++-
 2 files changed, 60 insertions(+), 2 deletions(-)

diff --git a/plat/nxp/s32/s32g/include/s32g_pinctrl.h b/plat/nxp/s32/s32g/include/s32g_pinctrl.h
index f85e15701..7b1bf56d2 100644
--- a/plat/nxp/s32/s32g/include/s32g_pinctrl.h
+++ b/plat/nxp/s32/s32g/include/s32g_pinctrl.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 2019-2021 NXP
+ * Copyright 2019-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -247,5 +247,6 @@ static inline uint32_t get_siul2_midr2_freq(void)
 
 void s32g_plat_config_pinctrl(void);
 void i2c_config_pinctrl(void);
+void wkpu_config_pinctrl(uint32_t wkup_irq);
 
 #endif
diff --git a/plat/nxp/s32/s32g/s32g_pinctrl.c b/plat/nxp/s32/s32g/s32g_pinctrl.c
index b26d41ee4..399d998a3 100644
--- a/plat/nxp/s32/s32g/s32g_pinctrl.c
+++ b/plat/nxp/s32/s32g/s32g_pinctrl.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2019-2021 NXP
+ * Copyright 2019-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -7,6 +7,63 @@
 #include <assert.h>
 #include "s32g_pinctrl.h"
 
+/* GPIOs for External Wakeup Sources */
+#define SIUL2_PC_11_MSCR_S32_G1_WKUP0	43
+#define SIUL2_PJ_02_MSCR_S32_G1_WKUP1	146
+#define SIUL2_PJ_04_MSCR_S32_G1_WKUP2	148
+#define SIUL2_PJ_06_MSCR_S32_G1_WKUP3	150
+#define SIUL2_PJ_08_MSCR_S32_G1_WKUP4	152
+#define SIUL2_PJ_10_MSCR_S32_G1_WKUP5	154
+#define SIUL2_PJ_12_MSCR_S32_G1_WKUP6	156
+#define SIUL2_PJ_14_MSCR_S32_G1_WKUP7	158
+#define SIUL2_PK_00_MSCR_S32_G1_WKUP8	160
+#define SIUL2_PK_02_MSCR_S32_G1_WKUP9	162
+#define SIUL2_PK_04_MSCR_S32_G1_WKUP10	164
+#define SIUL2_PK_06_MSCR_S32_G1_WKUP11	166
+#define SIUL2_PK_08_MSCR_S32_G1_WKUP12	168
+#define SIUL2_PK_10_MSCR_S32_G1_WKUP13	170
+#define SIUL2_PK_12_MSCR_S32_G1_WKUP14	172
+#define SIUL2_PK_14_MSCR_S32_G1_WKUP15	174
+#define SIUL2_PL_00_MSCR_S32_G1_WKUP16	176
+#define SIUL2_PC_04_MSCR_S32_G1_WKUP17	36
+#define SIUL2_PC_06_MSCR_S32_G1_WKUP18	38
+#define SIUL2_PL_07_MSCR_S32_G1_WKUP19	183
+#define SIUL2_PL_03_MSCR_S32_G1_WKUP20	179
+#define SIUL2_PL_06_MSCR_S32_G1_WKUP21	182
+#define SIUL2_PA_10_MSCR_S32_G1_WKUP22	10
+
+static const uint32_t wkpu_gpio[] = {
+	SIUL2_0_MSCRn(SIUL2_PC_11_MSCR_S32_G1_WKUP0),
+	SIUL2_1_MSCRn(SIUL2_PJ_02_MSCR_S32_G1_WKUP1),
+	SIUL2_1_MSCRn(SIUL2_PJ_04_MSCR_S32_G1_WKUP2),
+	SIUL2_1_MSCRn(SIUL2_PJ_06_MSCR_S32_G1_WKUP3),
+	SIUL2_1_MSCRn(SIUL2_PJ_08_MSCR_S32_G1_WKUP4),
+	SIUL2_1_MSCRn(SIUL2_PJ_10_MSCR_S32_G1_WKUP5),
+	SIUL2_1_MSCRn(SIUL2_PJ_12_MSCR_S32_G1_WKUP6),
+	SIUL2_1_MSCRn(SIUL2_PJ_14_MSCR_S32_G1_WKUP7),
+	SIUL2_1_MSCRn(SIUL2_PK_00_MSCR_S32_G1_WKUP8),
+	SIUL2_1_MSCRn(SIUL2_PK_02_MSCR_S32_G1_WKUP9),
+	SIUL2_1_MSCRn(SIUL2_PK_04_MSCR_S32_G1_WKUP10),
+	SIUL2_1_MSCRn(SIUL2_PK_06_MSCR_S32_G1_WKUP11),
+	SIUL2_1_MSCRn(SIUL2_PK_08_MSCR_S32_G1_WKUP12),
+	SIUL2_1_MSCRn(SIUL2_PK_10_MSCR_S32_G1_WKUP13),
+	SIUL2_1_MSCRn(SIUL2_PK_12_MSCR_S32_G1_WKUP14),
+	SIUL2_1_MSCRn(SIUL2_PK_14_MSCR_S32_G1_WKUP15),
+	SIUL2_1_MSCRn(SIUL2_PL_00_MSCR_S32_G1_WKUP16),
+	SIUL2_0_MSCRn(SIUL2_PC_04_MSCR_S32_G1_WKUP17),
+	SIUL2_0_MSCRn(SIUL2_PC_06_MSCR_S32_G1_WKUP18),
+	SIUL2_1_MSCRn(SIUL2_PL_07_MSCR_S32_G1_WKUP19),
+	SIUL2_1_MSCRn(SIUL2_PL_03_MSCR_S32_G1_WKUP20),
+	SIUL2_1_MSCRn(SIUL2_PL_06_MSCR_S32_G1_WKUP21),
+	SIUL2_0_MSCRn(SIUL2_PA_10_MSCR_S32_G1_WKUP22),
+};
+
+void wkpu_config_pinctrl(uint32_t wkup_irq)
+{
+	mmio_write_32(wkpu_gpio[wkup_irq],
+		      SIUL2_MSCR_S32_G1_IBE_EN |
+		      SIUL2_MSCR_MUX_MODE_ALT0);
+}
 
 static void linflex_config_pinctrl(int lf)
 {
-- 
2.17.1

