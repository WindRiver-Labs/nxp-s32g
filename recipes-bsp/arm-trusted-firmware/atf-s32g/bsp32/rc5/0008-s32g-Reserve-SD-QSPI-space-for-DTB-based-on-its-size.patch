From 6a038ea9167c1464778a96c80a6aa963996e5c3d Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 2 Feb 2022 11:42:49 +0200
Subject: [PATCH 08/11] s32g: Reserve SD/QSPI space for DTB based on its size

Remove the gap between device tree and BL2 on SD and QSPI.
The aim of this commit is to reduce the boot time and SD/QSPI
footprint of the FIP image.

Issue: ALB-8436
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_bl_common.h    | 13 ++++++-
 plat/nxp/s32/include/s32_platform_def.h |  2 -
 plat/nxp/s32/s32_bl2_el3.c              |  5 ---
 plat/nxp/s32/s32_bl31.c                 | 16 ++++++--
 plat/nxp/s32/s32_common.mk              | 49 +++++++++++++++----------
 plat/nxp/s32/s32_dt.c                   | 19 ++++++----
 plat/nxp/s32/s32g/s32g_bl2_el3.c        |  2 +-
 plat/nxp/s32/s32r/s32r_bl2_el3.c        |  2 +-
 8 files changed, 69 insertions(+), 39 deletions(-)

diff --git a/plat/nxp/s32/include/s32_bl_common.h b/plat/nxp/s32/include/s32_bl_common.h
index 6bc2e9987..99e2c7e18 100644
--- a/plat/nxp/s32/include/s32_bl_common.h
+++ b/plat/nxp/s32/include/s32_bl_common.h
@@ -24,6 +24,11 @@
 
 #define UPTR(PTR)			((uintptr_t)(PTR))
 
+#define PAGE_MASK		(PAGE_SIZE_4KB - 1)
+#define MMU_ROUND_UP_TO_PAGE(x)	(((x) & ~PAGE_MASK) == (x) ? \
+				 (x) : \
+				 ((x) & ~PAGE_MASK) + PAGE_SIZE_4KB)
+
 struct s32_i2c_driver {
 	struct s32_i2c_bus bus;
 	int fdt_node;
@@ -35,6 +40,7 @@ extern const unsigned long fip_emmc_offset;
 extern const unsigned long fip_qspi_offset;
 extern const unsigned long fip_mem_offset;
 extern const unsigned int fip_hdr_size;
+extern const unsigned int dtb_size;
 
 bool is_lockstep_enabled(void);
 
@@ -51,9 +57,14 @@ bool is_cluster1_off(void);
 
 struct s32_i2c_driver *s32_add_i2c_module(void *fdt, int fdt_node);
 
+static inline uintptr_t get_bl2_dtb_base(void)
+{
+	return BL2_BASE - dtb_size;
+}
+
 static inline uintptr_t get_fip_hdr_base(void)
 {
-	return DTB_BASE - fip_hdr_size;
+	return get_bl2_dtb_base() - fip_hdr_size;
 }
 
 #endif /* S32_BL_COMMON_H */
diff --git a/plat/nxp/s32/include/s32_platform_def.h b/plat/nxp/s32/include/s32_platform_def.h
index e634c66a3..90501fb1c 100644
--- a/plat/nxp/s32/include/s32_platform_def.h
+++ b/plat/nxp/s32/include/s32_platform_def.h
@@ -99,8 +99,6 @@
 #define BOOTROM_ADMA_RSRVD_BASE		(0x343ff000)
 #define BL2_LIMIT					(BOOTROM_ADMA_RSRVD_BASE - 1)
 
-#define DTB_SIZE		(BL2_BASE - DTB_BASE)
-
 /* U-boot addresses in SRAM. BL33_DTB and BL33_ENTRYPOINT must be kept in
  * sync with u-boot's CONFIG_DTB_SRAM_ADDR and CONFIG_SYS_TEXT_BASE.
  */
diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index 1901626ea..22c91ba1f 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -174,11 +174,6 @@ void add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
 	params[(*index)++] = node;
 }
 
-#define PAGE_MASK		(PAGE_SIZE_4KB - 1)
-#define MMU_ROUND_UP_TO_PAGE(x)	(((x) & ~PAGE_MASK) == (x) ? \
-				 (x) : \
-				 ((x) & ~PAGE_MASK) + PAGE_SIZE_4KB)
-
 IMPORT_SYM(uintptr_t, __RW_START__, BL2_RW_START);
 
 static uintptr_t get_fip_hdr_page(void)
diff --git a/plat/nxp/s32/s32_bl31.c b/plat/nxp/s32/s32_bl31.c
index 77b4708cf..c4bf9401b 100644
--- a/plat/nxp/s32/s32_bl31.c
+++ b/plat/nxp/s32/s32_bl31.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2021 NXP
+ * Copyright 2021-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -11,6 +11,7 @@
 #include <plat/common/platform.h>
 
 #include "platform_def.h"
+#include "s32_bl_common.h"
 #include "s32_clocks.h"
 #include "s32_linflexuart.h"
 #include "s32_lowlevel.h"
@@ -63,8 +64,6 @@ static const mmap_region_t s32_mmap[] = {
 	MAP_REGION2(S32_BL33_IMAGE_BASE, S32_BL33_IMAGE_BASE,
 			MMU_ROUND_UP_TO_4K(S32_BL33_IMAGE_SIZE),
 			MT_MEMORY | MT_RW, PAGE_SIZE),
-	MAP_REGION2(DTB_BASE, DTB_BASE, MMU_ROUND_UP_TO_4K(DTB_SIZE),
-			MT_MEMORY | MT_RW, PAGE_SIZE),
 	MAP_REGION_FLAT(S32_PMEM_START, S32_PMEM_LEN,
 			MT_MEMORY | MT_RW | MT_SECURE),
 	MAP_REGION_FLAT(S32_SCMI_SHARED_MEM, S32_SCMI_SHARED_MEM_SIZE,
@@ -187,6 +186,11 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 #endif
 }
 
+static uintptr_t get_dtb_base_page(void)
+{
+	return get_bl2_dtb_base() & ~PAGE_MASK;
+}
+
 static void s32_el3_mmu_fixup(void)
 {
 	const unsigned long code_start = BL_CODE_BASE;
@@ -206,6 +210,12 @@ static void s32_el3_mmu_fixup(void)
 			.size = rw_size,
 			.attr = MT_RW | MT_MEMORY | MT_SECURE,
 		},
+		{
+			.base_pa = get_dtb_base_page(),
+			.base_va = get_dtb_base_page(),
+			.size = MMU_ROUND_UP_TO_4K(dtb_size),
+			.attr = MT_RO | MT_MEMORY | MT_SECURE,
+		},
 	};
 	int i;
 
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index 65542ca65..111abd6f7 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -76,7 +76,7 @@ PLAT_BL_COMMON_SOURCES += \
 			drivers/nxp/s32/rst/s32gen1_rst.c \
 			drivers/nxp/s32/clk/set_par_rate.c \
 			drivers/nxp/s32/i2c/s32_i2c.c \
-			${FIP_INFO_SRC} \
+			${BOOT_INFO_SRC} \
 
 BL2_SOURCES += \
 			${XLAT_TABLES_LIB_SRCS} \
@@ -182,10 +182,6 @@ $(eval $(call add_define,FIP_ROFFSET))
 
 BL2_W_DTB		:= ${BUILD_PLAT}/bl2_w_dtb.bin
 all: ${BL2_W_DTB}
-# WARNING: 1024 * 8 = DTB_SIZE. These two should be kept in sync
-${BL2_W_DTB}: bl2 dtbs
-	@cp ${BUILD_PLAT}/fdts/${DTB_FILE_NAME} $@
-	@dd if=${BUILD_PLAT}/bl2.bin of=$@ bs=1024 seek=8 status=none
 
 ifeq ($(MKIMAGE),)
 BL33DIR = $(shell dirname $(BL33))
@@ -196,7 +192,7 @@ MKIMAGE_CFG ?= ${BL33DIR}/u-boot.cfgout
 DUMMY_STAGE := ${BUILD_PLAT}/dummy_fip_stage
 DUMMY_FIP := ${BUILD_PLAT}/dummy_fip
 FIP_HDR_SIZE_FILE := ${BUILD_PLAT}/fip_hdr_size
-FIP_INFO_SRC := ${BUILD_PLAT}/fip_info.c
+BOOT_INFO_SRC := ${BUILD_PLAT}/boot_info.c
 FIP_OFFSET_FILE = ${BUILD_PLAT}/fip_offset
 IVT_LOCATION_FILE = ${BUILD_PLAT}/ivt_location
 FIP_SD_OFFSET_FILE = ${BUILD_PLAT}/fip_sd_offset_flag
@@ -205,10 +201,11 @@ FIP_QSPI_OFFSET_FILE = ${BUILD_PLAT}/fip_qspi_offset_flag
 FIP_MEMORY_OFFSET_FILE = ${BUILD_PLAT}/fip_mem_offset_flag
 DUMMY_FIP_S32 = ${BUILD_PLAT}/dummy_fip.s32
 MKIMAGE_FIP_CONF_FILE = ${BUILD_PLAT}/fip.cfgout
+DTB_SIZE_FILE = ${BUILD_PLAT}/dtb_size
 BL2_W_DTB_SIZE_FILE = ${BUILD_PLAT}/bl2_w_dtb_size
 
 define hexbc
-echo "obase=16;ibase=16;$$(echo "$1 $2 $3 $4 $5" | tr 'a-x' 'A-X' | sed 's/0X//g')" | bc
+echo "obase=16;ibase=16;$$(echo "$1 $2 $3 $4 $5 $6 $7" | tr 'a-x' 'A-X' | sed 's/0X//g')" | bc
 endef
 
 define update_fip
@@ -236,6 +233,10 @@ cd ${BL33DIR} && \
 	-n $3 -d $4 $5
 endef
 
+define hexfilesize
+printf "0x%x" $$(stat -c "%s" $1)
+endef
+
 ${DUMMY_STAGE}: | ${BUILD_PLAT}
 	${Q}${ECHO} "  CREATE  $@"
 	${Q}${ECHO} "dummy_stage" > $@
@@ -329,17 +330,29 @@ ${FIP_MEMORY_OFFSET_FILE}: FORCE
 	${Q}${ECHO} "${FIP_MEMORY_OFFSET}" > "$@"
 endif
 
-${FIP_INFO_SRC}: ${FIP_SD_OFFSET_FILE} ${FIP_EMMC_OFFSET_FILE} ${FIP_QSPI_OFFSET_FILE} ${FIP_MEMORY_OFFSET_FILE} ${FIP_HDR_SIZE_FILE}
+${DTB_SIZE_FILE}: dtbs
+	${Q}${ECHO} "  CREATE  $@"
+	$(eval FIP_ALIGN_HEX = $(shell printf "0x%x" ${FIP_ALIGN}))
+	$(eval DTB_S = $(shell $(call hexfilesize, ${BUILD_PLAT}/fdts/${DTB_FILE_NAME})))
+	$(eval DTB_SIZE = 0x$(shell $(call hexbc, ${DTB_S}, /, ${FIP_ALIGN_HEX}, *, ${FIP_ALIGN_HEX}, +, ${FIP_ALIGN_HEX})))
+	${Q}echo "${DTB_SIZE}" > $@
+
+${BL2_W_DTB}: bl2 dtbs ${DTB_SIZE_FILE}
+	@cp ${BUILD_PLAT}/fdts/${DTB_FILE_NAME} $@
+	@dd if=${BUILD_PLAT}/bl2.bin of=$@ seek=$$(printf "%d" ${DTB_SIZE}) status=none oflag=seek_bytes
+
+${BOOT_INFO_SRC}: ${FIP_SD_OFFSET_FILE} ${FIP_EMMC_OFFSET_FILE} ${FIP_QSPI_OFFSET_FILE} ${FIP_MEMORY_OFFSET_FILE} ${FIP_HDR_SIZE_FILE} ${DTB_SIZE_FILE}
 	${Q}${ECHO} "  CREATE  $@"
-	${Q}${ECHO} "const unsigned long fip_sd_offset = $$(cat ${FIP_SD_OFFSET_FILE});" > ${FIP_INFO_SRC}
-	${Q}${ECHO} "const unsigned long fip_emmc_offset = $$(cat ${FIP_EMMC_OFFSET_FILE});" >> ${FIP_INFO_SRC}
-	${Q}${ECHO} "const unsigned long fip_qspi_offset = $$(cat ${FIP_QSPI_OFFSET_FILE});" >> ${FIP_INFO_SRC}
-	${Q}${ECHO} "const unsigned long fip_mem_offset = $$(cat ${FIP_MEMORY_OFFSET_FILE});" >> ${FIP_INFO_SRC}
-	${Q}${ECHO} "const unsigned int fip_hdr_size = $$(cat ${FIP_HDR_SIZE_FILE});" >> ${FIP_INFO_SRC}
+	${Q}${ECHO} "const unsigned long fip_sd_offset = $$(cat ${FIP_SD_OFFSET_FILE});" > ${BOOT_INFO_SRC}
+	${Q}${ECHO} "const unsigned long fip_emmc_offset = $$(cat ${FIP_EMMC_OFFSET_FILE});" >> ${BOOT_INFO_SRC}
+	${Q}${ECHO} "const unsigned long fip_qspi_offset = $$(cat ${FIP_QSPI_OFFSET_FILE});" >> ${BOOT_INFO_SRC}
+	${Q}${ECHO} "const unsigned long fip_mem_offset = $$(cat ${FIP_MEMORY_OFFSET_FILE});" >> ${BOOT_INFO_SRC}
+	${Q}${ECHO} "const unsigned int fip_hdr_size = $$(cat ${FIP_HDR_SIZE_FILE});" >> ${BOOT_INFO_SRC}
+	${Q}${ECHO} "const unsigned int dtb_size = $$(cat ${DTB_SIZE_FILE});" >> ${BOOT_INFO_SRC}
 
 ${BL2_W_DTB_SIZE_FILE}: ${BL2_W_DTB}
 	${Q}${ECHO} "  CREATE  $@"
-	${Q}printf "0x%x" $$(stat -c "%s" $<) > $@
+	${Q}$(call hexfilesize, $<) > $@
 
 ${MKIMAGE_FIP_CONF_FILE}: ${BL2_W_DTB_SIZE_FILE} ${FIP_HDR_SIZE_FILE} FORCE
 	${Q}${ECHO} "  CREATE  $@"
@@ -364,18 +377,16 @@ add_to_fip: fip ${BL2_W_DTB}
 		false; \
 	fi
 
-DTB_SIZE		:= 0x2000
 BL2_BASE		:= 0x34302000
 $(eval $(call add_define,BL2_BASE))
-DTB_BASE		:= $(shell echo 0x$$( $(call hexbc, $(BL2_BASE), -, $(DTB_SIZE)) ) )
-$(eval $(call add_define,DTB_BASE))
 
 all: call_mkimage
-call_mkimage: add_to_fip ${MKIMAGE_FIP_CONF_FILE} ${FIP_HDR_SIZE_FILE} ${BL2_W_DTB_SIZE_FILE}
+call_mkimage: add_to_fip ${MKIMAGE_FIP_CONF_FILE} ${FIP_HDR_SIZE_FILE} ${BL2_W_DTB_SIZE_FILE} ${DTB_SIZE_FILE}
 	${Q}${ECHO} "  MKIMAGE ${BUILD_PLAT}/fip.s32"
 	${Q}FIP_HDR_SIZE=$$(cat ${FIP_HDR_SIZE_FILE}); \
 	BL2_W_DTB_SIZE=$$(cat ${BL2_W_DTB_SIZE_FILE}); \
-	LOAD_ADDRESS=0x$$($(call hexbc, ${BL2_BASE}, -, $${FIP_HDR_SIZE}, -, ${DTB_SIZE})); \
+	DTB_SIZE=$$(cat ${DTB_SIZE_FILE}); \
+	LOAD_ADDRESS=0x$$($(call hexbc, ${BL2_BASE}, -, $${FIP_HDR_SIZE}, -, $${DTB_SIZE})); \
 	$(call run_mkimage, ${BL2_BASE}, $${LOAD_ADDRESS}, ${MKIMAGE_FIP_CONF_FILE}, ${BUILD_PLAT}/${FIP_NAME}, ${BUILD_PLAT}/fip.s32)
 	${Q}${ECHO} "Generated ${BUILD_PLAT}/fip.s32 successfully"
 
diff --git a/plat/nxp/s32/s32_dt.c b/plat/nxp/s32/s32_dt.c
index b74a44392..0a5f6c618 100644
--- a/plat/nxp/s32/s32_dt.c
+++ b/plat/nxp/s32/s32_dt.c
@@ -1,6 +1,6 @@
 /*
  * Copyright (c) 2017-2019, ARM Limited and Contributors. All rights reserved.
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -11,15 +11,19 @@
 #include <errno.h>
 #include <libfdt.h>
 #include <platform_def.h>
+#include <s32_bl_common.h>
 #include <s32_dt.h>
 
 static int fdt_checked;
 
-static void *fdt = (void *)(uintptr_t)DTB_BASE;
+static void *get_fdt(void)
+{
+	return (void *)get_bl2_dtb_base();
+}
 
 int dt_open_and_check(void)
 {
-	int ret = fdt_check_header(fdt);
+	int ret = fdt_check_header(get_fdt());
 
 	if (ret == 0)
 		fdt_checked = 1;
@@ -30,7 +34,7 @@ int dt_open_and_check(void)
 int fdt_get_address(void **fdt_addr)
 {
 	if (fdt_checked == 1)
-		*fdt_addr = fdt;
+		*fdt_addr = get_fdt();
 
 	return fdt_checked;
 }
@@ -41,7 +45,7 @@ uint8_t fdt_get_status(int node)
 	int len;
 	const char *cchar;
 
-	cchar = fdt_getprop(fdt, node, "status", &len);
+	cchar = fdt_getprop(get_fdt(), node, "status", &len);
 	if ((cchar == NULL) ||
 			(strncmp(cchar, "okay", (size_t)len) == 0)) {
 		status = DT_ENABLED;
@@ -96,9 +100,10 @@ void dt_fill_device_info(struct dt_node_info *info, int node)
 {
 	const fdt32_t *cuint;
 
-	(void) fdt_get_reg_props_by_index(fdt, node, 0, &info->base, NULL);
+	(void) fdt_get_reg_props_by_index(get_fdt(), node, 0,
+					  &info->base, NULL);
 
-	cuint = fdt_getprop(fdt, node, "resets", NULL);
+	cuint = fdt_getprop(get_fdt(), node, "resets", NULL);
 	if (cuint != NULL) {
 		cuint++;
 		info->reset = (int)fdt32_to_cpu(*cuint);
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index 2600b7553..129cdcf4e 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -151,7 +151,7 @@ void bl2_el3_plat_arch_setup(void)
 	if (ret)
 		ERROR("Failed to disable VR5510 watchdog\n");
 
-	s32_sram_clear(S32_BL33_IMAGE_BASE, DTB_BASE);
+	s32_sram_clear(S32_BL33_IMAGE_BASE, get_bl2_dtb_base());
 	/* Clear only the necessary part for the FIP header. The rest will
 	 * be cleared in bl2_plat_handle_post_image_load, before loading
 	 * the entire FIP image.
diff --git a/plat/nxp/s32/s32r/s32r_bl2_el3.c b/plat/nxp/s32/s32r/s32r_bl2_el3.c
index 53f0d6025..4204a370d 100644
--- a/plat/nxp/s32/s32r/s32r_bl2_el3.c
+++ b/plat/nxp/s32/s32r/s32r_bl2_el3.c
@@ -68,7 +68,7 @@ void bl2_el3_plat_arch_setup(void)
 	if (ret)
 		panic();
 
-	s32_sram_clear(S32_BL33_IMAGE_BASE, DTB_BASE);
+	s32_sram_clear(S32_BL33_IMAGE_BASE, get_bl2_dtb_base());
 	/* Clear only the necessary part for the FIP header. The rest will
 	 * be cleared in bl2_plat_handle_post_image_load, before loading
 	 * the entire FIP image.
-- 
2.17.1

