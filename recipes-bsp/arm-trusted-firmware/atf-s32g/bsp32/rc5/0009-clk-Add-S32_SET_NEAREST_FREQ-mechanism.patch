From 1e2f7177e932f714b69248be175b74d50e4a3d7f Mon Sep 17 00:00:00 2001
From: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Date: Fri, 11 Feb 2022 19:38:42 +0200
Subject: [PATCH 09/11] clk: Add S32_SET_NEAREST_FREQ mechanism

Added the S32_SET_NEAREST_FREQ mechanism from U-Boot, which
allows the clock driver to set the nearest available frequency
for a clock if the requested one cannot be set.

Issue: ALB-8511
Upstream-Status: Pending 

Signed-off-by: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/enable_clk.c | 30 +++++++++++++++++++++---------
 plat/nxp/s32/s32_common.mk       |  6 ++++++
 2 files changed, 27 insertions(+), 9 deletions(-)

diff --git a/drivers/nxp/s32/clk/enable_clk.c b/drivers/nxp/s32/clk/enable_clk.c
index 31d06c103..3ea183008 100644
--- a/drivers/nxp/s32/clk/enable_clk.c
+++ b/drivers/nxp/s32/clk/enable_clk.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  */
 #include <clk/mc_cgm_regs.h>
 #include <clk/mc_me_regs.h>
@@ -504,9 +504,13 @@ static int enable_cgm_div(struct s32gen1_clk_obj *module,
 
 	dc = (uint32_t)fp2u(fp_div(u2fp(pfreq), u2fp(div->freq)));
 	if (fp2u(fp_div(u2fp(pfreq), u2fp(dc))) != div->freq) {
-		ERROR("Cannot set CGM divider (mux:%d, div:%d) for input = %lu & output = %lu\n",
-		      mux->index, div->index, (unsigned long)pfreq, div->freq);
+		ERROR(
+		"Cannot set CGM divider (mux:%d, div:%d) for input = %lu & output = %lu, Nearest freq = %lu\n",
+		mux->index, div->index, (unsigned long)pfreq,
+		div->freq, (unsigned long)(pfreq / dc));
+#if (S32_SET_NEAREST_FREQ == 0)
 		return -EINVAL;
+#endif
 	}
 
 	cgm_mux_div_config(cgm_addr, mux->index, dc - 1, div->index);
@@ -537,9 +541,12 @@ static int get_dfs_mfi_mfn(unsigned long dfs_freq, struct s32gen1_dfs_div *div,
 	div_freq = fp_div(u2fp(in), div_freq);
 
 	if (fp2u(div_freq) != div->freq) {
-		ERROR("Failed to find MFI and MFN settings for DFS DIV freq %lu\n",
-		       div->freq);
+		ERROR(
+		"Failed to find MFI and MFN settings for DFS DIV freq %lu. Nearest freq = %lu\n",
+		div->freq, (unsigned long)(fp2u(div_freq)));
+#if (S32_SET_NEAREST_FREQ == 0)
 		return -EINVAL;
+#endif
 	}
 
 	return 0;
@@ -733,9 +740,12 @@ int get_pll_mfi_mfn(unsigned long pll_vco, unsigned long ref_freq,
 	vco = fp_mul(u2fp(ref_freq), vco);
 
 	if (fp2u(vco) != pll_vco) {
-		ERROR("Failed to find MFI and MFN settings for PLL freq %lu\n",
-		       pll_vco);
+		ERROR(
+		"Failed to find MFI and MFN settings for PLL freq %lu. Nearest freq = %lu\n",
+		pll_vco, (unsigned long)(fp2u(vco)));
+#if (S32_SET_NEAREST_FREQ == 0)
 		return -EINVAL;
+#endif
 	}
 
 	return 0;
@@ -1067,9 +1077,11 @@ static int enable_pll_div(struct s32gen1_clk_obj *module,
 
 	dc = fp2u(fp_div(u2fp(pfreq), u2fp(div->freq)));
 	if (fp2u(fp_div(u2fp(pfreq), u2fp(dc))) != div->freq) {
-		ERROR("Cannot set PLL divider for input = %lu & output = %lu\n",
-		       (unsigned long)pfreq, div->freq);
+		ERROR("Cannot set PLL divider for input = %lu & output = %lu. Nearest freq = %lu\n",
+		(unsigned long)pfreq, div->freq, (unsigned long)(pfreq / dc));
+#if (S32_SET_NEAREST_FREQ == 0)
 		return -EINVAL;
+#endif
 	}
 
 	config_pll_out_div(pll_addr, div->index, dc);
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index 111abd6f7..2a83faac9 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -169,6 +169,12 @@ $(eval $(call add_define_val,S32_USE_LINFLEX_IN_BL31,$(S32_USE_LINFLEX_IN_BL31))
 S32_HAS_HV		?= 0
 $(eval $(call add_define_val,S32_HAS_HV,$(S32_HAS_HV)))
 
+# This config allows the clock driver to set the nearest frequency for a clock
+# if the requested one cannot be set. In both cases, an error will be printed
+# with the targeted and the actual frequency.
+S32_SET_NEAREST_FREQ	?= 0
+$(eval $(call add_define_val,S32_SET_NEAREST_FREQ,$(S32_SET_NEAREST_FREQ)))
+
 # Reserve some space at the end of SRAM for external apps and include it
 # in the calculation of FIP_BASE address.
 EXT_APP_SIZE		:= 0x100000
-- 
2.17.1

