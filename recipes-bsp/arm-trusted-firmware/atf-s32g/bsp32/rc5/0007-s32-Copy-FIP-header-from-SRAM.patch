From 7be9f119bf1260e6972291796cf11e5b9b96cf41 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 2 Feb 2022 08:19:04 +0200
Subject: [PATCH 07/11] s32: Copy FIP header from SRAM

Use FIP header from SRAM instead of copying it from SD/QSPI.

Issue: ALB-8434
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_bl_common.h |  5 +++++
 plat/nxp/s32/s32_bl2_el3.c           | 14 +++++++++++++-
 plat/nxp/s32/s32_common.mk           |  6 +++---
 plat/nxp/s32/s32_storage.c           | 12 ++++++------
 4 files changed, 27 insertions(+), 10 deletions(-)

diff --git a/plat/nxp/s32/include/s32_bl_common.h b/plat/nxp/s32/include/s32_bl_common.h
index 0dd37b592..6bc2e9987 100644
--- a/plat/nxp/s32/include/s32_bl_common.h
+++ b/plat/nxp/s32/include/s32_bl_common.h
@@ -51,4 +51,9 @@ bool is_cluster1_off(void);
 
 struct s32_i2c_driver *s32_add_i2c_module(void *fdt, int fdt_node);
 
+static inline uintptr_t get_fip_hdr_base(void)
+{
+	return DTB_BASE - fip_hdr_size;
+}
+
 #endif /* S32_BL_COMMON_H */
diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index af9d727f3..1901626ea 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -18,6 +18,7 @@
 #include <lib/optee_utils.h>
 #include <lib/xlat_tables/xlat_tables_v2.h>
 #include <platform.h>
+#include <s32_bl_common.h>
 #include <tools_share/firmware_image_package.h>
 
 #include "s32_dt.h"
@@ -180,6 +181,11 @@ void add_invalid_img_to_mem_params_descs(bl_mem_params_node_t *params,
 
 IMPORT_SYM(uintptr_t, __RW_START__, BL2_RW_START);
 
+static uintptr_t get_fip_hdr_page(void)
+{
+	return get_fip_hdr_base() & ~PAGE_MASK;
+}
+
 static mmap_region_t s32_mmap[] = {
 #if !defined(PLAT_s32r)
 	MAP_REGION_FLAT(S32G_SSRAM_BASE, S32G_SSRAM_LIMIT - S32G_SSRAM_BASE,
@@ -216,7 +222,6 @@ static mmap_region_t s32_mmap[] = {
 	MAP_REGION_FLAT(S32_QSPI_BASE, S32_QSPI_SIZE, MT_DEVICE | MT_RW),
 	MAP_REGION_FLAT(FIP_BASE, FIP_MAXIMUM_SIZE, MT_RW | MT_SECURE),
 	MAP_REGION_FLAT(S32_FLASH_BASE, FIP_MAXIMUM_SIZE, MT_RW | MT_SECURE),
-	MAP_REGION_FLAT(DTB_BASE, BL2_BASE - DTB_BASE, MT_MEMORY | MT_RW),
 	{0},
 };
 
@@ -271,6 +276,13 @@ int s32_el3_mmu_fixup(void)
 			.size = rw_size,
 			.attr = MT_RW | MT_MEMORY | MT_SECURE,
 		},
+		/* FIP Header & DTB */
+		{
+			.base_pa = get_fip_hdr_page(),
+			.base_va = get_fip_hdr_page(),
+			.size = BL2_BASE - get_fip_hdr_page(),
+			.attr = MT_RO | MT_MEMORY | MT_SECURE,
+		},
 	};
 	int i, ret;
 
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index 3d601c2cc..65542ca65 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -237,8 +237,8 @@ cd ${BL33DIR} && \
 endef
 
 ${DUMMY_STAGE}: | ${BUILD_PLAT}
-	${Q}${ECHO} "  TOUCH   $@"
-	${Q}touch $@
+	${Q}${ECHO} "  CREATE  $@"
+	${Q}${ECHO} "dummy_stage" > $@
 
 # Replace all fiptool args with a dummy state except '--align' parameter
 ${DUMMY_FIP}: fiptool ${DUMMY_STAGE} | ${BUILD_PLAT}
@@ -349,7 +349,7 @@ ${MKIMAGE_FIP_CONF_FILE}: ${BL2_W_DTB_SIZE_FILE} ${FIP_HDR_SIZE_FILE} FORCE
 	T_SIZE=0x$$($(call hexbc, $${BL2_W_DTB_SIZE}, +, $${HDR_SIZE})); \
 	echo "DATA_FILE SIZE $$T_SIZE" >> $@
 
-FIP_ALIGN := 8
+FIP_ALIGN := 16
 all: add_to_fip
 add_to_fip: fip ${BL2_W_DTB}
 	$(eval FIP_MAXIMUM_SIZE_10 = $(shell printf "%d\n" ${FIP_MAXIMUM_SIZE}))
diff --git a/plat/nxp/s32/s32_storage.c b/plat/nxp/s32/s32_storage.c
index 366117aa5..597922248 100644
--- a/plat/nxp/s32/s32_storage.c
+++ b/plat/nxp/s32/s32_storage.c
@@ -213,7 +213,7 @@ static io_block_spec_t *get_image_spec_source(struct image_storage_info *info)
 		return NULL;
 
 	if (info->image_id == FIP_IMAGE_ID) {
-		info->io_spec.offset = get_fip_offset();
+		info->io_spec.offset = get_fip_hdr_base();
 		info->io_spec.length = FIP_HEADER_SIZE;
 	}
 
@@ -270,7 +270,7 @@ void set_image_spec(const uuid_t *uuid, uint64_t size, uint64_t offset)
 	 * The real offset of the image is computed by adding the offset
 	 * from the FIP header to the real FIP offset
 	 * */
-	spec->offset = fip_spec->offset + offset;
+	spec->offset = get_fip_offset() + offset;
 }
 
 /* Before loading each image (e.g. load_image), this function is called from
@@ -294,7 +294,7 @@ static void set_img_source(struct plat_io_policy *policy,
 
 	policy->image_spec = (uintptr_t)crt_spec;
 
-	if (is_mmc_boot_source()) {
+	if (is_mmc_boot_source() && image_id != FIP_IMAGE_ID) {
 		policy->dev_handle = &s32_mmc_dev_handle;
 		policy->check = s32_check_mmc_dev;
 	} else {
@@ -365,12 +365,12 @@ void s32_io_setup(void)
 		goto err;
 	if (register_io_dev_mmc(&s32_mmc_io_conn))
 		goto err;
+
+	/* Initialize MMC dev handle */
 	if (io_dev_open(s32_mmc_io_conn,
-			(uintptr_t)get_image_spec_from_id(FIP_IMAGE_ID),
+			(uintptr_t)get_image_spec_from_id(BL2_IMAGE_ID),
 			&s32_mmc_dev_handle))
 		goto err;
-	if (io_dev_init(s32_mmc_dev_handle, FIP_IMAGE_ID))
-		goto err;
 
 	return;
 err:
-- 
2.17.1

