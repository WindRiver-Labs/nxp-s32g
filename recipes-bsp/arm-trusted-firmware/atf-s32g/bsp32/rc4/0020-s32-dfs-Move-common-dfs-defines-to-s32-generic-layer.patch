From a82bfe065e54085aad48db047086e6f289cb19c9 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Wed, 22 Dec 2021 18:05:10 +0200
Subject: [PATCH 20/50] s32: dfs: Move common dfs defines to s32 generic layer

Issue: ALB-7411
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/early_clocks.c      |  4 +-
 plat/nxp/s32/include/s32_clocks.h       | 39 ++++++++---
 plat/nxp/s32/s32g/include/s32g_clocks.h | 88 +------------------------
 plat/nxp/s32/s32g/s32g_bl2_el3.c        |  2 +-
 plat/nxp/s32/s32g/s32g_bl31.c           |  2 +-
 plat/nxp/s32/s32g/s32g_clocks.c         |  2 +-
 plat/nxp/s32/s32g/s32g_pm.c             |  8 +--
 plat/nxp/s32/s32g/s32g_psci.c           |  4 +-
 8 files changed, 43 insertions(+), 106 deletions(-)

diff --git a/drivers/nxp/s32/clk/early_clocks.c b/drivers/nxp/s32/clk/early_clocks.c
index 5d75aae86..e5e7fdd6c 100644
--- a/drivers/nxp/s32/clk/early_clocks.c
+++ b/drivers/nxp/s32/clk/early_clocks.c
@@ -20,8 +20,8 @@
 #define ACCEL_PLL_BASE_ADDR		PLL_ADDR(S32_ACCEL_PLL)
 #define DRAM_PLL_BASE_ADDR		PLL_ADDR(S32_DDR_PLL)
 
-#define ARM_DFS_BASE_ADDR		S32G_DFS_ADDR(S32G_CORE_DFS)
-#define PERIPH_DFS_BASE_ADDR	S32G_DFS_ADDR(S32G_PERIPH_DFS)
+#define ARM_DFS_BASE_ADDR		S32_DFS_ADDR(S32_CORE_DFS)
+#define PERIPH_DFS_BASE_ADDR	S32_DFS_ADDR(S32_PERIPH_DFS)
 
 static struct s32gen1_clk_priv s32_priv = {
 	.accelpll = (void *)ACCEL_PLL_BASE_ADDR,
diff --git a/plat/nxp/s32/include/s32_clocks.h b/plat/nxp/s32/include/s32_clocks.h
index dad886eae..6495af3b0 100644
--- a/plat/nxp/s32/include/s32_clocks.h
+++ b/plat/nxp/s32/include/s32_clocks.h
@@ -64,17 +64,40 @@ enum s32_pll_type {
  */
 
 /* Number of ports for each DFS  */
-#define S32G_DFS_PORTS_NR	6
+#define S32_DFS_PORTS_NR	6
 
-enum s32g_dfs_type {
-	S32G_CORE_DFS = 0,
-	S32G_PERIPH_DFS,
-	S32G_DFS_NR	/* sentinel */
+enum s32_dfs_type {
+	S32_CORE_DFS = 0,
+	S32_PERIPH_DFS,
+	S32_DFS_NR	/* sentinel */
 };
 
-#define S32G_DFS_BASE_ADDR	0x40054000ul
-/* @dfs - One of the enum s32g_dfs_type values */
-#define S32G_DFS_ADDR(dfs)	(S32G_DFS_BASE_ADDR + (dfs) * 0x4000)
+#define S32_DFS_BASE_ADDR	0x40054000ul
+/* @dfs - One of the enum s32_dfs_type values */
+#define S32_DFS_ADDR(dfs)	(S32_DFS_BASE_ADDR + (dfs) * 0x4000)
+
+/* DFS register offsets */
+#define DFS_PORTRESET_OFF	0X14ul
+#define DFS_PORTRESET(dfs)	((S32_DFS_ADDR(dfs)) + DFS_PORTRESET_OFF)
+#define DFS_PORTSR_OFF		0xCul
+#define DFS_PORTSR(dfs)		((S32_DFS_ADDR(dfs)) + DFS_PORTSR_OFF)
+#define DFS_CTL_OFF			0x18ul
+#define DFS_CTL(dfs)		((S32_DFS_ADDR(dfs)) + DFS_CTL_OFF)
+#define DFS_DVPORT0_OFF		0x1Cul
+#define DFS_DVPORTn(dfs, port)	((S32_DFS_ADDR(dfs)) + DFS_DVPORT0_OFF + \
+					(port) * 0x4)
+/* DFS register fields */
+#define DFS_PORTRESET_RESET_MASK	(0x3F)
+#define DFS_PORTSR_PORTSTAT_MASK	DFS_PORTRESET_RESET_MASK
+#define DFS_CTL_RESET			(1 << 1)
+#define DFS_DVPORTn_MFI_MASK		(0xFF)
+#define DFS_DVPORTn_MFI_SHIFT		(8)
+#define DFS_DVPORTn_MFN_MASK		(0x3F)
+#define DFS_DVPORTn_MFN_SHIFT		(0)
+#define DFS_DVPORTn_MFI(mfi)	\
+	(((mfi) & DFS_DVPORTn_MFI_MASK) << DFS_DVPORTn_MFI_SHIFT)
+#define DFS_DVPORTn_MFN(mfn)	\
+	(((mfn) & DFS_DVPORTn_MFN_MASK) << DFS_DVPORTn_MFN_SHIFT)
 
 /*
  * Platform reference clocks
diff --git a/plat/nxp/s32/s32g/include/s32g_clocks.h b/plat/nxp/s32/s32g/include/s32g_clocks.h
index bc4380014..260ab6809 100644
--- a/plat/nxp/s32/s32g/include/s32g_clocks.h
+++ b/plat/nxp/s32/s32g/include/s32g_clocks.h
@@ -63,29 +63,6 @@ static const uint64_t s32g_ddr_pll_phi_freq[] = {
  * DFS configuration
  */
 
-/* DFS register offsets */
-#define DFS_PORTRESET_OFF	0X14ul
-#define DFS_PORTRESET(dfs)	((S32G_DFS_ADDR(dfs)) + DFS_PORTRESET_OFF)
-#define DFS_PORTSR_OFF		0xCul
-#define DFS_PORTSR(dfs)		((S32G_DFS_ADDR(dfs)) + DFS_PORTSR_OFF)
-#define DFS_CTL_OFF		0x18ul
-#define DFS_CTL(dfs)		((S32G_DFS_ADDR(dfs)) + DFS_CTL_OFF)
-#define DFS_DVPORT0_OFF		0x1Cul
-#define DFS_DVPORTn(dfs, port)	((S32G_DFS_ADDR(dfs)) + DFS_DVPORT0_OFF + \
-					(port) * 0x4)
-/* DFS register fields */
-#define DFS_PORTRESET_RESET_MASK	(0x3F)
-#define DFS_PORTSR_PORTSTAT_MASK	DFS_PORTRESET_RESET_MASK
-#define DFS_CTL_RESET			(1 << 1)
-#define DFS_DVPORTn_MFI_MASK		(0xFF)
-#define DFS_DVPORTn_MFI_SHIFT		(8)
-#define DFS_DVPORTn_MFN_MASK		(0x3F)
-#define DFS_DVPORTn_MFN_SHIFT		(0)
-#define DFS_DVPORTn_MFI(mfi)	\
-	(((mfi) & DFS_DVPORTn_MFI_MASK) << DFS_DVPORTn_MFI_SHIFT)
-#define DFS_DVPORTn_MFN(mfn)	\
-	(((mfn) & DFS_DVPORTn_MFN_MASK) << DFS_DVPORTn_MFN_SHIFT)
-
 enum S32G_DFS_PARAMS {
 	DFS_PORT_EN = 0,
 	DFS_DVPORT_MFN,
@@ -93,69 +70,6 @@ enum S32G_DFS_PARAMS {
 	DFS_PARAMS_NR	/* sentinel */
 };
 
-/* Core DFS configuration params */
-#define CORE_DFS1_EN	(1)
-#define CORE_DFS2_EN	(1)
-#define CORE_DFS3_EN	(1)
-#define CORE_DFS4_EN	(1)
-#define CORE_DFS5_EN	(1)
-#define CORE_DFS6_EN	(1)
-
-#define CORE_DFS1_MFN	(9)
-#define CORE_DFS2_MFN	(9)
-#define CORE_DFS3_MFN	(0)
-#define CORE_DFS4_MFN	(12)
-#define CORE_DFS5_MFN	(24)
-#define CORE_DFS6_MFN	(24)
-
-#define CORE_DFS1_MFI	(1)
-#define CORE_DFS2_MFI	(1)
-#define CORE_DFS3_MFI	(2)
-#define CORE_DFS4_MFI	(3)
-#define CORE_DFS5_MFI	(1)
-#define CORE_DFS6_MFI	(1)
-
-static const uint32_t s32g_core_dfs_params[S32G_DFS_PORTS_NR][DFS_PARAMS_NR] = {
-	{CORE_DFS1_EN, CORE_DFS1_MFN, CORE_DFS1_MFI},
-	{CORE_DFS2_EN, CORE_DFS2_MFN, CORE_DFS2_MFI},
-	{CORE_DFS3_EN, CORE_DFS3_MFN, CORE_DFS3_MFI},
-	{CORE_DFS4_EN, CORE_DFS4_MFN, CORE_DFS4_MFI},
-	{CORE_DFS5_EN, CORE_DFS5_MFN, CORE_DFS5_MFI},
-	{CORE_DFS6_EN, CORE_DFS6_MFN, CORE_DFS6_MFI}
-};
-
-/* Periph DFS configuration params */
-#define PERIPH_DFS1_EN	(1)
-#define PERIPH_DFS2_EN	(1)
-#define PERIPH_DFS3_EN	(1)
-#define PERIPH_DFS4_EN	(1)
-#define PERIPH_DFS5_EN	(1)
-#define PERIPH_DFS6_EN	(1)
-
-#define PERIPH_DFS1_MFN (9)
-#define PERIPH_DFS2_MFN (21)
-#define PERIPH_DFS3_MFN (9)
-#define PERIPH_DFS4_MFN (24)
-#define PERIPH_DFS5_MFN (1)
-#define PERIPH_DFS6_MFN (0)
-
-#define PERIPH_DFS1_MFI (1)
-#define PERIPH_DFS2_MFI (1)
-#define PERIPH_DFS3_MFI (1)
-#define PERIPH_DFS4_MFI (1)
-#define PERIPH_DFS5_MFI (3)
-#define PERIPH_DFS6_MFI (2)
-
-static const uint32_t
-s32g_periph_dfs_params[S32G_DFS_PORTS_NR][DFS_PARAMS_NR] = {
-	{PERIPH_DFS1_EN, PERIPH_DFS1_MFN, PERIPH_DFS1_MFI},
-	{PERIPH_DFS2_EN, PERIPH_DFS2_MFN, PERIPH_DFS2_MFI},
-	{PERIPH_DFS3_EN, PERIPH_DFS3_MFN, PERIPH_DFS3_MFI},
-	{PERIPH_DFS4_EN, PERIPH_DFS4_MFN, PERIPH_DFS4_MFI},
-	{PERIPH_DFS5_EN, PERIPH_DFS5_MFN, PERIPH_DFS5_MFI},
-	{PERIPH_DFS6_EN, PERIPH_DFS6_MFN, PERIPH_DFS6_MFI}
-};
-
 /* FXOSC registers */
 #define FXOSC_CTRL		(S32_FXOSC_BASE_ADDR)
 #define FXOSC_STAT		(S32_FXOSC_BASE_ADDR + 0x4ul)
@@ -239,7 +153,7 @@ static const uint32_t core_pll_odiv_supported[] = { 1, 2, 4, 10, 20, 40 };
 
 void s32g_ddr2firc(void);
 void s32g_sw_clks2firc(void);
-void s32g_disable_dfs(enum s32g_dfs_type dfs);
+void s32g_disable_dfs(enum s32_dfs_type dfs);
 void s32g_disable_pll(enum s32_pll_type pll, uint32_t ndivs);
 void s32g_disable_fxosc(void);
 
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index 96655a3ec..fff4a265a 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -537,7 +537,7 @@ static mmap_region_t s32g_mmap[] = {
 	MAP_REGION_FLAT(S32G_MC_ME_BASE_ADDR, S32G_MC_ME_SIZE,
 			MT_DEVICE | MT_RW),
 	MAP_REGION_FLAT(MC_CGM0_BASE_ADDR,
-			MMU_ROUND_UP_TO_4K(S32G_DFS_ADDR(S32G_DFS_NR)),
+			MMU_ROUND_UP_TO_4K(S32_DFS_ADDR(S32_DFS_NR)),
 			MT_DEVICE | MT_RW),
 	/* This will cover both the MC_RGM and the GPR accesses, while reducing
 	 * the number of used up MMU regions.
diff --git a/plat/nxp/s32/s32g/s32g_bl31.c b/plat/nxp/s32/s32g/s32g_bl31.c
index d6461ecc2..f30cbba12 100644
--- a/plat/nxp/s32/s32g/s32g_bl31.c
+++ b/plat/nxp/s32/s32g/s32g_bl31.c
@@ -49,7 +49,7 @@ static const mmap_region_t s32g_mmap[] = {
 	MAP_REGION_FLAT(S32G_MC_ME_BASE_ADDR, S32G_MC_ME_SIZE,
 			MT_DEVICE | MT_RW),
 	MAP_REGION_FLAT(MC_CGM0_BASE_ADDR,
-			MMU_ROUND_UP_TO_4K(S32G_DFS_ADDR(S32G_DFS_NR)),
+			MMU_ROUND_UP_TO_4K(S32_DFS_ADDR(S32_DFS_NR)),
 			MT_DEVICE | MT_RW),
 	/* This will cover both the MC_RGM and the GPR accesses, while reducing
 	 * the number of used up MMU regions.
diff --git a/plat/nxp/s32/s32g/s32g_clocks.c b/plat/nxp/s32/s32g/s32g_clocks.c
index 9857970fc..96804d028 100644
--- a/plat/nxp/s32/s32g/s32g_clocks.c
+++ b/plat/nxp/s32/s32g/s32g_clocks.c
@@ -36,7 +36,7 @@ void s32g_disable_fxosc(void)
 		;
 }
 
-void s32g_disable_dfs(enum s32g_dfs_type dfs)
+void s32g_disable_dfs(enum s32_dfs_type dfs)
 {
 	mmio_write_32(DFS_PORTRESET(dfs), DFS_PORTRESET_RESET_MASK);
 	while ((mmio_read_32(DFS_PORTSR(dfs)) & DFS_PORTSR_PORTSTAT_MASK))
diff --git a/plat/nxp/s32/s32g/s32g_pm.c b/plat/nxp/s32/s32g/s32g_pm.c
index eceec953f..4730bc29b 100644
--- a/plat/nxp/s32/s32g/s32g_pm.c
+++ b/plat/nxp/s32/s32g/s32g_pm.c
@@ -16,7 +16,7 @@ static const struct periph_clock periph_clocks[] = {
 	 .cgm_mux_div_upd_stat =	CGM0_MUXn_DIV_UPD_STAT(1),
 	 .cgm_mux_csc =			CGM0_MUXn_CSC(1),
 	 .plldig_pllodiv =		PLLDIG_PLLODIV(S32_PERIPH_PLL, 0),
-	 .dfs_portreset =		DFS_PORTRESET(S32G_PERIPH_DFS),
+	 .dfs_portreset =		DFS_PORTRESET(S32_PERIPH_DFS),
 	 .dfs_portreset_bitmask =	BIT(1) | BIT(4)
 	},
 	{.id = CLKOUT1,
@@ -24,7 +24,7 @@ static const struct periph_clock periph_clocks[] = {
 	 .cgm_mux_div_upd_stat =	CGM0_MUXn_DIV_UPD_STAT(2),
 	 .cgm_mux_csc =			CGM0_MUXn_CSC(2),
 	 .plldig_pllodiv =		PLLDIG_PLLODIV(S32_PERIPH_PLL, 0),
-	 .dfs_portreset =		DFS_PORTRESET(S32G_PERIPH_DFS),
+	 .dfs_portreset =		DFS_PORTRESET(S32_PERIPH_DFS),
 	 .dfs_portreset_bitmask =	BIT(1) | BIT(4)
 	},
 	{.id = PCIE_0_REF_CLK,
@@ -111,7 +111,7 @@ static const struct periph_clock periph_clocks[] = {
 	 .cgm_mux_div_upd_stat =	CGM0_MUXn_DIV_UPD_STAT(12),
 	 .cgm_mux_csc =			CGM0_MUXn_CSC(12),
 	 .plldig_pllodiv =		(uintptr_t)NULL,
-	 .dfs_portreset =		DFS_PORTRESET(S32G_PERIPH_DFS),
+	 .dfs_portreset =		DFS_PORTRESET(S32_PERIPH_DFS),
 	 .dfs_portreset_bitmask =	BIT(0)
 	},
 	{.id = SDHC_CLK,
@@ -119,7 +119,7 @@ static const struct periph_clock periph_clocks[] = {
 	 .cgm_mux_div_upd_stat =	CGM0_MUXn_DIV_UPD_STAT(14),
 	 .cgm_mux_csc =			CGM0_MUXn_CSC(14),
 	 .plldig_pllodiv =		(uintptr_t)NULL,
-	 .dfs_portreset =		DFS_PORTRESET(S32G_PERIPH_DFS),
+	 .dfs_portreset =		DFS_PORTRESET(S32_PERIPH_DFS),
 	 .dfs_portreset_bitmask =	BIT(2)
 	},
 };
diff --git a/plat/nxp/s32/s32g/s32g_psci.c b/plat/nxp/s32/s32g/s32g_psci.c
index 3ca2dd78c..a4d83ec12 100644
--- a/plat/nxp/s32/s32g/s32g_psci.c
+++ b/plat/nxp/s32/s32g/s32g_psci.c
@@ -195,8 +195,8 @@ static void __dead2 platform_suspend(unsigned int current_cpu)
 	s32g_sw_clks2firc();
 
 	/* Turn off DFS */
-	s32g_disable_dfs(S32G_PERIPH_DFS);
-	s32g_disable_dfs(S32G_CORE_DFS);
+	s32g_disable_dfs(S32_PERIPH_DFS);
+	s32g_disable_dfs(S32_CORE_DFS);
 
 	/* Turn off PLL */
 	s32g_disable_pll(S32_ACCEL_PLL, 2);
-- 
2.17.1

