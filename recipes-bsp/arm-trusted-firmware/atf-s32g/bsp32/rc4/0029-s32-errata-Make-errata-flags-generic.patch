From bbdc31093ffc475c2ac5bf0bf15b0de9da256d80 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Thu, 25 Nov 2021 12:51:32 +0200
Subject: [PATCH 29/50] s32: errata: Make errata flags generic

Errata need to be applied on s32r45 as well.

Issue: ALB-7411
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 docs/design/cpu-specific-build-macros.rst |  4 ++--
 drivers/nxp/s32/ddr/ddr_utils_mmio.c      |  6 +++---
 include/arch/aarch64/arch_helpers.h       | 18 +++++++++---------
 include/drivers/nxp/s32/ddr/ddr_utils.h   | 10 +++++-----
 lib/cpus/aarch64/{s32g2.S => s32.S}       | 16 ++++++++--------
 lib/cpus/cpu-ops.mk                       | 16 ++++++++--------
 plat/nxp/s32/s32g/s32g2/platform.mk       |  6 +++---
 plat/nxp/s32/s32g/s32g_bl2_el3.c          |  4 ++--
 8 files changed, 40 insertions(+), 40 deletions(-)
 rename lib/cpus/aarch64/{s32g2.S => s32.S} (72%)

diff --git a/docs/design/cpu-specific-build-macros.rst b/docs/design/cpu-specific-build-macros.rst
index 396bbabf8..edb08b3ab 100644
--- a/docs/design/cpu-specific-build-macros.rst
+++ b/docs/design/cpu-specific-build-macros.rst
@@ -318,9 +318,9 @@ For Neoverse N1, the following errata build flags are defined :
    revisions r0p0, r1p0, and r2p0 there is no workaround.
 
 For S32G2, the following errata build flags are defined :
--  ``ERRATA_S32G2_050481``: This applies errata ERR050481 workaround to S32G2
+-  ``ERRATA_S32_050481``: This applies errata ERR050481 workaround to S32G2
    CPU family.
--  ``ERRATA_S32G2_050543``: This applies errata ERR050543 workaround to S32G2
+-  ``ERRATA_S32_050543``: This applies errata ERR050543 workaround to S32G2
    CPU family.
 
 DSU Errata Workarounds
diff --git a/drivers/nxp/s32/ddr/ddr_utils_mmio.c b/drivers/nxp/s32/ddr/ddr_utils_mmio.c
index 2e1fefb81..e3f316145 100644
--- a/drivers/nxp/s32/ddr/ddr_utils_mmio.c
+++ b/drivers/nxp/s32/ddr/ddr_utils_mmio.c
@@ -42,7 +42,7 @@ static uint32_t ack_mail(void);
 static uint32_t init_memory_ecc_scrubber(void);
 static void sel_clk_src(uint32_t clk_src, bool *already_set);
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 uint8_t polling_needed = 2;
 
 /* Modify bitfield value with delta, given bitfield position and mask */
@@ -337,7 +337,7 @@ uint32_t post_train_setup(uint8_t options)
 		mmio_write_32(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL,
 			      PWRCTL_EN_DFI_DRAM_CLOCK_DIS_MASK | tmp32);
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 		ret |= enable_derating_temp_errata();
 #endif
 
@@ -622,7 +622,7 @@ uint32_t write_lpddr4_mr(uint8_t mr_index, uint8_t mr_data)
 	return NO_ERR;
 }
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 /* Read Temperature Update Flag from lpddr4 MR4 register. */
 uint8_t read_tuf(void)
 {
diff --git a/include/arch/aarch64/arch_helpers.h b/include/arch/aarch64/arch_helpers.h
index 7ce09c3fc..03d7197e2 100644
--- a/include/arch/aarch64/arch_helpers.h
+++ b/include/arch/aarch64/arch_helpers.h
@@ -135,14 +135,14 @@ static inline void dc ## _name(uint64_t v)			\
 }
 #endif /* ERRATA_A53_819472 || ERRATA_A53_824069 || ERRATA_A53_827319 */
 
-#ifdef ERRATA_S32G2_050481
+#ifdef ERRATA_S32_050481
 static inline bool applies_050481(uint64_t v)
 {
 	/* ERR050481 applies only when VA[48:41] is not zero */
 	return !!(v & 0x1FE0000000000ULL);
 }
 
-#define DEFINE_S32G2_TLBIOP_PARAM_FUNC(_type, _alttype)		\
+#define DEFINE_S32_TLBIOP_PARAM_FUNC(_type, _alttype)		\
 static inline void tlbi ## _type(uint64_t v)			\
 {								\
 	if (applies_050481(v))					\
@@ -192,13 +192,13 @@ DEFINE_TLBIOP_ERRATA_TYPE_PARAM_FUNC(vae2is)
 DEFINE_TLBIOP_ERRATA_TYPE_PARAM_FUNC(vale2is)
 DEFINE_TLBIOP_ERRATA_TYPE_PARAM_FUNC(vae3is)
 DEFINE_TLBIOP_ERRATA_TYPE_PARAM_FUNC(vale3is)
-#elif ERRATA_S32G2_050481
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vaae1is, vmalle1is)
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vaale1is, vmalle1is)
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vae2is, alle2is)
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vale2is, alle2is)
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vae3is, alle3is)
-DEFINE_S32G2_TLBIOP_PARAM_FUNC(vale3is, alle3is)
+#elif ERRATA_S32_050481
+DEFINE_S32_TLBIOP_PARAM_FUNC(vaae1is, vmalle1is)
+DEFINE_S32_TLBIOP_PARAM_FUNC(vaale1is, vmalle1is)
+DEFINE_S32_TLBIOP_PARAM_FUNC(vae2is, alle2is)
+DEFINE_S32_TLBIOP_PARAM_FUNC(vale2is, alle2is)
+DEFINE_S32_TLBIOP_PARAM_FUNC(vae3is, alle3is)
+DEFINE_S32_TLBIOP_PARAM_FUNC(vale3is, alle3is)
 #else
 DEFINE_SYSOP_TYPE_PARAM_FUNC(tlbi, vaae1is)
 DEFINE_SYSOP_TYPE_PARAM_FUNC(tlbi, vaale1is)
diff --git a/include/drivers/nxp/s32/ddr/ddr_utils.h b/include/drivers/nxp/s32/ddr/ddr_utils.h
index 2bf64071b..7300aa02b 100644
--- a/include/drivers/nxp/s32/ddr/ddr_utils.h
+++ b/include/drivers/nxp/s32/ddr/ddr_utils.h
@@ -68,7 +68,7 @@
 #define OFFSET_DDRC_MRCTRL0              (uint32_t)0x10U
 #define OFFSET_DDRC_MRCTRL1              (uint32_t)0x14U
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 #define OFFSET_DDRC_DERATEEN             (uint32_t)0x20U
 #define OFFSET_DDRC_RFSHTMG              (uint32_t)0x64U
 #define OFFSET_DDRC_DRAMTMG0             (uint32_t)0x100U
@@ -85,7 +85,7 @@
 #define SWCTL_SWDONE_ENABLE	0x0
 #define SWSTAT_SWDONE_ACK_MASK	0x1U
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 #define RFSHTMG_VAL_SHIFT           16
 #define RFSHTMG_VAL                 (uint32_t)0xfffU
 #define RFSHTMG_MASK                (RFSHTMG_VAL << \
@@ -258,7 +258,7 @@
 #define IMEM_START_ADDR 0x403A0000
 #define DMEM_START_ADDR 0x403B0000
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 /* ERR050543 related defines */
 #define MR4_IDX            4
 #define MR4_MASK           0x7U
@@ -270,7 +270,7 @@
 /* ERR050760 related defines */
 #define REQUIRED_MRSTAT_READS 0x2U
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 extern uint8_t polling_needed;
 #endif
 
@@ -299,7 +299,7 @@ uint32_t read_lpddr4_mr(uint8_t mr_index);
  */
 uint32_t write_lpddr4_mr(uint8_t mr_index, uint8_t mr_data);
 
-#if (ERRATA_S32G2_050543 == 1)
+#if (ERRATA_S32_050543 == 1)
 /* Read Temperature Update Flag from lpddr4 MR4 register. */
 uint8_t read_tuf(void);
 
diff --git a/lib/cpus/aarch64/s32g2.S b/lib/cpus/aarch64/s32.S
similarity index 72%
rename from lib/cpus/aarch64/s32g2.S
rename to lib/cpus/aarch64/s32.S
index 42ba69070..c3af2a9ab 100644
--- a/lib/cpus/aarch64/s32g2.S
+++ b/lib/cpus/aarch64/s32.S
@@ -8,9 +8,9 @@
 
 #if REPORT_ERRATA
 /*
- * Errata printing function for S32G2 family.
+ * Errata printing function for S32R45 and S32G2 family.
  */
-func s32g2_errata_report
+func s32_errata_report
 	stp	x8, x30, [sp, #-16]!
 
 	bl	cpu_get_rev_var
@@ -20,19 +20,19 @@ func s32g2_errata_report
 	 * Report all errata. The revision-variant information is passed to
 	 * checking functions of each errata.
 	 */
-	report_errata ERRATA_S32G2_050481, s32g2, 050481
-	report_errata ERRATA_S32G2_050543, s32g2, 050543
+	report_errata ERRATA_S32_050481, s32, 050481
+	report_errata ERRATA_S32_050543, s32, 050543
 
 	bl cortex_a53_errata_report
 
 	ldp	x8, x30, [sp], #16
 	ret
-endfunc s32g2_errata_report
+endfunc s32_errata_report
 #endif
 
-func s32g2_cpu_reg_dump
+func s32_cpu_reg_dump
 	bl cortex_a53_cpu_reg_dump
-endfunc s32g2_cpu_reg_dump
+endfunc s32_cpu_reg_dump
 
 func check_errata_050481
 	/* Applies to all revisions */
@@ -46,7 +46,7 @@ func check_errata_050543
 	ret
 endfunc check_errata_050543
 
-declare_cpu_ops s32g2, CORTEX_A53_MIDR, \
+declare_cpu_ops s32, CORTEX_A53_MIDR, \
 	cortex_a53_reset_func, \
 	cortex_a53_core_pwr_dwn, \
 	cortex_a53_cluster_pwr_dwn
diff --git a/lib/cpus/cpu-ops.mk b/lib/cpus/cpu-ops.mk
index a75bff6a7..edfe0594b 100644
--- a/lib/cpus/cpu-ops.mk
+++ b/lib/cpus/cpu-ops.mk
@@ -379,11 +379,11 @@ ERRATA_DSU_936184	?=0
 # VAAE1IS, VAALE1IS, VAE1IS, VALE1IS -> VMALLE1IS
 # VAE2IS, VALE2IS                    -> ALLE2IS
 # VAE3IS, VALE3IS                    -> ALLE3IS
-ERRATA_S32G2_050481	?=0
+ERRATA_S32_050481	?=0
 
 # Flag to apply S32G2 erratum ERR050543. This erratum applies to all S32G2
 # revisions.
-ERRATA_S32G2_050543     ?=0
+ERRATA_S32_050543     ?=0
 
 # Process ERRATA_A9_794073 flag
 $(eval $(call assert_boolean,ERRATA_A9_794073))
@@ -681,13 +681,13 @@ $(eval $(call add_define,ERRATA_DSU_798953))
 $(eval $(call assert_boolean,ERRATA_DSU_936184))
 $(eval $(call add_define,ERRATA_DSU_936184))
 
-# Process ERRATA_S32G2_050481 flag
-$(eval $(call assert_boolean,ERRATA_S32G2_050481))
-$(eval $(call add_define,ERRATA_S32G2_050481))
+# Process ERRATA_S32_050481 flag
+$(eval $(call assert_boolean,ERRATA_S32_050481))
+$(eval $(call add_define,ERRATA_S32_050481))
 
-# Process ERRATA_S32G2_050543 flag
-$(eval $(call assert_boolean,ERRATA_S32G2_050543))
-$(eval $(call add_define,ERRATA_S32G2_050543))
+# Process ERRATA_S32_050543 flag
+$(eval $(call assert_boolean,ERRATA_S32_050543))
+$(eval $(call add_define,ERRATA_S32_050543))
 
 # Errata build flags
 ifneq (${ERRATA_A53_843419},0)
diff --git a/plat/nxp/s32/s32g/s32g2/platform.mk b/plat/nxp/s32/s32g/s32g2/platform.mk
index 42952793a..10ed4a49d 100644
--- a/plat/nxp/s32/s32g/s32g2/platform.mk
+++ b/plat/nxp/s32/s32g/s32g2/platform.mk
@@ -19,11 +19,11 @@ PLAT_BL_COMMON_SOURCES	+= drivers/nxp/s32/clk/s32g274a_clk.c \
 			   plat/nxp/s32/s32gen1_mc_rgm.c \
 			   plat/nxp/s32/s32gen1_sramc.c \
 			   plat/nxp/s32/s32g/s32g2/s32g2_vr5510.c \
-			   lib/cpus/aarch64/s32g2.S \
+			   lib/cpus/aarch64/s32.S \
 			   lib/cpus/aarch64/cortex_a53.S \
 
-ERRATA_S32G2_050481	:= 1
-ERRATA_S32G2_050543     := 1
+ERRATA_S32_050481	:= 1
+ERRATA_S32_050543     := 1
 
 # Device tree
 DTB_FILE_NAME		?= fsl-s32g274a-rdb.dtb
\ No newline at end of file
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index 34422cd17..bf36acd08 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -157,7 +157,7 @@ static int ft_fixup_scmi_clks(void *blob)
 	return 0;
 }
 
-#if (ERRATA_S32G2_050543 == 1 && S32G_EMU == 0)
+#if (ERRATA_S32_050543 == 1 && S32G_EMU == 0)
 static int ft_fixup_ddr_errata(void *blob)
 {
 	int nodeoff, ret;
@@ -210,7 +210,7 @@ static int ft_fixups(void *blob)
 	if (ret)
 		goto out;
 
-#if (ERRATA_S32G2_050543 == 1 && S32G_EMU == 0)
+#if (ERRATA_S32_050543 == 1 && S32G_EMU == 0)
 	ret = ft_fixup_ddr_errata(blob);
 	if (ret)
 		goto out;
-- 
2.17.1

