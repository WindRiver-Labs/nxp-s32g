From 1befadefcd74e628d5190e8f832005fab74cba33 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Tue, 21 Dec 2021 15:13:51 +0200
Subject: [PATCH 02/50] s32: sram: Add s32 generic sram files

Issue: ALB-7411
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 plat/nxp/s32/include/s32_platform_def.h       |  3 +++
 .../s32g_sramc.h => include/s32_sramc.h}      |  4 ++--
 plat/nxp/s32/s32_common.mk                    |  2 ++
 plat/nxp/s32/s32_lowlevel_bl2.S               | 19 +++++++++++++++++++
 plat/nxp/s32/s32_lowlevel_common.S            | 15 +++++++++++++++
 .../s32/{s32g/s32g_sramc.c => s32_sramc.c}    |  8 ++++----
 .../s32g_sramc_asm.S => s32_sramc_asm.S}      |  8 ++++----
 plat/nxp/s32/s32g/include/s32g_platform_def.h |  8 +-------
 .../nxp/s32/s32g/s32g2/include/platform_def.h |  2 +-
 plat/nxp/s32/s32g/s32g2/platform.mk           |  2 +-
 .../nxp/s32/s32g/s32g3/include/platform_def.h |  2 +-
 plat/nxp/s32/s32g/s32g3/s32g3_sramc.c         |  8 ++++----
 plat/nxp/s32/s32g/s32g_bl2_el3.c              |  2 +-
 plat/nxp/s32/s32g/s32g_bl31.c                 |  2 +-
 plat/nxp/s32/s32g/s32g_common.mk              |  3 ---
 plat/nxp/s32/s32g/s32g_lowlevel_bl2.S         | 19 -------------------
 plat/nxp/s32/s32g/s32g_lowlevel_common.S      | 14 --------------
 plat/nxp/s32/s32g/s32g_psci.c                 |  2 +-
 .../s32g2/s32g2_sramc.c => s32gen1_sramc.c}   |  8 ++++----
 19 files changed, 64 insertions(+), 67 deletions(-)
 rename plat/nxp/s32/{s32g/include/s32g_sramc.h => include/s32_sramc.h} (94%)
 rename plat/nxp/s32/{s32g/s32g_sramc.c => s32_sramc.c} (95%)
 rename plat/nxp/s32/{s32g/s32g_sramc_asm.S => s32_sramc_asm.S} (82%)
 rename plat/nxp/s32/{s32g/s32g2/s32g2_sramc.c => s32gen1_sramc.c} (79%)

diff --git a/plat/nxp/s32/include/s32_platform_def.h b/plat/nxp/s32/include/s32_platform_def.h
index 409a2d923..0340f8a43 100644
--- a/plat/nxp/s32/include/s32_platform_def.h
+++ b/plat/nxp/s32/include/s32_platform_def.h
@@ -36,6 +36,9 @@
  */
 #define COUNTER_FREQUENCY	    0x004C4B40
 
+#define S32_SRAM_BASE		0x34000000
+#define S32_SRAM_END		(S32_SRAM_BASE + S32_SRAM_SIZE)
+
 /* Top of the first 2GB bank of physical memory */
 #if S32G_EMU == 0
 #define S32_DDR0_END		0xffffffff
diff --git a/plat/nxp/s32/s32g/include/s32g_sramc.h b/plat/nxp/s32/include/s32_sramc.h
similarity index 94%
rename from plat/nxp/s32/s32g/include/s32g_sramc.h
rename to plat/nxp/s32/include/s32_sramc.h
index 7162c9011..cbcb1f3c2 100644
--- a/plat/nxp/s32/s32g/include/s32g_sramc.h
+++ b/plat/nxp/s32/include/s32_sramc.h
@@ -3,8 +3,8 @@
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
-#ifndef S32G_SRAMC_H
-#define S32G_SRAMC_H
+#ifndef S32_SRAMC_H
+#define S32_SRAMC_H
 
 #include <lib/utils_def.h>
 
diff --git a/plat/nxp/s32/s32_common.mk b/plat/nxp/s32/s32_common.mk
index 2785abb31..51baba58e 100644
--- a/plat/nxp/s32/s32_common.mk
+++ b/plat/nxp/s32/s32_common.mk
@@ -40,6 +40,8 @@ PLAT_BL_COMMON_SOURCES += \
 			drivers/nxp/uart/linflexuart.c \
 			plat/nxp/s32/s32_bl_common.c \
 			plat/nxp/s32/s32_lowlevel_common.S \
+			plat/nxp/s32/s32_sramc.c \
+			plat/nxp/s32/s32_sramc_asm.S \
 
 BL2_SOURCES += \
 			${XLAT_TABLES_LIB_SRCS} \
diff --git a/plat/nxp/s32/s32_lowlevel_bl2.S b/plat/nxp/s32/s32_lowlevel_bl2.S
index 180f374aa..4d05c97e2 100644
--- a/plat/nxp/s32/s32_lowlevel_bl2.S
+++ b/plat/nxp/s32/s32_lowlevel_bl2.S
@@ -5,9 +5,28 @@
  */
 
 #include <asm_macros.S>
+#include "s32_sramc.h"
 
+.globl platform_mem_init
+.globl _s32_sram_clr
 .globl plat_secondary_cold_boot_setup
 
+/* Clobber list: x0,x1,x16 */
+func platform_mem_init
+	mov	x16, x30
+	/*
+	 * Initialize SRAM, as BootROM did us no favours
+	 */
+	/* Some BL2 sections need to be initialized */
+	ldr	x0,=__STACKS_START__
+	ldr	x1,=__BL2_END__
+
+	bl	_s32_sram_clr
+	mov	x30, x16
+
+	ret
+endfunc platform_mem_init
+
 func plat_secondary_cold_boot_setup
 	ret
 endfunc plat_secondary_cold_boot_setup
diff --git a/plat/nxp/s32/s32_lowlevel_common.S b/plat/nxp/s32/s32_lowlevel_common.S
index cb9f19c01..5aa323bb2 100644
--- a/plat/nxp/s32/s32_lowlevel_common.S
+++ b/plat/nxp/s32/s32_lowlevel_common.S
@@ -5,11 +5,26 @@
  */
 #include <asm_macros.S>
 #include <platform_def.h>
+#include <plat_macros.S>
 
 .globl plat_is_my_cpu_primary
 .globl plat_my_core_pos
 .globl plat_core_pos_by_mpidr
 .globl plat_panic_handler
+.globl s32_plat_data_stack
+.globl s32_crash_reg_stash
+
+/**
+ * Use a local buffer as stack for Linflex crash callbacks and SRAM
+ * initialization
+ */
+.section .data.s32_plat_data_stack
+	.balign 16
+	s32_plat_data_stack: .skip S32_CRASH_STACK_SIZE
+
+.section .data.s32_crash_reg_stash
+	.align 3
+	s32_crash_reg_stash: .quad 0, 0, 0, 0
 
 func plat_panic_handler
 	wfi
diff --git a/plat/nxp/s32/s32g/s32g_sramc.c b/plat/nxp/s32/s32_sramc.c
similarity index 95%
rename from plat/nxp/s32/s32g/s32g_sramc.c
rename to plat/nxp/s32/s32_sramc.c
index 65714565c..5f14c38b2 100644
--- a/plat/nxp/s32/s32g/s32g_sramc.c
+++ b/plat/nxp/s32/s32_sramc.c
@@ -7,7 +7,7 @@
 #include <errno.h>
 #include <lib/mmio.h>
 #include <platform_def.h>
-#include <s32g_sramc.h>
+#include <s32_sramc.h>
 
 /* SRAM controller is able to erase 64 bits at once */
 #define SRAM_BLOCK              512
@@ -22,7 +22,7 @@
 
 #define SSRAM_MAX_ADDR          0x7FF
 
-int _s32g_sram_clr(uintptr_t start, uintptr_t end);
+int _s32_sram_clr(uintptr_t start, uintptr_t end);
 
 static void a53_sram_init(void *start, size_t len)
 {
@@ -106,10 +106,10 @@ int s32_sram_clear(uintptr_t start, uintptr_t end)
 	if (end < start)
 		return -EINVAL;
 
-	if (start < S32G_SRAM_BASE)
+	if (start < S32_SRAM_BASE)
 		return -EINVAL;
 
-	if (end > S32G_SRAM_END)
+	if (end > S32_SRAM_END)
 		return -EINVAL;
 
 	clear_unaligned_ends(&start, &end);
diff --git a/plat/nxp/s32/s32g/s32g_sramc_asm.S b/plat/nxp/s32/s32_sramc_asm.S
similarity index 82%
rename from plat/nxp/s32/s32g/s32g_sramc_asm.S
rename to plat/nxp/s32/s32_sramc_asm.S
index a8569b09c..f3c781867 100644
--- a/plat/nxp/s32/s32g/s32g_sramc_asm.S
+++ b/plat/nxp/s32/s32_sramc_asm.S
@@ -6,9 +6,9 @@
 
 #include <asm_macros.S>
 #include <plat_macros.S>
-#include "s32g_sramc.h"
+#include "s32_sramc.h"
 
-.globl _s32g_sram_clr
+.globl _s32_sram_clr
 
 /**
  * x0: start address of memory area to clear
@@ -17,7 +17,7 @@
  *
  * Clobber list: x0,x1,x9,x10
  */
-func _s32g_sram_clr
+func _s32_sram_clr
 	s32_save_regs
 	s32_init_local_stack
 
@@ -26,4 +26,4 @@ func _s32g_sram_clr
 	s32_check_stack_guard
 	s32_restore_regs
 	ret
-endfunc _s32g_sram_clr
+endfunc _s32_sram_clr
diff --git a/plat/nxp/s32/s32g/include/s32g_platform_def.h b/plat/nxp/s32/s32g/include/s32g_platform_def.h
index 239f6e210..8179c3b86 100644
--- a/plat/nxp/s32/s32g/include/s32g_platform_def.h
+++ b/plat/nxp/s32/s32g/include/s32g_platform_def.h
@@ -67,12 +67,6 @@
 /* SGI to use for kicking the secondary cores out of wfi */
 #define S32G_SECONDARY_WAKE_SGI	15
 
-/* SRAM is actually at 0x3400_0000; we are just mirroring it in the
- * Virtual Code RAM
- */
-#define S32G_SRAM_BASE		0x34000000
-#define S32G_SRAM_END		(S32G_SRAM_BASE + S32G_SRAM_SIZE)
-
 #define S32G_SSRAM_BASE		(0x24000000)
 #define S32G_SSRAM_SIZE		(0x8000)
 #define S32G_SSRAM_LIMIT	(S32G_SSRAM_BASE + S32G_SSRAM_SIZE)
@@ -118,7 +112,7 @@
 #define S32G_BL32_BASE		(BL31_BASE - S32G_BL32_SIZE)
 #define S32G_BL32_LIMIT		(BL31_BASE)
 
-#define FIP_BASE		(S32G_SRAM_END - FIP_ROFFSET)
+#define FIP_BASE		(S32_SRAM_END - FIP_ROFFSET)
 
 #define PLAT_LOG_LEVEL_ASSERT		LOG_LEVEL_VERBOSE
 
diff --git a/plat/nxp/s32/s32g/s32g2/include/platform_def.h b/plat/nxp/s32/s32g/s32g2/include/platform_def.h
index ab3d1cd1a..ab8d1e2ae 100644
--- a/plat/nxp/s32/s32g/s32g2/include/platform_def.h
+++ b/plat/nxp/s32/s32g/s32g2/include/platform_def.h
@@ -20,7 +20,7 @@
 #define S32_MPIDR_CPU_MASK		0x1
 #define S32_MPIDR_CPU_MASK_BITS	0x1
 
-#define S32G_SRAM_SIZE			0x00800000
+#define S32_SRAM_SIZE			0x00800000
 
 #endif /* PLATFORM_DEF_H */
 
diff --git a/plat/nxp/s32/s32g/s32g2/platform.mk b/plat/nxp/s32/s32g/s32g2/platform.mk
index abd24728c..9e70b8ea4 100644
--- a/plat/nxp/s32/s32g/s32g2/platform.mk
+++ b/plat/nxp/s32/s32g/s32g2/platform.mk
@@ -17,7 +17,7 @@ PLAT_INCLUDES		+= -Iplat/nxp/s32/s32g/s32g2/include \
 PLAT_BL_COMMON_SOURCES	+= drivers/nxp/s32g/clk/s32g274a_clk.c \
 			   plat/nxp/s32/s32g/s32g2/s32g2_mc_me.c \
 			   plat/nxp/s32/s32g/s32g2/s32g2_mc_rgm.c \
-			   plat/nxp/s32/s32g/s32g2/s32g2_sramc.c \
+			   plat/nxp/s32/s32gen1_sramc.c \
 			   plat/nxp/s32/s32g/s32g2/s32g2_vr5510.c \
 			   lib/cpus/aarch64/s32g2.S \
 			   lib/cpus/aarch64/cortex_a53.S \
diff --git a/plat/nxp/s32/s32g/s32g3/include/platform_def.h b/plat/nxp/s32/s32g/s32g3/include/platform_def.h
index b01187828..4deda9820 100644
--- a/plat/nxp/s32/s32g/s32g3/include/platform_def.h
+++ b/plat/nxp/s32/s32g/s32g3/include/platform_def.h
@@ -24,7 +24,7 @@
 #define S32_MPIDR_CPU_MASK		0x3
 #define S32_MPIDR_CPU_MASK_BITS	0x2
 
-#define S32G_SRAM_SIZE			0x1400000
+#define S32_SRAM_SIZE			0x1400000
 
 #endif /* PLATFORM_DEF_H */
 
diff --git a/plat/nxp/s32/s32g/s32g3/s32g3_sramc.c b/plat/nxp/s32/s32g/s32g3/s32g3_sramc.c
index 3040ca3ef..0920ba862 100644
--- a/plat/nxp/s32/s32g/s32g3/s32g3_sramc.c
+++ b/plat/nxp/s32/s32g/s32g3/s32g3_sramc.c
@@ -4,15 +4,15 @@
  * SPDX-License-Identifier: BSD-3-Clause
  */
 #include <platform_def.h>
-#include <s32g_sramc.h>
+#include <s32_sramc.h>
 
 #define SRAMC2_BASE_ADDR        0x4055A000
 #define SRAMC3_BASE_ADDR        0x4055E000
 
-#define SRAM_BANK_SIZE          (S32G_SRAM_SIZE / 4)
+#define SRAM_BANK_SIZE          (S32_SRAM_SIZE / 4)
 
-#define SRAM_BANK_MIN(N)        (S32G_SRAM_BASE + (N) * SRAM_BANK_SIZE)
-#define SRAM_BANK_MAX(N)        (S32G_SRAM_BASE + ((N) + 1) * \
+#define SRAM_BANK_MIN(N)        (S32_SRAM_BASE + (N) * SRAM_BANK_SIZE)
+#define SRAM_BANK_MAX(N)        (S32_SRAM_BASE + ((N) + 1) * \
 				 SRAM_BANK_SIZE - 1)
 
 static uintptr_t a53_to_sramc_offset(uintptr_t addr)
diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index 965801091..c04f4fcc2 100644
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -25,7 +25,7 @@
 #include "s32g_bl_common.h"
 #include <drivers/generic_delay_timer.h>
 #include <plat/nxp/s32g/bl31_ssram/ssram_mailbox.h>
-#include "s32g_sramc.h"
+#include "s32_sramc.h"
 #include <lib/libc/errno.h>
 #include <lib/libfdt/libfdt.h>
 #include <drivers/io/io_storage.h>
diff --git a/plat/nxp/s32/s32g/s32g_bl31.c b/plat/nxp/s32/s32g/s32g_bl31.c
index 3288d83e1..caf74663f 100644
--- a/plat/nxp/s32/s32g/s32g_bl31.c
+++ b/plat/nxp/s32/s32g/s32g_bl31.c
@@ -28,7 +28,7 @@
 #include "s32g_pinctrl.h"
 #include "s32gen1-wkpu.h"
 #include "s32g_bl_common.h"
-#include "s32g_sramc.h"
+#include "s32_sramc.h"
 #include "clk/clk.h"
 
 #define MMU_ROUND_UP_TO_4K(x)	\
diff --git a/plat/nxp/s32/s32g/s32g_common.mk b/plat/nxp/s32/s32g/s32g_common.mk
index 3d65f4053..a728ebc89 100644
--- a/plat/nxp/s32/s32g/s32g_common.mk
+++ b/plat/nxp/s32/s32g/s32g_common.mk
@@ -47,8 +47,6 @@ PLAT_BL_COMMON_SOURCES	+= plat/nxp/s32/s32g/s32g_lowlevel_common.S \
 			   plat/nxp/s32/s32g/s32g_dt.c \
 			   plat/nxp/s32/s32g/s32g_pinctrl.c \
 			   plat/nxp/s32/s32g/s32g_clocks.c \
-			   plat/nxp/s32/s32g/s32g_sramc.c \
-			   plat/nxp/s32/s32g/s32g_sramc_asm.S \
 			   plat/nxp/s32/s32g/s32g_linflexuart.c \
 			   plat/nxp/s32/s32g/s32g_linflexuart_crash.S \
 			   drivers/nxp/s32g/i2c/s32g_i2c.c \
@@ -99,7 +97,6 @@ BL31_SOURCES		+= plat/nxp/s32/s32g/s32g_bl31.c \
 
 BL31_SOURCES		+= plat/nxp/s32/s32g/bl31_lowlevel.S \
 
-
 # User defined parameters, for example:
 # 	make FIP_MMC_OFFSET=0x5400 <...other parameters>
 # These defines update only BL2's view of FIP AppBootCode:Code position.
diff --git a/plat/nxp/s32/s32g/s32g_lowlevel_bl2.S b/plat/nxp/s32/s32g/s32g_lowlevel_bl2.S
index 6e4e90b31..670b9ab71 100644
--- a/plat/nxp/s32/s32g/s32g_lowlevel_bl2.S
+++ b/plat/nxp/s32/s32g/s32g_lowlevel_bl2.S
@@ -7,11 +7,8 @@
 #include <asm_macros.S>
 #include <console_macros.S>
 #include "platform_def.h"
-#include "s32g_sramc.h"
 
-.globl platform_mem_init
 .globl plat_reset_handler
-.globl _s32g_sram_clr
 .globl s32g_ncore_isol_cluster0
 .globl reset_registers_for_lockstep
 
@@ -29,19 +26,3 @@ func plat_reset_handler
 	ret
 endfunc plat_reset_handler
 
-/* Clobber list: x0,x1,x16 */
-func platform_mem_init
-	mov	x16, x30
-	/*
-	 * Initialize SRAM, as BootROM did us no favours
-	 */
-	/* Some BL2 sections need to be initialized */
-	ldr	x0,=__STACKS_START__
-	ldr	x1,=__BL2_END__
-
-	bl	_s32g_sram_clr
-	mov	x30, x16
-
-	ret
-endfunc platform_mem_init
-
diff --git a/plat/nxp/s32/s32g/s32g_lowlevel_common.S b/plat/nxp/s32/s32g/s32g_lowlevel_common.S
index c8bf02f2a..9abe6c327 100644
--- a/plat/nxp/s32/s32g/s32g_lowlevel_common.S
+++ b/plat/nxp/s32/s32g/s32g_lowlevel_common.S
@@ -12,20 +12,6 @@
 
 .globl s32g_ncore_isol_cluster0
 .globl reset_registers_for_lockstep
-.globl s32_plat_data_stack
-.globl s32_crash_reg_stash
-
-/**
- * Use a local buffer as stack for Linflex crash callbacks and SRAM
- * initialization
- */
-.section .data.s32_plat_data_stack
-	.balign 16
-	s32_plat_data_stack: .skip S32_CRASH_STACK_SIZE
-
-.section .data.s32_crash_reg_stash
-	.align 3
-	s32_crash_reg_stash: .quad 0, 0, 0, 0
 
 /* Set the CAIUTC[IsolEn] bit for the primary A53 cluster.
  * This is so cache invalidate operations from the early TF-A boot code
diff --git a/plat/nxp/s32/s32g/s32g_psci.c b/plat/nxp/s32/s32g/s32g_psci.c
index 785eaf58e..9bb7daa28 100644
--- a/plat/nxp/s32/s32g/s32g_psci.c
+++ b/plat/nxp/s32/s32g/s32g_psci.c
@@ -12,7 +12,7 @@
 #include <plat/nxp/s32g/bl31_ssram/ssram_mailbox.h>
 #include "s32g_resume.h"
 #include "s32g_bl_common.h"
-#include "s32g_sramc.h"
+#include "s32_sramc.h"
 #include "s32gen1-wkpu.h"
 
 
diff --git a/plat/nxp/s32/s32g/s32g2/s32g2_sramc.c b/plat/nxp/s32/s32gen1_sramc.c
similarity index 79%
rename from plat/nxp/s32/s32g/s32g2/s32g2_sramc.c
rename to plat/nxp/s32/s32gen1_sramc.c
index 85032eb53..0a6ab2e59 100644
--- a/plat/nxp/s32/s32g/s32g2/s32g2_sramc.c
+++ b/plat/nxp/s32/s32gen1_sramc.c
@@ -4,12 +4,12 @@
  * SPDX-License-Identifier: BSD-3-Clause
  */
 #include <platform_def.h>
-#include <s32g_sramc.h>
+#include <s32_sramc.h>
 
-#define SRAM_BANK_SIZE          (S32G_SRAM_SIZE / 2)
+#define SRAM_BANK_SIZE          (S32_SRAM_SIZE / 2)
 
-#define SRAM_BANK_MIN(N)        (S32G_SRAM_BASE + (N) * SRAM_BANK_SIZE)
-#define SRAM_BANK_MAX(N)        (S32G_SRAM_BASE + ((N) + 1) * \
+#define SRAM_BANK_MIN(N)        (S32_SRAM_BASE + (N) * SRAM_BANK_SIZE)
+#define SRAM_BANK_MAX(N)        (S32_SRAM_BASE + ((N) + 1) * \
 				 SRAM_BANK_SIZE - 1)
 
 static uintptr_t a53_to_sramc_offset(uintptr_t addr)
-- 
2.17.1

