From e2383c45a6173d5eaa84ce403b35eedd21ca1c49 Mon Sep 17 00:00:00 2001
From: Andra-Teodora Ilie <andra.ilie@nxp.com>
Date: Wed, 5 Jan 2022 16:10:27 +0200
Subject: [PATCH 35/50] s32r: bl31: Implement bl31_platform_setup

Issue: ALB-7411
Upstream-Status: Pending 

Signed-off-by: Andra-Teodora Ilie <andra.ilie@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/clk.c     |  9 ++++++---
 plat/nxp/s32/s32r/s32r_bl31.c | 30 +++++++++++++-----------------
 2 files changed, 19 insertions(+), 20 deletions(-)

diff --git a/drivers/nxp/s32/clk/clk.c b/drivers/nxp/s32/clk/clk.c
index aa2a245b3..33eaaac30 100644
--- a/drivers/nxp/s32/clk/clk.c
+++ b/drivers/nxp/s32/clk/clk.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
@@ -10,8 +10,11 @@
 #include <memory_pool.h>
 #include <s32_dt.h>
 
-#define MAX_NUM_CLK 100
-#define MAX_NUM_DRV 20
+/*
+ * We use a clk_driver structure for each 'fixed-clock' node in the
+ * device tree and one for 'fsl,s32-gen1-clocking' node.
+ */
+#define MAX_NUM_DRV 21
 
 static struct clk_driver drivers[MAX_NUM_DRV];
 static struct memory_pool drv_pool = INIT_MEM_POOL(drivers);
diff --git a/plat/nxp/s32/s32r/s32r_bl31.c b/plat/nxp/s32/s32r/s32r_bl31.c
index 8f195487e..81f27242a 100644
--- a/plat/nxp/s32/s32r/s32r_bl31.c
+++ b/plat/nxp/s32/s32r/s32r_bl31.c
@@ -1,28 +1,24 @@
 /*
- * Copyright 2021 NXP
+ * Copyright 2021-2022 NXP
  *
  * SPDX-License-Identifier: BSD-3-Clause
  */
+#include <common/debug.h>
+#include <drivers/generic_delay_timer.h>
 #include <plat/common/platform.h>
 
-void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
-		u_register_t arg2, u_register_t arg3)
-{
-	__asm__ volatile("b .");
-}
-
-void bl31_plat_arch_setup(void)
-{
-	__asm__ volatile("b .");
-}
+#include "s32_bl_common.h"
+#include "s32_clocks.h"
+#include "clk/clk.h"
 
 void bl31_platform_setup(void)
 {
-	__asm__ volatile("b .");
-}
+	generic_delay_timer_init();
 
-entry_point_info_t *bl31_plat_get_next_image_ep_info(uint32_t type)
-{
-	__asm__ volatile("b .");
-	return NULL;
+	update_core_state(plat_my_core_pos(), 1);
+	s32_gic_setup();
+
+	s32_enable_a53_clock();
+	dt_clk_init();
 }
+
-- 
2.17.1

