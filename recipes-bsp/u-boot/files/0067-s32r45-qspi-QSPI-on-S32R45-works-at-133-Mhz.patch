From 36360e0ab3a6de533337cab1319bbae14c37348d Mon Sep 17 00:00:00 2001
From: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Date: Mon, 1 Feb 2021 14:04:07 +0200
Subject: [PATCH 67/76] s32r45: qspi: QSPI on S32R45 works at 133 Mhz

Issue: ALB-6247
Signed-off-by: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
---
 drivers/clk/s32/include/s32gen1_clk_funcs.h |  6 +++++-
 drivers/clk/s32/s32g274a_clk.c              | 17 +----------------
 drivers/clk/s32/s32gen1_clk.c               | 19 ++++++++++++++++++-
 drivers/clk/s32/s32r45_clk.c                | 18 +++++++++++++++++-
 drivers/spi/s32gen1_qspi.c                  |  5 ++++-
 tools/s32gen1image.c                        |  4 ++--
 6 files changed, 47 insertions(+), 22 deletions(-)

diff --git a/drivers/clk/s32/include/s32gen1_clk_funcs.h b/drivers/clk/s32/include/s32gen1_clk_funcs.h
index 0524bd02f9..02dab97dd4 100644
--- a/drivers/clk/s32/include/s32gen1_clk_funcs.h
+++ b/drivers/clk/s32/include/s32gen1_clk_funcs.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #ifndef S32GEN1_CLK_FUNCS_H
 #define S32GEN1_CLK_FUNCS_H
@@ -16,6 +16,10 @@ ulong s32gen1_plat_set_rate(struct clk *c, ulong rate);
 int s32gen1_set_parent(struct clk *c, struct clk *p);
 int s32gen1_enable(struct clk *c);
 
+bool is_qspi1x_clk(uint32_t id);
+bool is_qspi2x_clk(uint32_t id);
+bool is_qspi_clk(uint32_t id);
+
 ulong s32gen1_get_rate(struct clk *clk);
 ulong get_module_rate(struct s32gen1_clk_obj *module,
 		      struct s32gen1_clk_priv *priv);
diff --git a/drivers/clk/s32/s32g274a_clk.c b/drivers/clk/s32/s32g274a_clk.c
index 8c5e4e9730..c7ca783311 100644
--- a/drivers/clk/s32/s32g274a_clk.c
+++ b/drivers/clk/s32/s32g274a_clk.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <asm/arch/siul.h>
 #include <dt-bindings/clock/s32g274a-clock.h>
@@ -327,21 +327,6 @@ struct s32gen1_clk *get_plat_clock(uint32_t id)
 	return s32g274a_clocks[id];
 }
 
-static bool is_qspi1x_clk(uint32_t id)
-{
-	return id == S32GEN1_SCMI_CLK_QSPI_FLASH1X || id == S32GEN1_CLK_QSPI;
-}
-
-static bool is_qspi2x_clk(uint32_t id)
-{
-	return id == S32GEN1_SCMI_CLK_QSPI_FLASH2X || id == S32GEN1_CLK_QSPI_2X;
-}
-
-static bool is_qspi_clk(uint32_t id)
-{
-	return is_qspi1x_clk(id) || is_qspi2x_clk(id);
-}
-
 ulong s32gen1_plat_set_rate(struct clk *c, ulong rate)
 {
 	ulong qspi_max_rate;
diff --git a/drivers/clk/s32/s32gen1_clk.c b/drivers/clk/s32/s32gen1_clk.c
index f84c9f66e5..13f00c0531 100644
--- a/drivers/clk/s32/s32gen1_clk.c
+++ b/drivers/clk/s32/s32gen1_clk.c
@@ -1,8 +1,9 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <dt-bindings/clock/s32gen1-clock.h>
+#include <dt-bindings/clock/s32gen1-scmi-clock.h>
 #include <s32gen1_clk_funcs.h>
 #include <s32gen1_clk_modules.h>
 #include <s32gen1_shared_clks.h>
@@ -652,3 +653,19 @@ struct s32gen1_clk *get_clock(uint32_t id)
 	return plat_clocks[index];
 }
 
+bool is_qspi1x_clk(uint32_t id)
+{
+	return (id == S32GEN1_SCMI_CLK_QSPI_FLASH1X) ||
+		(id == S32GEN1_CLK_QSPI);
+}
+
+bool is_qspi2x_clk(uint32_t id)
+{
+	return (id == S32GEN1_SCMI_CLK_QSPI_FLASH2X) ||
+		(id == S32GEN1_CLK_QSPI_2X);
+}
+
+bool is_qspi_clk(uint32_t id)
+{
+	return is_qspi1x_clk(id) || is_qspi2x_clk(id);
+}
diff --git a/drivers/clk/s32/s32r45_clk.c b/drivers/clk/s32/s32r45_clk.c
index c1a146039d..c027493712 100644
--- a/drivers/clk/s32/s32r45_clk.c
+++ b/drivers/clk/s32/s32r45_clk.c
@@ -1,8 +1,9 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <dt-bindings/clock/s32r45-clock.h>
+#include <dt-bindings/clock/s32gen1-scmi-clock.h>
 #include <s32gen1_clk_funcs.h>
 #include <s32gen1_clk_modules.h>
 #include <s32gen1_scmi_clk.h>
@@ -199,5 +200,20 @@ struct s32gen1_clk *get_plat_clock(uint32_t id)
 
 ulong s32gen1_plat_set_rate(struct clk *c, ulong rate)
 {
+	ulong qspi_max_rate;
+
+	if (s32gen1_scmi_request(c))
+		return 0;
+
+	if (is_qspi_clk(c->id)) {
+		if (is_qspi2x_clk(c->id))
+			qspi_max_rate = S32GEN1_QSPI_MAX_FREQ * 2;
+		else
+			qspi_max_rate = S32GEN1_QSPI_MAX_FREQ;
+
+		if (rate > qspi_max_rate)
+			rate = qspi_max_rate;
+	}
+
 	return s32gen1_scmi_set_rate(c, rate);
 }
diff --git a/drivers/spi/s32gen1_qspi.c b/drivers/spi/s32gen1_qspi.c
index 7f2f653752..6a6fa55381 100644
--- a/drivers/spi/s32gen1_qspi.c
+++ b/drivers/spi/s32gen1_qspi.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include "fsl_qspi.h"
 #include <cpu_func.h>
@@ -838,6 +838,9 @@ static int enable_ddr(struct fsl_qspi_priv *priv)
 	if (is_s32gen1_soc_rev1())
 		ddr_config.dllcr &= ~QSPI_DLLCR_FREQEN_EN;
 #endif
+#if defined(CONFIG_TARGET_S32R45EVB)
+	ddr_config.dllcr &= ~QSPI_DLLCR_FREQEN_EN;
+#endif
 
 	ret = program_dllcra(priv, ddr_config.dllcr);
 	if (ret) {
diff --git a/tools/s32gen1image.c b/tools/s32gen1image.c
index 528420ba36..2a1945a508 100644
--- a/tools/s32gen1image.c
+++ b/tools/s32gen1image.c
@@ -186,7 +186,7 @@ static struct qspi_params s32g2xx_qspi_conf = {
 	},
 };
 
-#ifdef CONFIG_S32G274ARDB
+#if defined(CONFIG_S32G274ARDB) || defined(CONFIG_TARGET_S32R45EVB)
 static void adjust_qspi_params(struct qspi_params *qspi_params)
 {
 	qspi_params->dllcr = 0x8280000c;
@@ -203,7 +203,7 @@ static struct qspi_params *get_qspi_params(struct program_image *image)
 static void s32gen1_set_qspi_params(struct qspi_params *qspi_params)
 {
 	memcpy(qspi_params, &s32g2xx_qspi_conf, sizeof(*qspi_params));
-#ifdef CONFIG_S32G274ARDB
+#if defined(CONFIG_S32G274ARDB) || defined(CONFIG_TARGET_S32R45EVB)
 	adjust_qspi_params(qspi_params);
 #endif
 }
-- 
2.17.1

