From da90c3610d5ba8e347ff9890017b26f98a1a5172 Mon Sep 17 00:00:00 2001
From: Radu Pirea <radu-nicolae.pirea@nxp.com>
Date: Mon, 8 Feb 2021 19:39:29 +0200
Subject: [PATCH 01/42] boards: campp: update lpddr2 settings

Update lpddr2 settings for campp rev c board.

Upstream-Status: Pending

Issue: ALB-6474
Signed-off-by: Radu Pirea <radu-nicolae.pirea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/lpddr2.c               |  12 +-
 arch/arm/cpu/armv8/s32/s32v234/clock.c        |  46 ++++---
 arch/arm/include/asm/arch-s32/lpddr2.h        |  22 ++-
 .../asm/arch-s32/s32v234/mc_cgm_regs.h        |  15 +-
 board/freescale/campps32v2/lpddr2_config.c    | 128 ++++++++++++------
 board/freescale/s32v234evb/lpddr2_config.c    |   8 +-
 board/freescale/s32v234pcie/lpddr2_config.c   |   8 +-
 7 files changed, 149 insertions(+), 90 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/lpddr2.c b/arch/arm/cpu/armv8/s32/lpddr2.c
index 380fe71ef1..8cfd684dfe 100644
--- a/arch/arm/cpu/armv8/s32/lpddr2.c
+++ b/arch/arm/cpu/armv8/s32/lpddr2.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier:     GPL-2.0+
 /*
  * (C) Copyright 2015 Freescale Semiconductor, Inc.
- * (C) Copyright 2017,2020 NXP
+ * (C) Copyright 2017, 2020-2021 NXP
  */
 
 #include <common.h>
@@ -106,7 +106,7 @@ void config_mmdc(uint8_t module)
 	writel(MMDC_MDSCR_RST_VALUE, mmdc_addr + MMDC_MDSCR);
 	writel(MMDC_MDSCR_MR1_VALUE, mmdc_addr + MMDC_MDSCR);
 	writel(config->mdscr_mr2, mmdc_addr + MMDC_MDSCR);
-	writel(MMDC_MDSCR_MR3_VALUE, mmdc_addr + MMDC_MDSCR);
+	writel(config->mdscr_mr3, mmdc_addr + MMDC_MDSCR);
 	writel(MMDC_MDSCR_MR10_VALUE, mmdc_addr + MMDC_MDSCR);
 
 	/* Set the amount of DRAM */
@@ -119,9 +119,9 @@ void config_mmdc(uint8_t module)
 		       mmdc_addr + MMDC_MPRDDLCTL);
 		writel(config->mpwrdlctl_module0,
 		       mmdc_addr + MMDC_MPWRDLCTL);
-		writel(MMDC_MPDGCTRL0_MODULE0_VALUE,
+		writel(config->mpdgctrl0_module0,
 		       mmdc_addr + MMDC_MPDGCTRL0);
-		writel(MMDC_MPDGCTRL1_MODULE0_VALUE,
+		writel(config->mpdgctrl1_module0,
 		       mmdc_addr + MMDC_MPDGCTRL1);
 			break;
 		case MMDC1:
@@ -130,9 +130,9 @@ void config_mmdc(uint8_t module)
 		       mmdc_addr + MMDC_MPRDDLCTL);
 		writel(config->mpwrdlctl_module1,
 		       mmdc_addr + MMDC_MPWRDLCTL);
-		writel(MMDC_MPDGCTRL0_MODULE1_VALUE,
+		writel(config->mpdgctrl0_module1,
 		       mmdc_addr + MMDC_MPDGCTRL0);
-		writel(MMDC_MPDGCTRL1_MODULE1_VALUE,
+		writel(config->mpdgctrl1_module1,
 		       mmdc_addr + MMDC_MPDGCTRL1);
 			break;
 	}
diff --git a/arch/arm/cpu/armv8/s32/s32v234/clock.c b/arch/arm/cpu/armv8/s32/s32v234/clock.c
index 2a77997a57..0e03eeee52 100644
--- a/arch/arm/cpu/armv8/s32/s32v234/clock.c
+++ b/arch/arm/cpu/armv8/s32/s32v234/clock.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier:     GPL-2.0+
 /*
  * (C) Copyright 2015-2016 Freescale Semiconductor, Inc.
- * (C) Copyright 2017-2018,2020 NXP
+ * (C) Copyright 2017-2018, 2020-2021 NXP
  */
 
 #include <asm/io.h>
@@ -10,12 +10,9 @@
 #include <asm/arch/mc_me_regs.h>
 #include <asm/arch/mc_rgm_regs.h>
 #include <asm/arch/clock.h>
+#include <asm/arch/lpddr2.h>
 #include <asm/arch-s32/siul.h>
 
-#ifdef CONFIG_TARGET_CAMPPS32V2
-#include <campps32v2.h>
-#endif
-
 struct ddr_clk_params {
 	u32 phi0_freq;
 	u32 phi1_freq;
@@ -374,23 +371,40 @@ static void enable_modules_clock( void )
 	entry_to_target_mode( MC_ME_MCTL_RUN0 );
 }
 
-#ifndef CONFIG_TARGET_CAMPPS32V2
+#if defined(CONFIG_S32_LPDDR2)
 static void initialize_ddr_clk_params(struct ddr_clk_params *params)
 {
-	params->phi0_freq = DDR_PLL_PHI0_FREQ;
-	params->phi1_freq = DDR_PLL_PHI1_FREQ;
-	params->prediv = DDR_PLL_PLLDV_PREDIV;
-	params->mfd = DDR_PLL_PLLDV_MFD;
-	params->mfn = DDR_PLL_PLLDV_MFN;
+	switch (s32_get_lpddr2_config()->frequency) {
+	case 400:
+		*params = (struct ddr_clk_params) {
+			.phi0_freq = DDR_PLL_PHI0_FREQ_400MHZ,
+			.phi1_freq = DDR_PLL_PHI1_FREQ_400MHZ,
+			.prediv = DDR_PLL_PLLDV_PREDIV_400MHZ,
+			.mfd = DDR_PLL_PLLDV_MFD_400MHZ,
+			.mfn = DDR_PLL_PLLDV_MFN_400MHZ,
+		};
+		break;
+	case 533:
+	default:
+		*params = (struct ddr_clk_params) {
+			.phi0_freq = DDR_PLL_PHI0_FREQ_533MHZ,
+			.phi1_freq = DDR_PLL_PHI1_FREQ_533MHZ,
+			.prediv = DDR_PLL_PLLDV_PREDIV_533MHZ,
+			.mfd = DDR_PLL_PLLDV_MFD_533MHZ,
+			.mfn = DDR_PLL_PLLDV_MFN_533MHZ,
+		};
+	}
 }
 #else
 static void initialize_ddr_clk_params(struct ddr_clk_params *params)
 {
-	params->phi0_freq = DDR_PLL_PHI0_FREQ_400MHZ;
-	params->phi1_freq = DDR_PLL_PHI1_FREQ_400MHZ;
-	params->prediv = DDR_PLL_PLLDV_PREDIV_400MHZ;
-	params->mfd = DDR_PLL_PLLDV_MFD_400MHZ;
-	params->mfn = DDR_PLL_PLLDV_MFN_400MHZ;
+	*params = (struct ddr_clk_params) {
+		.phi0_freq = DDR_PLL_PHI0_FREQ_533MHZ,
+		.phi1_freq = DDR_PLL_PHI1_FREQ_533MHZ,
+		.prediv = DDR_PLL_PLLDV_PREDIV_533MHZ,
+		.mfd = DDR_PLL_PLLDV_MFD_533MHZ,
+		.mfn = DDR_PLL_PLLDV_MFN_533MHZ,
+	};
 }
 #endif
 
diff --git a/arch/arm/include/asm/arch-s32/lpddr2.h b/arch/arm/include/asm/arch-s32/lpddr2.h
index 2ccde5fe06..d3e6d0f034 100644
--- a/arch/arm/include/asm/arch-s32/lpddr2.h
+++ b/arch/arm/include/asm/arch-s32/lpddr2.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /*
  * Copyright 2015-2016 Freescale Semiconductor, Inc.
- * Copyright 2017,2020 NXP
+ * Copyright 2017, 2020-2021 NXP
  */
 
 #ifndef __ARCH_ARM_MACH_S32_LPDDR2_H__
@@ -37,9 +37,9 @@
 /* Set MDSCR[CON_REQ] (configuration request) */
 #define MMDC_MDSCR_CFG_VALUE		0x00008000
 /* Precharge-all command CS0 */
-#define MMDC_MDSCR_CS0_VALUE				0x00008010
+#define MMDC_MDSCR_CS0_VALUE		0x00008010
 /* Precharge-all command CS1 */
-#define MMDC_MDSCR_CS1_VALUE				0x00008018
+#define MMDC_MDSCR_CS1_VALUE		0x00008018
 /* tAOFPD=n/a,tAONPD=n/a,tANPD=n/a,tAXPD=n/a,tODTLon=n/a,tODT_idle_off=n/a */
 #define MMDC_MDOTC_VALUE		0x00000000
 /* tXPR=n/a , SDE_to_RST=n/a, RST_to_CKE=14 */
@@ -60,18 +60,8 @@
  * wrap control no wrap, tWR cycles 8
  */
 #define MMDC_MDSCR_MR1_VALUE		0xC2018030
-/* Configure MR3: DS=34R */
-#define MMDC_MDSCR_MR3_VALUE		0x01038030
 /* Configure MR10: Calibration at init */
 #define MMDC_MDSCR_MR10_VALUE		0xFF0A8030
-/* Read DQS gating control 0 (disabled) */
-#define MMDC_MPDGCTRL0_MODULE0_VALUE	0x20000000
-/* Read DQS gating control 1 */
-#define MMDC_MPDGCTRL1_MODULE0_VALUE	0x00000000
-/* Read DQS gating control 0 (disabled) */
-#define MMDC_MPDGCTRL0_MODULE1_VALUE	0x20000000
-/* Read DQS gating control 1 */
-#define MMDC_MPDGCTRL1_MODULE1_VALUE	0x00000000
 /* Read/write command delay - default used */
 #define MMDC_MDRWD_VALUE		0x0F9F26D2
 /* Power down control */
@@ -95,10 +85,16 @@ struct lpddr2_config {
 	u32 mdctl;
 	u32 mdmisc;
 	u32 mdscr_mr2;
+	u32 mdscr_mr3;
 	u32 mprddlctl_module0;
 	u32 mprddlctl_module1;
 	u32 mpwrdlctl_module0;
 	u32 mpwrdlctl_module1;
+	u32 mpdgctrl0_module0;
+	u32 mpdgctrl1_module0;
+	u32 mpdgctrl0_module1;
+	u32 mpdgctrl1_module1;
+	u32 frequency;
 };
 
 const struct lpddr2_config *s32_get_lpddr2_config(void);
diff --git a/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h b/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
index 7c17d88b45..7550f24dcb 100644
--- a/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
+++ b/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
@@ -1,8 +1,7 @@
-/*
+/* SPDX-License-Identifier: GPL-2.0+
  * (C) Copyright 2015 Freescale Semiconductor, Inc.
- * (C) Copyright 2017-2018,2020 NXP
+ * (C) Copyright 2017-2018, 2020-2021 NXP
  *
- * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #ifndef __ARCH_ARM_MACH_S32V234_MCCGM_REGS_H__
@@ -334,8 +333,8 @@
 #define ENET_PLL_PLLDV_MFD		(50)
 #define ENET_PLL_PLLDV_MFN		(0)
 
-#define DDR_PLL_PHI0_FREQ		(533000000)
-#define DDR_PLL_PHI1_FREQ		(1066000000)
+#define DDR_PLL_PHI0_FREQ_533MHZ	(533000000)
+#define DDR_PLL_PHI1_FREQ_533MHZ	(1066000000)
 #define DDR_PLL_PHI0_FREQ_400MHZ	(400000000)
 #define DDR_PLL_PHI1_FREQ_400MHZ	(800000000)
 /* DDR_PLL_PHI1_DFS1_FREQ - 500 Mhz */
@@ -351,9 +350,9 @@
 #define DDR_PLL_PHI1_DFS3_MFI		(3)
 #define DDR_PLL_PHI1_DFS3_MFN		(12)
 #define DDR_PLL_PHI1_DFS_Nr		(3)
-#define DDR_PLL_PLLDV_PREDIV		(2)
-#define DDR_PLL_PLLDV_MFD		(53)
-#define DDR_PLL_PLLDV_MFN		(6144)
+#define DDR_PLL_PLLDV_PREDIV_533MHZ	(2)
+#define DDR_PLL_PLLDV_MFD_533MHZ	(53)
+#define DDR_PLL_PLLDV_MFN_533MHZ	(6144)
 #define DDR_PLL_PLLDV_PREDIV_400MHZ	(1)
 #define DDR_PLL_PLLDV_MFD_400MHZ	(20)
 #define DDR_PLL_PLLDV_MFN_400MHZ	(0)
diff --git a/board/freescale/campps32v2/lpddr2_config.c b/board/freescale/campps32v2/lpddr2_config.c
index 577a9a6c0e..6dc9117689 100644
--- a/board/freescale/campps32v2/lpddr2_config.c
+++ b/board/freescale/campps32v2/lpddr2_config.c
@@ -1,12 +1,14 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #include <common.h>
 #include <asm/arch/lpddr2.h>
 #include <campps32v2.h>
 
+// The magic values used below are generated using a DDR Tool
+
 static const struct lpddr2_config campps32v2_lpddr2_config_1 = {
 	.mdasp_module0 = 0x0000004F,
 	.mdasp_module1 = 0x0000006F,
@@ -17,42 +19,60 @@ static const struct lpddr2_config campps32v2_lpddr2_config_1 = {
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
 	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x44444242,
-	.mprddlctl_module1 = 0x44484440,
-	.mpwrdlctl_module0 = 0x44444044,
-	.mpwrdlctl_module1 = 0x3E3C3A3E,
+	.mdscr_mr3 = 0x04038030,
+	.mprddlctl_module0 = 0x42464242,
+	.mprddlctl_module1 = 0x3E423E3E,
+	.mpwrdlctl_module0 = 0x44464444,
+	.mpwrdlctl_module1 = 0x3E3E3C40,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 400,
 };
 
 static const struct lpddr2_config campps32v2_lpddr2_config_2 = {
 	.mdasp_module0 = 0x0000004F,
 	.mdasp_module1 = 0x0000006F,
-	.mdcfg0 = 0x33374133,
-	.mdcfg1 = 0xDAF00A82,
-	.mdcfg2 = 0x00000093,
-	.mdcfg3lp = 0x00170777,
+	.mdcfg0 = 0x454F61A5,
+	.mdcfg1 = 0x93F60EA3,
+	.mdcfg2 = 0x000000DD,
+	.mdcfg3lp = 0x001F0999,
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
-	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x46464040,
-	.mprddlctl_module1 = 0x46484042,
-	.mpwrdlctl_module0 = 0x44444442,
-	.mpwrdlctl_module1 = 0x423E3E3C,
+	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x06038030,
+	.mprddlctl_module0 = 0x46464042,
+	.mprddlctl_module1 = 0x4648443E,
+	.mpwrdlctl_module0 = 0x4242443E,
+	.mpwrdlctl_module1 = 0x4240403C,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 533,
 };
 
 static const struct lpddr2_config campps32v2_lpddr2_config_3 = {
 	.mdasp_module0 = 0x0000004F,
 	.mdasp_module1 = 0x0000006F,
-	.mdcfg0 = 0x33374133,
-	.mdcfg1 = 0xDAF00A82,
-	.mdcfg2 = 0x00000093,
-	.mdcfg3lp = 0x00170777,
+	.mdcfg0 = 0x454F61A5,
+	.mdcfg1 = 0x93F60EA3,
+	.mdcfg2 = 0x000000DD,
+	.mdcfg3lp = 0x00240AAD,
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
-	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x42444042,
-	.mprddlctl_module1 = 0x42464644,
-	.mpwrdlctl_module0 = 0x44444444,
-	.mpwrdlctl_module1 = 0x4040403E,
+	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x06038030,
+	.mprddlctl_module0 = 0x44464042,
+	.mprddlctl_module1 = 0x44484444,
+	.mpwrdlctl_module0 = 0x42424040,
+	.mpwrdlctl_module1 = 0x423E3A3E,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 533,
 };
 
 static const struct lpddr2_config campps32v2_lpddr2_config_4 = {
@@ -65,42 +85,60 @@ static const struct lpddr2_config campps32v2_lpddr2_config_4 = {
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
 	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x44463E42,
-	.mprddlctl_module1 = 0x40444442,
-	.mpwrdlctl_module0 = 0x42444244,
-	.mpwrdlctl_module1 = 0x403E3E3C,
+	.mdscr_mr3 = 0x01038030,
+	.mprddlctl_module0 = 0x42463E40,
+	.mprddlctl_module1 = 0x42444240,
+	.mpwrdlctl_module0 = 0x42444242,
+	.mpwrdlctl_module1 = 0x3E403E40,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 400,
 };
 
 static const struct lpddr2_config campps32v2_lpddr2_config_5 = {
 	.mdasp_module0 = 0x0000004F,
 	.mdasp_module1 = 0x0000006F,
-	.mdcfg0 = 0x33374133,
-	.mdcfg1 = 0xDAF00A82,
-	.mdcfg2 = 0x00000093,
-	.mdcfg3lp = 0x00170777,
+	.mdcfg0 = 0x454F61A5,
+	.mdcfg1 = 0x93F60EA3,
+	.mdcfg2 = 0x000000DD,
+	.mdcfg3lp = 0x001F0999,
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
-	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x42443C42,
-	.mprddlctl_module1 = 0x44444040,
-	.mpwrdlctl_module0 = 0x42444240,
-	.mpwrdlctl_module1 = 0x3E3E3E3C,
+	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x01038030,
+	.mprddlctl_module0 = 0x44483E46,
+	.mprddlctl_module1 = 0x4648423E,
+	.mpwrdlctl_module0 = 0x484A4844,
+	.mpwrdlctl_module1 = 0x3C3E3C3C,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 533,
 };
 
 static const struct lpddr2_config campps32v2_lpddr2_config_6 = {
 	.mdasp_module0 = 0x0000004F,
 	.mdasp_module1 = 0x0000006F,
-	.mdcfg0 = 0x33374133,
-	.mdcfg1 = 0xDAF00A82,
-	.mdcfg2 = 0x00000093,
-	.mdcfg3lp = 0x00170777,
+	.mdcfg0 = 0x454F61A5,
+	.mdcfg1 = 0x93F60EA3,
+	.mdcfg2 = 0x000000DD,
+	.mdcfg3lp = 0x001F0999,
 	.mdctl = 0x03110000,
 	.mdmisc = 0x00001688,
-	.mdscr_mr2 = 0x04028030,
-	.mprddlctl_module0 = 0x44443E44,
-	.mprddlctl_module1 = 0x46484040,
-	.mpwrdlctl_module0 = 0x46424240,
-	.mpwrdlctl_module1 = 0x3C3C3E3C,
+	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x01038030,
+	.mprddlctl_module0 = 0x42443E44,
+	.mprddlctl_module1 = 0x464A4444,
+	.mpwrdlctl_module0 = 0x48484444,
+	.mpwrdlctl_module1 = 0x403E3E40,
+	.mpdgctrl0_module0 = 0x2C7C0C7C,
+	.mpdgctrl1_module0 = 0x0C7C0C7C,
+	.mpdgctrl0_module1 = 0x2C7C0C7C,
+	.mpdgctrl1_module1 = 0x0C7C0C7C,
+	.frequency = 533,
 };
 
 const struct lpddr2_config *s32_get_lpddr2_config(void)
diff --git a/board/freescale/s32v234evb/lpddr2_config.c b/board/freescale/s32v234evb/lpddr2_config.c
index d941e8bece..ac3df54e86 100644
--- a/board/freescale/s32v234evb/lpddr2_config.c
+++ b/board/freescale/s32v234evb/lpddr2_config.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #include <common.h>
@@ -16,10 +16,16 @@ static const struct lpddr2_config s32v_lpddr2_config = {
 	.mdctl = 0x03010000,
 	.mdmisc = 0x000017C8,
 	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x01038030,
 	.mprddlctl_module0 = 0x4D4B4F4B,
 	.mprddlctl_module1 = 0x49484848,
 	.mpwrdlctl_module0 = 0x38383737,
 	.mpwrdlctl_module1 = 0x3E403E3F,
+	.mpdgctrl0_module0 = 0x20000000,
+	.mpdgctrl1_module0 = 0x00000000,
+	.mpdgctrl0_module1 = 0x20000000,
+	.mpdgctrl1_module1 = 0x00000000,
+	.frequency = 533,
 };
 
 const struct lpddr2_config *s32_get_lpddr2_config(void)
diff --git a/board/freescale/s32v234pcie/lpddr2_config.c b/board/freescale/s32v234pcie/lpddr2_config.c
index d941e8bece..ac3df54e86 100644
--- a/board/freescale/s32v234pcie/lpddr2_config.c
+++ b/board/freescale/s32v234pcie/lpddr2_config.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #include <common.h>
@@ -16,10 +16,16 @@ static const struct lpddr2_config s32v_lpddr2_config = {
 	.mdctl = 0x03010000,
 	.mdmisc = 0x000017C8,
 	.mdscr_mr2 = 0x06028030,
+	.mdscr_mr3 = 0x01038030,
 	.mprddlctl_module0 = 0x4D4B4F4B,
 	.mprddlctl_module1 = 0x49484848,
 	.mpwrdlctl_module0 = 0x38383737,
 	.mpwrdlctl_module1 = 0x3E403E3F,
+	.mpdgctrl0_module0 = 0x20000000,
+	.mpdgctrl1_module0 = 0x00000000,
+	.mpdgctrl0_module1 = 0x20000000,
+	.mpdgctrl1_module1 = 0x00000000,
+	.frequency = 533,
 };
 
 const struct lpddr2_config *s32_get_lpddr2_config(void)
-- 
2.25.1

