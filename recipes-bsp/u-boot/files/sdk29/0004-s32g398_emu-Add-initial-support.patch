From e217188c00cebbf6af9716f3174c35504803f489 Mon Sep 17 00:00:00 2001
From: Larisa Grigore <larisa.grigore@nxp.com>
Date: Fri, 22 Jan 2021 13:57:31 +0200
Subject: [PATCH 04/42] s32g398_emu: Add initial support

This commit is the initial support for S32G3. The only
difference between S32G3 and S32G2 addressed in this commit
is the CORE CLK update.

Upstream-Status: Pending

Issue: ALB-6121
Signed-off-by: Larisa Grigore <larisa.grigore@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/Kconfig                |  10 +
 arch/arm/cpu/armv8/s32/s32-gen1/Makefile      |   5 +-
 arch/arm/cpu/armv8/s32/s32-gen1/cmu.c         |   4 +-
 arch/arm/cpu/armv8/s32/s32-gen1/soc.c         |  22 +-
 arch/arm/dts/Makefile                         |   1 +
 arch/arm/dts/fsl-s32g.dtsi                    | 522 ++++++++++++++++++
 arch/arm/dts/fsl-s32g274a.dtsi                | 515 +----------------
 arch/arm/dts/fsl-s32g398a.dtsi                |  16 +
 arch/arm/dts/fsl-s32g398aemu.dts              |  29 +
 board/freescale/s32-gen1/Kconfig              |   3 +-
 board/freescale/s32-gen1/Makefile             |   3 +-
 board/freescale/s32-gen1/board_common.h       |   4 +-
 board/freescale/s32-gen1/common.c             |   6 +-
 .../s32-gen1/{s32g274aemu.c => s32g_emu.c}    |   0
 configs/s32g398a_emu_defconfig                |  28 +
 drivers/clk/s32/Makefile                      |   1 +
 drivers/clk/s32/clk_dump/Makefile             |   1 +
 drivers/clk/s32/s32g274a_clk.c                |   4 +
 drivers/clk/s32/s32gen1_clk.c                 |   2 +
 drivers/net/dwc_eth_qos_s32cc.c               |   3 +-
 include/configs/s32g398a.h                    |  24 +
 .../dt-bindings/clock/s32gen1-clock-freq.h    |  14 +-
 22 files changed, 684 insertions(+), 533 deletions(-)
 create mode 100644 arch/arm/dts/fsl-s32g.dtsi
 create mode 100644 arch/arm/dts/fsl-s32g398a.dtsi
 create mode 100644 arch/arm/dts/fsl-s32g398aemu.dts
 rename board/freescale/s32-gen1/{s32g274aemu.c => s32g_emu.c} (100%)
 create mode 100644 configs/s32g398a_emu_defconfig
 create mode 100644 include/configs/s32g398a.h

diff --git a/arch/arm/cpu/armv8/s32/Kconfig b/arch/arm/cpu/armv8/s32/Kconfig
index b8ea0a0bd5..57ed48b244 100644
--- a/arch/arm/cpu/armv8/s32/Kconfig
+++ b/arch/arm/cpu/armv8/s32/Kconfig
@@ -14,6 +14,12 @@ config NXP_S32G2XX
 	help
 	  Platforms having S32G2XXX SoC
 
+config NXP_S32G3XX
+	bool
+	select S32_GEN1
+	help
+	  Platforms having S32G3XXX SoC
+
 config NXP_S32R45
 	bool
 	select S32_GEN1
@@ -100,6 +106,10 @@ config TARGET_S32G274AEMU
 	bool "Support s32g274a ZeBu"
 	select NXP_S32G2XX
 
+config TARGET_S32G398AEMU
+	bool "Support S32G398A ZeBu"
+	select NXP_S32G3XX
+
 endchoice
 
 if TARGET_S32V234EVB
diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/Makefile b/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
index 21c070ef1e..9e8bde1aae 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
@@ -1,10 +1,9 @@
 # SPDX-License-Identifier:	GPL-2.0+
 #
-# Copyright 2018-2020 NXP
+# Copyright 2018-2021 NXP
 #
 
-obj-$(CONFIG_NXP_S32G2XX)		+= cmu.o
-obj-$(CONFIG_NXP_S32R45)		+= cmu.o
+obj-$(CONFIG_S32_GEN1)			+= cmu.o
 obj-$(CONFIG_HSE_SECBOOT)		+= hse_adv_secboot.o
 obj-y					+= ncore.o
 obj-y					+= soc.o
diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/cmu.c b/arch/arm/cpu/armv8/s32/s32-gen1/cmu.c
index 298650b8c9..eb9c7699c4 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/cmu.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/cmu.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <asm/io.h>
 #include <asm/arch/siul.h>
@@ -189,7 +189,7 @@ static struct cmu cmu_blocks[] = {
 	FXOSC_PERIPH_CMU_FC(53, MIPICSI2_0, 400),
 	FXOSC_PERIPH_CMU_FC(54, SERDES_REF_CLK, 125),
 };
-#elif defined(CONFIG_NXP_S32G2XX)
+#elif defined(CONFIG_NXP_S32G2XX) || defined(CONFIG_NXP_S32G3XX)
 static struct cmu cmu_blocks[] = {
 	FIRC_PERIPH_CMU_FC(0, FXOSC_CLK, FXOSC_FREQ),
 	FXOSC_PERIPH_CMU_FM(1, FIRC_CLK, FIRC_FREQ),
diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/soc.c b/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
index 45e0edca3c..fad1cd961b 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
@@ -152,6 +152,8 @@ int print_cpuinfo(void)
 	#endif  /* CONFIG_TARGET_TYPE_S32GEN1_SIMULATOR */
 #elif defined(CONFIG_NXP_S32R45)
 	printf("CPU:\tNXP S32R45\n");
+#elif defined(CONFIG_NXP_S32G3XX)
+	printf("CPU:\tNXP S32G398A\n");
 #endif
 	printf("Reset cause: %s\n", get_reset_cause());
 
@@ -371,7 +373,17 @@ u32 cpu_pos_mask(void)
 
 	return 0;
 }
+#elif defined(CONFIG_NXP_S32G3XX) || defined(CONFIG_NXP_S32R45)
+u32 cpu_pos_mask(void)
+{
+	/* 4 cores */
+	return 0xFU;
+}
+#else
+#error "Unsupported SOC"
+#endif
 
+#if CONFIG_NXP_S32G2XX
 u32 get_sram_size(void)
 {
 	switch (get_s32g2_derivative()) {
@@ -386,15 +398,7 @@ u32 get_sram_size(void)
 
 	return 0;
 }
-#endif
-
-#ifdef CONFIG_NXP_S32R45
-u32 cpu_pos_mask(void)
-{
-	/* 4 cores */
-	return 0xFU;
-}
-
+#else
 u32 get_sram_size(void)
 {
 	return S32_SRAM_SIZE;
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 642d985484..4d97b36850 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -391,6 +391,7 @@ dtb-$(CONFIG_FSL_LSCH2) += fsl-ls1043a-qds-duart.dtb \
 dtb-$(CONFIG_TARGET_S32G274ABLUEBOX3) += fsl-s32g274abluebox3.dtb
 dtb-$(CONFIG_TARGET_S32G274AEVB) += fsl-s32g274aevb.dtb
 dtb-$(CONFIG_TARGET_S32G274AEMU) += fsl-s32g274aemu.dtb
+dtb-$(CONFIG_TARGET_S32G398AEMU) += fsl-s32g398aemu.dtb
 dtb-$(CONFIG_S32G274ARDB) += fsl-s32g274ardb.dtb
 dtb-$(CONFIG_S32G274ARDB2) += fsl-s32g274ardb2.dtb
 dtb-$(CONFIG_TARGET_S32R45EVB) += fsl-s32r45.dtb
diff --git a/arch/arm/dts/fsl-s32g.dtsi b/arch/arm/dts/fsl-s32g.dtsi
new file mode 100644
index 0000000000..e995eb5f3c
--- /dev/null
+++ b/arch/arm/dts/fsl-s32g.dtsi
@@ -0,0 +1,522 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2017-2021 NXP
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+#include <dt-bindings/clock/s32g274a-clock.h>
+#include <dt-bindings/clock/s32g274a-scmi-clock.h>
+#include <dt-bindings/pinctrl/s32g274a-pinctrl.h>
+
+/dts-v1/;
+#include "fsl-s32-gen1.dtsi"
+/ {
+	model = "NXP S32G2XX";
+	compatible = "fsl,s32g", "fsl,s32gen1", "arm,vexpress,v2p-aarch64",
+				"arm,vexpress";
+
+	aliases {
+		pcie1 = &pcie1;
+	};
+
+	signature {
+		key-boot_key {
+			required = "conf";
+			algo = "sha1,rsa2048";
+			key-name-hint = "boot_key";
+		};
+	};
+
+	serdes1: serdes@44180000 {
+		compatible = "fsl,s32gen1-serdes";
+		reg = <0x00 0x44100000 0x0 0x80000   /* dbi registers */
+		       0x00 0x44180000 0x0 0x04000>; /* serdes registers */
+		reg-names = "dbi", "ss";
+		#address-cells = <3>;
+		#size-cells = <2>;
+		device_type = "pci-generic";
+		device_id = <1>;
+		num-lanes = <2>; /* supports max 2 lanes */
+		clocks = <&clks S32GEN1_SCMI_CLK_SERDES_REF>;
+
+		assigned-clocks =
+			<&clks S32G274A_CLK_SERDES1_LANE0_TX>,
+			<&clks S32G274A_CLK_SERDES1_LANE0_CDR>,
+			<&clks S32G274A_CLK_SERDES1_LANE1_TX>,
+			<&clks S32G274A_CLK_SERDES1_LANE1_CDR>;
+		assigned-clock-parents =
+			<&serdes1_lane0_ext_tx 0>,
+			<&serdes1_lane0_ext_cdr 0>,
+			<&serdes1_lane1_ext_tx 0>,
+			<&serdes1_lane1_ext_cdr 0>;
+
+		status = "okay";
+	};
+
+	pcie1: pcie@44100000 {
+		compatible = "fsl,s32gen1-pcie";
+		reg = <0x00 0x44100000 0x0 0x80000   /* dbi registers */
+		       0x48 0x00000000 0x0 0x20000>; /* configuration space */
+		reg-names = "dbi", "config";
+		#address-cells = <3>;
+		#size-cells = <2>;
+		device_type = "pci";
+		serdes-handle = <&serdes1>;
+		device_id = <1>;
+		num-lanes = <1>; /* supports max 1 pcie lane */
+		link-speed = <3>; /* supports Gen3 speed */
+		bus-range = <0x0 0xff>;
+		ranges =
+			/* downstream I/O */
+			<0x81000000 0x0 0x00000000 0x48 0x00020000
+			0x0 0x00010000
+			/* non-prefetchable memory */
+			0x82000000 0x0 0x40000000 0x48 0x40000000
+			0x0 0x40000000>;
+		status = "disabled";
+	};
+
+	pfe_mac0_ext_rx: pfe_mac0_ext_rx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <312500000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac0_ext_tx: pfe_mac0_ext_tx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <300000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac0_ext_ref: pfe_mac0_ext_ref@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <50000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac1_ext_rx: pfe_mac1_ext_rx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <300000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac1_ext_tx: pfe_mac1_ext_tx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <300000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac1_ext_ref: pfe_mac1_ext_ref@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <50000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac2_ext_rx: pfe_mac2_ext_rx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <300000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac2_ext_tx: pfe_mac2_ext_tx@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <300000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe_mac2_ext_ref: pfe_mac2_ext_ref@0 {
+		compatible = "fixed-clock";
+		clock-frequency = <50000000>;
+		#clock-cells = <1>;
+	};
+
+	pfe: ethernet@46080000 {
+		compatible = "fsl,s32g274a-pfe";
+		reg = <0x0 0x46000000 0x0 0x1000000>;
+		clocks = <&clks S32G274A_SCMI_CLK_PFE_PE>,
+			/* PFE0 */
+			<&clks S32G274A_SCMI_CLK_PFE0_RX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE0_TX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE0_RX_RGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE0_TX_RGMII>,
+			/* PFE1 */
+			<&clks S32G274A_SCMI_CLK_PFE1_RX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE1_TX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE1_RX_RGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE1_TX_RGMII>,
+			/* PFE2 */
+			<&clks S32G274A_SCMI_CLK_PFE2_RX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE2_TX_SGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE2_RX_RGMII>,
+			<&clks S32G274A_SCMI_CLK_PFE2_TX_RGMII>;
+		clock-names = "pe",
+			"mac0_rx_sgmii", "mac0_tx_sgmii",
+			"mac0_rx_rgmii", "mac0_tx_rgmii",
+			"mac1_rx_sgmii", "mac1_tx_sgmii",
+			"mac1_rx_rgmii", "mac1_tx_rgmii",
+			"mac2_rx_sgmii", "mac2_tx_sgmii",
+			"mac2_rx_rgmii", "mac2_tx_rgmii";
+		pinctrl-0 = <&pinctrl0_pfe0 &pinctrl0_pfe0_mdio &pinctrl1_pfe0
+			&pinctrl1_pfe0_mdio>;
+		pinctrl-1 = <&pinctrl0_pfe0_mdio &pinctrl1_pfe0_mdio>;
+		pinctrl-2 = <&pinctrl0_pfe1 &pinctrl0_pfe1_mdio &pinctrl1_pfe1
+			&pinctrl1_pfe1_mdio>;
+		pinctrl-3 = <&pinctrl0_pfe1_mdio &pinctrl1_pfe1_mdio>;
+		pinctrl-4 = <&pinctrl0_pfe2 &pinctrl0_pfe2_mdio &pinctrl1_pfe2
+			&pinctrl1_pfe2_mdio>;
+		pinctrl-5 = <&pinctrl0_pfe2_mdio &pinctrl1_pfe2_mdio>;
+		pinctrl-names = "pfe0_rgmii", "pfe0_sgmii",
+			"pfe1_rgmii", "pfe1_sgmii",
+			"pfe2_rgmii", "pfe2_sgmii";
+		status = "disabled";
+	};
+
+	siul2_0@4009C000 {
+		compatible = "simple-mfd";
+		status = "okay";
+		reg = <0x0 0x4009C000 0x0 0x2000>;
+
+		pinctrl0: siul2-pinctrl0 {
+			compatible = "fsl,s32-gen1-siul2-pinctrl";
+			#pinctrl-cells = <2>;
+			/* MSCR range */
+			pins = <&pinctrl0 0 101>,
+			/* IMCR range */
+			<&pinctrl0 512 595>;
+			status = "okay";
+		};
+
+		gpio0: siul2-gpio0 {
+			compatible = "fsl,s32-gen1-siul2-gpio";
+			#gpio-cells = <2>;
+			gpio-controller;
+			gpio-ranges = <&pinctrl0 0 0 102>;
+			status = "okay";
+		};
+	};
+
+	siul2_1@44010000 {
+		compatible = "simple-mfd";
+		status = "okay";
+		reg = <0x0 0x44010000 0x0 0x2000>;
+
+		pinctrl1: siul2-pinctrl1 {
+			compatible = "fsl,s32-gen1-siul2-pinctrl";
+			#pinctrl-cells = <2>;
+			/* MSCR range */
+			pins = <&pinctrl1 112 190>,
+			/* IMCR range */
+			<&pinctrl1 631 1023>;
+			status = "okay";
+		};
+
+		gpio1: siul2-gpio1 {
+			compatible = "fsl,s32-gen1-siul2-gpio";
+			#gpio-cells = <2>;
+			gpio-controller;
+			gpio-ranges = <&pinctrl1 0 112 11>,
+				<&pinctrl1 11 144 47>;
+			status = "okay";
+		};
+	};
+};
+
+&clks {
+	clocks = <&clks S32GEN1_SCMI_CLK_FTM0_SYS>,
+		<&clks S32GEN1_SCMI_CLK_FTM1_SYS>,
+		<&clks S32GEN1_SCMI_CLK_FTM0_EXT>,
+		<&clks S32GEN1_SCMI_CLK_FTM1_EXT>,
+		<&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
+		<&clks S32GEN1_SCMI_CLK_SPI_REG>,
+		<&clks S32GEN1_SCMI_CLK_QSPI_FLASH1X>;
+
+	mc_cgm2: mc_cgm2@44018000 {
+		compatible = "fsl,s32gen1-mc_cgm2";
+		reg = <0x0 0x44018000 0x0 0x3000>;
+
+		assigned-clocks =
+			<&clks S32G274A_CLK_PFE_MAC0_EXT_REF>,
+			<&clks S32G274A_CLK_PFE_MAC1_EXT_REF>,
+			<&clks S32G274A_CLK_PFE_MAC2_EXT_REF>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX0>,
+			/* PFE MAC0 */
+			<&clks S32G274A_CLK_MC_CGM2_MUX7>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX4>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX1>,
+			/* PFE MAC1 */
+			<&clks S32G274A_CLK_MC_CGM2_MUX8>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX5>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX2>,
+			/* PFE MAC2 */
+			<&clks S32G274A_CLK_MC_CGM2_MUX9>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX6>,
+			<&clks S32G274A_CLK_MC_CGM2_MUX3>,
+
+			<&clks S32G274A_CLK_PFE_PE>,
+			<&clks S32G274A_CLK_PFE_MAC0_REF_DIV>,
+			<&clks S32G274A_CLK_PFE_MAC0_RX>,
+			<&clks S32G274A_CLK_PFE_MAC0_TX_DIV>,
+			<&clks S32G274A_CLK_PFE_MAC1_REF_DIV>,
+			<&clks S32G274A_CLK_PFE_MAC1_RX>,
+			<&clks S32G274A_CLK_PFE_MAC1_TX>,
+			<&clks S32G274A_CLK_PFE_MAC2_REF_DIV>,
+			<&clks S32G274A_CLK_PFE_MAC2_RX>,
+			<&clks S32G274A_CLK_PFE_MAC2_TX>;
+		assigned-clock-parents =
+			<&pfe_mac0_ext_ref 0>,
+			<&pfe_mac1_ext_ref 0>,
+			<&pfe_mac2_ext_ref 0>,
+			<&clks S32G274A_CLK_ACCEL_PLL_PHI1>,
+			/* PFE MAC0 */
+			<&clks S32G274A_CLK_PFE_MAC0_EXT_REF>,
+			<&clks S32G274A_CLK_SERDES1_LANE0_CDR>,
+			<&clks S32G274A_CLK_SERDES1_LANE0_TX>,
+			/* PFE MAC1 */
+			<&clks S32G274A_CLK_PFE_MAC1_EXT_REF>,
+			<&clks S32G274A_CLK_SERDES1_LANE1_CDR>,
+			<&clks S32G274A_CLK_SERDES1_LANE1_TX>,
+			/* PFE MAC2 */
+			<&clks S32G274A_CLK_PFE_MAC2_EXT_REF>,
+			<&clks S32G274A_CLK_SERDES0_LANE1_CDR>,
+			<&clks S32G274A_CLK_SERDES0_LANE1_TX>;
+		assigned-clock-rates =
+			<0>, <0>, <0>, <0>, <0>, <0>, <0>,
+			<0>, <0>, <0>, <0>, <0>, <0>,
+			<600000000>,
+			<50000000>,
+			<125000000>,
+			<125000000>,
+			<50000000>,
+			<125000000>,
+			<125000000>,
+			<50000000>,
+			<125000000>,
+			<125000000>;
+
+	};
+};
+
+&accelpll {
+	assigned-clocks =
+		<&clks S32GEN1_CLK_ACCEL_PLL_MUX>,
+		<&clks S32GEN1_CLK_ACCEL_PLL_VCO>,
+		<&clks S32G274A_CLK_ACCEL_PLL_PHI0>,
+		<&clks S32G274A_CLK_ACCEL_PLL_PHI1>;
+	assigned-clock-parents =
+		<&clks S32GEN1_CLK_FXOSC>;
+	assigned-clock-rates =
+		<0>,
+		<1800000000>,
+		<600000000>,
+		<600000000>;
+};
+
+&gmac0 {
+	clocks = <&clks S32GEN1_SCMI_CLK_GMAC0_RX_SGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_SGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_TS_SGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_RGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_RGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_TS_RGMII>,
+		 <&clks S32GEN1_SCMI_CLK_GMAC0_AXI>;
+	clock-names = "rx_sgmii", "tx_sgmii", "ts_sgmii",
+		      "rx_rgmii", "tx_rgmii", "ts_rgmii",
+		      "axi";
+	pinctrl-0 = <&pinctrl0_gmac0 &pinctrl0_gmac0_mdio>;
+	pinctrl-1 = <&pinctrl0_gmac0_mdio>;
+	pinctrl-names = "gmac_rgmii", "gmac_sgmii";
+};
+
+&qspi {
+	status = "okay";
+
+	mx25uw51245g@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "jedec,spi-nor";
+		spi-max-frequency = <200000000>;
+		spi-tx-bus-width = <8>;
+		spi-rx-bus-width = <8>;
+		reg = <0>;
+	};
+};
+
+&usdhc0 {
+	status = "okay";
+};
+
+&pcie0 {
+	status = "okay";
+
+	link-speed = <3>; /* Gen3 */
+};
+
+&pcie1 {
+	status = "okay";
+
+	link-speed = <2>; /* Gen2 */
+};
+
+&serdes0 {
+	assigned-clocks =
+		<&clks S32GEN1_CLK_SERDES0_LANE0_TX>,
+		<&clks S32GEN1_CLK_SERDES0_LANE0_CDR>,
+		<&clks S32G274A_CLK_SERDES0_LANE1_TX>,
+		<&clks S32G274A_CLK_SERDES0_LANE1_CDR>;
+
+	assigned-clock-parents =
+		<&serdes0_lane0_ext_tx 0>,
+		<&serdes0_lane0_ext_cdr 0>,
+		<&serdes0_lane1_ext_tx 0>,
+		<&serdes0_lane1_ext_cdr 0>;
+
+	status = "okay";
+};
+
+&pinctrl0 {
+	board_generic_pinctrl0 {
+		pinctrl0_gmac0_mdio: pinctrl0_gmac0_mdio {
+			fsl,pins = <PD12_MSCR_S32G2XX PD12_GMAC0_MDC_CFG
+				    PD13_MSCR_S32G2XX PD13_GMAC0_MDIO_CFG
+				    GMAC0_MDIO_IMCR PD13_GMAC0_MDIO_IN
+				    >;
+		};
+
+		pinctrl0_gmac0: pinctrl0_gmac0 {
+			fsl,pins = <PE02_MSCR_S32G2XX PE02_GMAC0_TX_CLK_CFG
+				    PE03_MSCR_S32G2XX PE03_GMAC0_TX_EN_CFG
+				    PE04_MSCR_S32G2XX PE04_GMAC0_TX_D0_CFG
+				    PE05_MSCR_S32G2XX PE05_GMAC0_TX_D1_CFG
+				    PE06_MSCR_S32G2XX PE06_GMAC0_TX_D2_CFG
+				    PE07_MSCR_S32G2XX PE07_GMAC0_TX_D3_CFG
+				    PE08_MSCR_S32G2XX PE08_GMAC0_RX_CLK_CFG
+				    PE09_MSCR_S32G2XX PE09_GMAC0_RX_DV_CFG
+				    PE10_MSCR_S32G2XX PE10_GMAC0_RX_D0_CFG
+				    PE11_MSCR_S32G2XX PE11_GMAC0_RX_D1_CFG
+				    PE12_MSCR_S32G2XX PE12_GMAC0_RX_D2_CFG
+				    PE13_MSCR_S32G2XX PE13_GMAC0_RX_D3_CFG
+				    GMAC0_TX_CLK_IMCR PE02_GMAC0_TX_CLK_IN
+				    GMAC0_RX_CLK_IMCR PE08_GMAC0_RX_CLK_IN
+				    GMAC0_RX_DV_IMCR PE09_GMAC0_RX_DV_IN
+				    GMAC0_RX_D0_IMCR PE10_GMAC0_RX_D0_IN
+				    GMAC0_RX_D1_IMCR PE11_GMAC0_RX_D1_IN
+				    GMAC0_RX_D2_IMCR PE12_GMAC0_RX_D2_IN
+				    GMAC0_RX_D3_IMCR PE13_GMAC0_RX_D3_IN
+				    >;
+		};
+
+		pinctrl0_pfe0_mdio: pinctrl0_pfe0_mdio {
+			fsl,pins = <PE15_MSCR_S32G2XX PE15_PFE0_MDIO_CFG
+				    PF02_MSCR_S32G2XX PF02_PFE0_MDC_CFG
+				    >;
+		};
+
+		pinctrl0_pfe0: pinctrl0_pfe0 {
+			fsl,pins = <PE14_MSCR_S32G2XX PE14_PFE0_TX_EN_CFG>;
+		};
+
+		pinctrl0_pfe1_mdio: pinctrl0_pfe1_mdio {
+			fsl,pins = <PD12_MSCR_S32G2XX PD12_PFE1_MDC_CFG
+				    PD13_MSCR_S32G2XX PD13_PFE1_MDIO_CFG
+				    >;
+		};
+
+		pinctrl0_pfe1: pinctrl0_pfe1 {
+			fsl,pins = <PE02_MSCR_S32G2XX PE02_PFE1_TX_CLK_CFG
+				    PE03_MSCR_S32G2XX PE03_PFE1_TX_EN_CFG
+				    PE04_MSCR_S32G2XX PE04_PFE1_TX_D0_CFG
+				    PE05_MSCR_S32G2XX PE05_PFE1_TX_D1_CFG
+				    PE06_MSCR_S32G2XX PE06_PFE1_TX_D2_CFG
+				    PE07_MSCR_S32G2XX PE07_PFE1_TX_D3_CFG
+				    PE08_MSCR_S32G2XX PE08_PFE1_RX_CLK_CFG
+				    PE09_MSCR_S32G2XX PE09_PFE1_RX_DV_CFG
+				    PE10_MSCR_S32G2XX PE10_PFE1_RX_D0_CFG
+				    PE11_MSCR_S32G2XX PE11_PFE1_RX_D1_CFG
+				    PE12_MSCR_S32G2XX PE12_PFE1_RX_D2_CFG
+				    PE13_MSCR_S32G2XX PE13_PFE1_RX_D3_CFG
+				    >;
+		};
+
+		pinctrl0_pfe2_mdio: pinctrl0_pfe2_mdio {
+			fsl,pins = <PE15_MSCR_S32G2XX PE15_PFE2_MDIO_CFG
+				    PF02_MSCR_S32G2XX PF02_PFE2_MDC_CFG
+				    >;
+		};
+
+		pinctrl0_pfe2: pinctrl0_pfe2 {
+			fsl,pins = <PE14_MSCR_S32G2XX PE14_PFE2_TX_EN_CFG>;
+		};
+	};
+};
+
+&pinctrl1 {
+	board_generic_pinctrl1 {
+		pinctrl1_pfe0_mdio: pinctrl1_pfe0_mdio {
+			fsl,pins = <PFE0_MDIO_IMCR PE15_PFE0_MDIO_IN>;
+		};
+
+		pinctrl1_pfe0: pinctrl1_pfe0 {
+			fsl,pins = <PH01_MSCR_S32G2XX PH01_PFE0_TX_D1_CFG
+				    PH02_MSCR_S32G2XX PH02_PFE0_TX_D2_CFG
+				    PH03_MSCR_S32G2XX PH03_PFE0_TX_D3_CFG
+				    PH04_MSCR_S32G2XX PH04_PFE0_RX_CLK_CFG
+				    PH05_MSCR_S32G2XX PH05_PFE0_RX_DV_CFG
+				    PH06_MSCR_S32G2XX PH06_PFE0_RX_D0_CFG
+				    PH07_MSCR_S32G2XX PH07_PFE0_RX_D1_CFG
+				    PH08_MSCR_S32G2XX PH08_PFE0_RX_D2_CFG
+				    PH09_MSCR_S32G2XX PH09_PFE0_RX_D3_CFG
+				    PH10_MSCR_S32G2XX PH10_PFE0_TX_CLK_CFG
+				    PJ00_MSCR_S32G2XX PJ00_PFE0_TX_D0_CFG
+				    PFE0_RX_CLK_IMCR PH04_PFE0_RX_CLK_IN
+				    PFE0_RX_DV_IMCR PH05_PFE0_RX_DV_IN
+				    PFE0_RX_D0_IMCR PH06_PFE0_RX_D0_IN
+				    PFE0_RX_D1_IMCR PH07_PFE0_RX_D1_IN
+				    PFE0_RX_D2_IMCR PH08_PFE0_RX_D2_IN
+				    PFE0_RX_D3_IMCR PH09_PFE0_RX_D3_IN
+				    >;
+		};
+
+		pinctrl1_pfe1_mdio: pinctrl1_pfe1_mdio {
+			fsl,pins = <PFE1_MDIO_IMCR PD13_PFE1_MDIO_IN>;
+		};
+
+		pinctrl1_pfe1: pinctrl1_pfe1 {
+			fsl,pins = <PFE1_RX_CLK_IMCR PE08_PFE1_RX_CLK_IN
+				    PFE1_RX_DV_IMCR PE09_PFE1_RX_DV_IN
+				    PFE1_RX_D0_IMCR PE10_PFE1_RX_D0_IN
+				    PFE1_RX_D1_IMCR PE11_PFE1_RX_D1_IN
+				    PFE1_RX_D2_IMCR PE12_PFE1_RX_D2_IN
+				    PFE1_RX_D3_IMCR PE13_PFE1_RX_D3_IN
+				    >;
+		};
+
+		pinctrl1_pfe2_mdio: pinctrl1_pfe2_mdio {
+			fsl,pins = <PFE2_MDIO_IMCR PE15_PFE2_MDIO_IN
+				    >;
+		};
+
+		pinctrl1_pfe2: pinctrl1_pfe2 {
+			fsl,pins = <PH01_MSCR_S32G2XX PH01_PFE2_TX_D1_CFG
+				    PH02_MSCR_S32G2XX PH02_PFE2_TX_D2_CFG
+				    PH03_MSCR_S32G2XX PH03_PFE2_TX_D3_CFG
+				    PH04_MSCR_S32G2XX PH04_PFE2_RX_CLK_CFG
+				    PH05_MSCR_S32G2XX PH05_PFE2_RX_DV_CFG
+				    PH06_MSCR_S32G2XX PH06_PFE2_RX_D0_CFG
+				    PH07_MSCR_S32G2XX PH07_PFE2_RX_D1_CFG
+				    PH08_MSCR_S32G2XX PH08_PFE2_RX_D2_CFG
+				    PH09_MSCR_S32G2XX PH09_PFE2_RX_D3_CFG
+				    PH10_MSCR_S32G2XX PH10_PFE2_TX_CLK_CFG
+				    PJ00_MSCR_S32G2XX PJ00_PFE2_TX_D0_CFG
+				    PFE2_RX_CLK_IMCR PH04_PFE2_RX_CLK_IN
+				    PFE2_RX_DV_IMCR PH05_PFE2_RX_DV_IN
+				    PFE2_RX_D0_IMCR PH06_PFE2_RX_D0_IN
+				    PFE2_RX_D1_IMCR PH07_PFE2_RX_D1_IN
+				    PFE2_RX_D2_IMCR PH08_PFE2_RX_D2_IN
+				    PFE2_RX_D3_IMCR PH09_PFE2_RX_D3_IN
+				    >;
+		};
+	};
+};
diff --git a/arch/arm/dts/fsl-s32g274a.dtsi b/arch/arm/dts/fsl-s32g274a.dtsi
index 9aa8a28c51..074f0c4eda 100644
--- a/arch/arm/dts/fsl-s32g274a.dtsi
+++ b/arch/arm/dts/fsl-s32g274a.dtsi
@@ -1,528 +1,17 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Copyright 2017-2021 NXP
+ * Copyright 2021 NXP
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  */
-#include <dt-bindings/clock/s32g274a-clock.h>
-#include <dt-bindings/clock/s32g274a-scmi-clock.h>
-#include <dt-bindings/pinctrl/s32g274a-pinctrl.h>
 
 /dts-v1/;
-#include "fsl-s32-gen1.dtsi"
+#include "fsl-s32g.dtsi"
 / {
 	model = "NXP S32G2XX";
 	compatible = "fsl,s32g274-simu", "fsl,s32g274", "fsl,s32gen1",
 				 "arm,vexpress,v2p-aarch64", "arm,vexpress";
-
-	aliases {
-		pcie1 = &pcie1;
-	};
-
-	signature {
-		key-boot_key {
-			required = "conf";
-			algo = "sha1,rsa2048";
-			key-name-hint = "boot_key";
-		};
-	};
-
-	serdes1: serdes@44180000 {
-		compatible = "fsl,s32gen1-serdes";
-		reg = <0x00 0x44100000 0x0 0x80000   /* dbi registers */
-		       0x00 0x44180000 0x0 0x04000>; /* serdes registers */
-		reg-names = "dbi", "ss";
-		#address-cells = <3>;
-		#size-cells = <2>;
-		device_type = "pci-generic";
-		device_id = <1>;
-		num-lanes = <2>; /* supports max 2 lanes */
-		clocks = <&clks S32GEN1_SCMI_CLK_SERDES_REF>;
-
-		assigned-clocks =
-			<&clks S32G274A_CLK_SERDES1_LANE0_TX>,
-			<&clks S32G274A_CLK_SERDES1_LANE0_CDR>,
-			<&clks S32G274A_CLK_SERDES1_LANE1_TX>,
-			<&clks S32G274A_CLK_SERDES1_LANE1_CDR>;
-		assigned-clock-parents =
-			<&serdes1_lane0_ext_tx 0>,
-			<&serdes1_lane0_ext_cdr 0>,
-			<&serdes1_lane1_ext_tx 0>,
-			<&serdes1_lane1_ext_cdr 0>;
-
-		status = "okay";
-	};
-
-	pcie1: pcie@44100000 {
-		compatible = "fsl,s32gen1-pcie";
-		reg =
-			<0x00 0x44100000 0x0 0x80000   /* dbi registers */
-			/* configuration space, 4KB each for cfg0 and cfg1
-			 * at the end of the outbound memory map
-			 */
-			0x4f 0xffffe000 0x0 0x00002000>;
-		reg-names = "dbi", "config";
-		#address-cells = <3>;
-		#size-cells = <2>;
-		device_type = "pci";
-		serdes-handle = <&serdes1>;
-		device_id = <1>;
-		num-lanes = <1>; /* supports max 1 pcie lane */
-		link-speed = <3>; /* supports Gen3 speed */
-		bus-range = <0x0 0xff>;
-		ranges =
-			/* downstream I/O, 64KB and aligned naturally just before
-			 * the config space to minimize fragmentation
-			 */
-			<0x81000000 0x0 0x00000000 0x4f 0xfffe0000 0x0 0x00010000
-			/* non-prefetchable memory, with best case size
-			 * and alignment
-			 */
-			 0x82000000 0x0 0x00000000 0x48 0x00000000 0x7 0xfffe0000>;
-		status = "disabled";
-	};
-
-	pfe_mac0_ext_rx: pfe_mac0_ext_rx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <312500000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac0_ext_tx: pfe_mac0_ext_tx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <300000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac0_ext_ref: pfe_mac0_ext_ref@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <50000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac1_ext_rx: pfe_mac1_ext_rx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <300000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac1_ext_tx: pfe_mac1_ext_tx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <300000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac1_ext_ref: pfe_mac1_ext_ref@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <50000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac2_ext_rx: pfe_mac2_ext_rx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <300000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac2_ext_tx: pfe_mac2_ext_tx@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <300000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe_mac2_ext_ref: pfe_mac2_ext_ref@0 {
-		compatible = "fixed-clock";
-		clock-frequency = <50000000>;
-		#clock-cells = <1>;
-	};
-
-	pfe: ethernet@46080000 {
-		compatible = "fsl,s32g274a-pfe";
-		reg = <0x0 0x46000000 0x0 0x1000000>;
-		clocks = <&clks S32G274A_SCMI_CLK_PFE_PE>,
-			/* PFE0 */
-			<&clks S32G274A_SCMI_CLK_PFE0_RX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE0_TX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE0_RX_RGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE0_TX_RGMII>,
-			/* PFE1 */
-			<&clks S32G274A_SCMI_CLK_PFE1_RX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE1_TX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE1_RX_RGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE1_TX_RGMII>,
-			/* PFE2 */
-			<&clks S32G274A_SCMI_CLK_PFE2_RX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE2_TX_SGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE2_RX_RGMII>,
-			<&clks S32G274A_SCMI_CLK_PFE2_TX_RGMII>;
-		clock-names = "pe",
-			"mac0_rx_sgmii", "mac0_tx_sgmii",
-			"mac0_rx_rgmii", "mac0_tx_rgmii",
-			"mac1_rx_sgmii", "mac1_tx_sgmii",
-			"mac1_rx_rgmii", "mac1_tx_rgmii",
-			"mac2_rx_sgmii", "mac2_tx_sgmii",
-			"mac2_rx_rgmii", "mac2_tx_rgmii";
-		pinctrl-0 = <&pinctrl0_pfe0 &pinctrl0_pfe0_mdio &pinctrl1_pfe0
-			&pinctrl1_pfe0_mdio>;
-		pinctrl-1 = <&pinctrl0_pfe0_mdio &pinctrl1_pfe0_mdio>;
-		pinctrl-2 = <&pinctrl0_pfe1 &pinctrl0_pfe1_mdio &pinctrl1_pfe1
-			&pinctrl1_pfe1_mdio>;
-		pinctrl-3 = <&pinctrl0_pfe1_mdio &pinctrl1_pfe1_mdio>;
-		pinctrl-4 = <&pinctrl0_pfe2 &pinctrl0_pfe2_mdio &pinctrl1_pfe2
-			&pinctrl1_pfe2_mdio>;
-		pinctrl-5 = <&pinctrl0_pfe2_mdio &pinctrl1_pfe2_mdio>;
-		pinctrl-names = "pfe0_rgmii", "pfe0_sgmii",
-			"pfe1_rgmii", "pfe1_sgmii",
-			"pfe2_rgmii", "pfe2_sgmii";
-		status = "disabled";
-	};
-
-	siul2_0@4009C000 {
-		compatible = "simple-mfd";
-		status = "okay";
-		reg = <0x0 0x4009C000 0x0 0x2000>;
-
-		pinctrl0: siul2-pinctrl0 {
-			compatible = "fsl,s32-gen1-siul2-pinctrl";
-			#pinctrl-cells = <2>;
-			/* MSCR range */
-			pins = <&pinctrl0 0 101>,
-			/* IMCR range */
-			<&pinctrl0 512 595>;
-			status = "okay";
-		};
-
-		gpio0: siul2-gpio0 {
-			compatible = "fsl,s32-gen1-siul2-gpio";
-			#gpio-cells = <2>;
-			gpio-controller;
-			gpio-ranges = <&pinctrl0 0 0 102>;
-			status = "okay";
-		};
-	};
-
-	siul2_1@44010000 {
-		compatible = "simple-mfd";
-		status = "okay";
-		reg = <0x0 0x44010000 0x0 0x2000>;
-
-		pinctrl1: siul2-pinctrl1 {
-			compatible = "fsl,s32-gen1-siul2-pinctrl";
-			#pinctrl-cells = <2>;
-			/* MSCR range */
-			pins = <&pinctrl1 112 190>,
-			/* IMCR range */
-			<&pinctrl1 631 1023>;
-			status = "okay";
-		};
-
-		gpio1: siul2-gpio1 {
-			compatible = "fsl,s32-gen1-siul2-gpio";
-			#gpio-cells = <2>;
-			gpio-controller;
-			gpio-ranges = <&pinctrl1 0 112 11>,
-				<&pinctrl1 11 144 47>;
-			status = "okay";
-		};
-	};
-};
-
-&clks {
-	clocks = <&clks S32GEN1_SCMI_CLK_FTM0_SYS>,
-		<&clks S32GEN1_SCMI_CLK_FTM1_SYS>,
-		<&clks S32GEN1_SCMI_CLK_FTM0_EXT>,
-		<&clks S32GEN1_SCMI_CLK_FTM1_EXT>,
-		<&clks S32GEN1_SCMI_CLK_FLEXCAN_CAN>,
-		<&clks S32GEN1_SCMI_CLK_SPI_REG>,
-		<&clks S32GEN1_SCMI_CLK_QSPI_FLASH1X>;
-
-	mc_cgm2: mc_cgm2@44018000 {
-		compatible = "fsl,s32gen1-mc_cgm2";
-		reg = <0x0 0x44018000 0x0 0x3000>;
-
-		assigned-clocks =
-			<&clks S32G274A_CLK_PFE_MAC0_EXT_REF>,
-			<&clks S32G274A_CLK_PFE_MAC1_EXT_REF>,
-			<&clks S32G274A_CLK_PFE_MAC2_EXT_REF>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX0>,
-			/* PFE MAC0 */
-			<&clks S32G274A_CLK_MC_CGM2_MUX7>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX4>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX1>,
-			/* PFE MAC1 */
-			<&clks S32G274A_CLK_MC_CGM2_MUX8>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX5>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX2>,
-			/* PFE MAC2 */
-			<&clks S32G274A_CLK_MC_CGM2_MUX9>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX6>,
-			<&clks S32G274A_CLK_MC_CGM2_MUX3>,
-
-			<&clks S32G274A_CLK_PFE_PE>,
-			<&clks S32G274A_CLK_PFE_MAC0_REF_DIV>,
-			<&clks S32G274A_CLK_PFE_MAC0_RX>,
-			<&clks S32G274A_CLK_PFE_MAC0_TX_DIV>,
-			<&clks S32G274A_CLK_PFE_MAC1_REF_DIV>,
-			<&clks S32G274A_CLK_PFE_MAC1_RX>,
-			<&clks S32G274A_CLK_PFE_MAC1_TX>,
-			<&clks S32G274A_CLK_PFE_MAC2_REF_DIV>,
-			<&clks S32G274A_CLK_PFE_MAC2_RX>,
-			<&clks S32G274A_CLK_PFE_MAC2_TX>;
-		assigned-clock-parents =
-			<&pfe_mac0_ext_ref 0>,
-			<&pfe_mac1_ext_ref 0>,
-			<&pfe_mac2_ext_ref 0>,
-			<&clks S32G274A_CLK_ACCEL_PLL_PHI1>,
-			/* PFE MAC0 */
-			<&clks S32G274A_CLK_PFE_MAC0_EXT_REF>,
-			<&clks S32G274A_CLK_SERDES1_LANE0_CDR>,
-			<&clks S32G274A_CLK_SERDES1_LANE0_TX>,
-			/* PFE MAC1 */
-			<&clks S32G274A_CLK_PFE_MAC1_EXT_REF>,
-			<&clks S32G274A_CLK_SERDES1_LANE1_CDR>,
-			<&clks S32G274A_CLK_SERDES1_LANE1_TX>,
-			/* PFE MAC2 */
-			<&clks S32G274A_CLK_PFE_MAC2_EXT_REF>,
-			<&clks S32G274A_CLK_SERDES0_LANE1_CDR>,
-			<&clks S32G274A_CLK_SERDES0_LANE1_TX>;
-		assigned-clock-rates =
-			<0>, <0>, <0>, <0>, <0>, <0>, <0>,
-			<0>, <0>, <0>, <0>, <0>, <0>,
-			<600000000>,
-			<50000000>,
-			<125000000>,
-			<125000000>,
-			<50000000>,
-			<125000000>,
-			<125000000>,
-			<50000000>,
-			<125000000>,
-			<125000000>;
-
-	};
-};
-
-&accelpll {
-	assigned-clocks =
-		<&clks S32GEN1_CLK_ACCEL_PLL_MUX>,
-		<&clks S32GEN1_CLK_ACCEL_PLL_VCO>,
-		<&clks S32G274A_CLK_ACCEL_PLL_PHI0>,
-		<&clks S32G274A_CLK_ACCEL_PLL_PHI1>;
-	assigned-clock-parents =
-		<&clks S32GEN1_CLK_FXOSC>;
-	assigned-clock-rates =
-		<0>,
-		<1800000000>,
-		<600000000>,
-		<600000000>;
-};
-
-&gmac0 {
-	clocks = <&clks S32GEN1_SCMI_CLK_GMAC0_RX_SGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_SGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_TS_SGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_RGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_RGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_TS_RGMII>,
-		 <&clks S32GEN1_SCMI_CLK_GMAC0_AXI>;
-	clock-names = "rx_sgmii", "tx_sgmii", "ts_sgmii",
-		      "rx_rgmii", "tx_rgmii", "ts_rgmii",
-		      "axi";
-	pinctrl-0 = <&pinctrl0_gmac0 &pinctrl0_gmac0_mdio>;
-	pinctrl-1 = <&pinctrl0_gmac0_mdio>;
-	pinctrl-names = "gmac_rgmii", "gmac_sgmii";
-};
-
-&qspi {
-	status = "okay";
-
-	mx25uw51245g@0 {
-		#address-cells = <1>;
-		#size-cells = <1>;
-		compatible = "jedec,spi-nor";
-		spi-max-frequency = <200000000>;
-		spi-tx-bus-width = <8>;
-		spi-rx-bus-width = <8>;
-		reg = <0>;
-	};
-};
-
-&usdhc0 {
-	status = "okay";
-};
-
-&pcie0 {
-	status = "okay";
-
-	link-speed = <3>; /* Gen3 */
-};
-
-&pcie1 {
-	status = "okay";
-
-	link-speed = <2>; /* Gen2 */
-};
-
-&serdes0 {
-	assigned-clocks =
-		<&clks S32GEN1_CLK_SERDES0_LANE0_TX>,
-		<&clks S32GEN1_CLK_SERDES0_LANE0_CDR>,
-		<&clks S32G274A_CLK_SERDES0_LANE1_TX>,
-		<&clks S32G274A_CLK_SERDES0_LANE1_CDR>;
-
-	assigned-clock-parents =
-		<&serdes0_lane0_ext_tx 0>,
-		<&serdes0_lane0_ext_cdr 0>,
-		<&serdes0_lane1_ext_tx 0>,
-		<&serdes0_lane1_ext_cdr 0>;
-
-	status = "okay";
-};
-
-&pinctrl0 {
-	board_generic_pinctrl0 {
-		pinctrl0_gmac0_mdio: pinctrl0_gmac0_mdio {
-			fsl,pins = <PD12_MSCR_S32G2XX PD12_GMAC0_MDC_CFG
-				    PD13_MSCR_S32G2XX PD13_GMAC0_MDIO_CFG
-				    GMAC0_MDIO_IMCR PD13_GMAC0_MDIO_IN
-				    >;
-		};
-
-		pinctrl0_gmac0: pinctrl0_gmac0 {
-			fsl,pins = <PE02_MSCR_S32G2XX PE02_GMAC0_TX_CLK_CFG
-				    PE03_MSCR_S32G2XX PE03_GMAC0_TX_EN_CFG
-				    PE04_MSCR_S32G2XX PE04_GMAC0_TX_D0_CFG
-				    PE05_MSCR_S32G2XX PE05_GMAC0_TX_D1_CFG
-				    PE06_MSCR_S32G2XX PE06_GMAC0_TX_D2_CFG
-				    PE07_MSCR_S32G2XX PE07_GMAC0_TX_D3_CFG
-				    PE08_MSCR_S32G2XX PE08_GMAC0_RX_CLK_CFG
-				    PE09_MSCR_S32G2XX PE09_GMAC0_RX_DV_CFG
-				    PE10_MSCR_S32G2XX PE10_GMAC0_RX_D0_CFG
-				    PE11_MSCR_S32G2XX PE11_GMAC0_RX_D1_CFG
-				    PE12_MSCR_S32G2XX PE12_GMAC0_RX_D2_CFG
-				    PE13_MSCR_S32G2XX PE13_GMAC0_RX_D3_CFG
-				    GMAC0_TX_CLK_IMCR PE02_GMAC0_TX_CLK_IN
-				    GMAC0_RX_CLK_IMCR PE08_GMAC0_RX_CLK_IN
-				    GMAC0_RX_DV_IMCR PE09_GMAC0_RX_DV_IN
-				    GMAC0_RX_D0_IMCR PE10_GMAC0_RX_D0_IN
-				    GMAC0_RX_D1_IMCR PE11_GMAC0_RX_D1_IN
-				    GMAC0_RX_D2_IMCR PE12_GMAC0_RX_D2_IN
-				    GMAC0_RX_D3_IMCR PE13_GMAC0_RX_D3_IN
-				    >;
-		};
-
-		pinctrl0_pfe0_mdio: pinctrl0_pfe0_mdio {
-			fsl,pins = <PE15_MSCR_S32G2XX PE15_PFE0_MDIO_CFG
-				    PF02_MSCR_S32G2XX PF02_PFE0_MDC_CFG
-				    >;
-		};
-
-		pinctrl0_pfe0: pinctrl0_pfe0 {
-			fsl,pins = <PE14_MSCR_S32G2XX PE14_PFE0_TX_EN_CFG>;
-		};
-
-		pinctrl0_pfe1_mdio: pinctrl0_pfe1_mdio {
-			fsl,pins = <PD12_MSCR_S32G2XX PD12_PFE1_MDC_CFG
-				    PD13_MSCR_S32G2XX PD13_PFE1_MDIO_CFG
-				    >;
-		};
-
-		pinctrl0_pfe1: pinctrl0_pfe1 {
-			fsl,pins = <PE02_MSCR_S32G2XX PE02_PFE1_TX_CLK_CFG
-				    PE03_MSCR_S32G2XX PE03_PFE1_TX_EN_CFG
-				    PE04_MSCR_S32G2XX PE04_PFE1_TX_D0_CFG
-				    PE05_MSCR_S32G2XX PE05_PFE1_TX_D1_CFG
-				    PE06_MSCR_S32G2XX PE06_PFE1_TX_D2_CFG
-				    PE07_MSCR_S32G2XX PE07_PFE1_TX_D3_CFG
-				    PE08_MSCR_S32G2XX PE08_PFE1_RX_CLK_CFG
-				    PE09_MSCR_S32G2XX PE09_PFE1_RX_DV_CFG
-				    PE10_MSCR_S32G2XX PE10_PFE1_RX_D0_CFG
-				    PE11_MSCR_S32G2XX PE11_PFE1_RX_D1_CFG
-				    PE12_MSCR_S32G2XX PE12_PFE1_RX_D2_CFG
-				    PE13_MSCR_S32G2XX PE13_PFE1_RX_D3_CFG
-				    >;
-		};
-
-		pinctrl0_pfe2_mdio: pinctrl0_pfe2_mdio {
-			fsl,pins = <PE15_MSCR_S32G2XX PE15_PFE2_MDIO_CFG
-				    PF02_MSCR_S32G2XX PF02_PFE2_MDC_CFG
-				    >;
-		};
-
-		pinctrl0_pfe2: pinctrl0_pfe2 {
-			fsl,pins = <PE14_MSCR_S32G2XX PE14_PFE2_TX_EN_CFG>;
-		};
-	};
-};
-
-&pinctrl1 {
-	board_generic_pinctrl1 {
-		pinctrl1_pfe0_mdio: pinctrl1_pfe0_mdio {
-			fsl,pins = <PFE0_MDIO_IMCR PE15_PFE0_MDIO_IN>;
-		};
-
-		pinctrl1_pfe0: pinctrl1_pfe0 {
-			fsl,pins = <PH01_MSCR_S32G2XX PH01_PFE0_TX_D1_CFG
-				    PH02_MSCR_S32G2XX PH02_PFE0_TX_D2_CFG
-				    PH03_MSCR_S32G2XX PH03_PFE0_TX_D3_CFG
-				    PH04_MSCR_S32G2XX PH04_PFE0_RX_CLK_CFG
-				    PH05_MSCR_S32G2XX PH05_PFE0_RX_DV_CFG
-				    PH06_MSCR_S32G2XX PH06_PFE0_RX_D0_CFG
-				    PH07_MSCR_S32G2XX PH07_PFE0_RX_D1_CFG
-				    PH08_MSCR_S32G2XX PH08_PFE0_RX_D2_CFG
-				    PH09_MSCR_S32G2XX PH09_PFE0_RX_D3_CFG
-				    PH10_MSCR_S32G2XX PH10_PFE0_TX_CLK_CFG
-				    PJ00_MSCR_S32G2XX PJ00_PFE0_TX_D0_CFG
-				    PFE0_RX_CLK_IMCR PH04_PFE0_RX_CLK_IN
-				    PFE0_RX_DV_IMCR PH05_PFE0_RX_DV_IN
-				    PFE0_RX_D0_IMCR PH06_PFE0_RX_D0_IN
-				    PFE0_RX_D1_IMCR PH07_PFE0_RX_D1_IN
-				    PFE0_RX_D2_IMCR PH08_PFE0_RX_D2_IN
-				    PFE0_RX_D3_IMCR PH09_PFE0_RX_D3_IN
-				    >;
-		};
-
-		pinctrl1_pfe1_mdio: pinctrl1_pfe1_mdio {
-			fsl,pins = <PFE1_MDIO_IMCR PD13_PFE1_MDIO_IN>;
-		};
-
-		pinctrl1_pfe1: pinctrl1_pfe1 {
-			fsl,pins = <PFE1_RX_CLK_IMCR PE08_PFE1_RX_CLK_IN
-				    PFE1_RX_DV_IMCR PE09_PFE1_RX_DV_IN
-				    PFE1_RX_D0_IMCR PE10_PFE1_RX_D0_IN
-				    PFE1_RX_D1_IMCR PE11_PFE1_RX_D1_IN
-				    PFE1_RX_D2_IMCR PE12_PFE1_RX_D2_IN
-				    PFE1_RX_D3_IMCR PE13_PFE1_RX_D3_IN
-				    >;
-		};
-
-		pinctrl1_pfe2_mdio: pinctrl1_pfe2_mdio {
-			fsl,pins = <PFE2_MDIO_IMCR PE15_PFE2_MDIO_IN
-				    >;
-		};
-
-		pinctrl1_pfe2: pinctrl1_pfe2 {
-			fsl,pins = <PH01_MSCR_S32G2XX PH01_PFE2_TX_D1_CFG
-				    PH02_MSCR_S32G2XX PH02_PFE2_TX_D2_CFG
-				    PH03_MSCR_S32G2XX PH03_PFE2_TX_D3_CFG
-				    PH04_MSCR_S32G2XX PH04_PFE2_RX_CLK_CFG
-				    PH05_MSCR_S32G2XX PH05_PFE2_RX_DV_CFG
-				    PH06_MSCR_S32G2XX PH06_PFE2_RX_D0_CFG
-				    PH07_MSCR_S32G2XX PH07_PFE2_RX_D1_CFG
-				    PH08_MSCR_S32G2XX PH08_PFE2_RX_D2_CFG
-				    PH09_MSCR_S32G2XX PH09_PFE2_RX_D3_CFG
-				    PH10_MSCR_S32G2XX PH10_PFE2_TX_CLK_CFG
-				    PJ00_MSCR_S32G2XX PJ00_PFE2_TX_D0_CFG
-				    PFE2_RX_CLK_IMCR PH04_PFE2_RX_CLK_IN
-				    PFE2_RX_DV_IMCR PH05_PFE2_RX_DV_IN
-				    PFE2_RX_D0_IMCR PH06_PFE2_RX_D0_IN
-				    PFE2_RX_D1_IMCR PH07_PFE2_RX_D1_IN
-				    PFE2_RX_D2_IMCR PH08_PFE2_RX_D2_IN
-				    PFE2_RX_D3_IMCR PH09_PFE2_RX_D3_IN
-				    >;
-		};
-	};
 };
diff --git a/arch/arm/dts/fsl-s32g398a.dtsi b/arch/arm/dts/fsl-s32g398a.dtsi
new file mode 100644
index 0000000000..eb5efd75bc
--- /dev/null
+++ b/arch/arm/dts/fsl-s32g398a.dtsi
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2021 NXP
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+/dts-v1/;
+#include "fsl-s32g.dtsi"
+/ {
+	model = "NXP S32G3XX";
+	compatible = "fsl,s32g398", "fsl,s32gen1",
+			"arm,vexpress,v2p-aarch64", "arm,vexpress";
+};
diff --git a/arch/arm/dts/fsl-s32g398aemu.dts b/arch/arm/dts/fsl-s32g398aemu.dts
new file mode 100644
index 0000000000..dee9312799
--- /dev/null
+++ b/arch/arm/dts/fsl-s32g398aemu.dts
@@ -0,0 +1,29 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+/*
+ * Copyright 2021 NXP
+ */
+
+/dts-v1/;
+#include "fsl-s32g398a.dtsi"
+
+/ {
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0 0x80000000 0 0x80000000>;
+	};
+
+	memory@880000000 {
+		device_type = "memory";
+		reg = <0x8 0x80000000 0 0x80000000>;
+	};
+
+	sram@34000000 {
+		device_type = "memory";
+		reg = <0 0x34000000 0 0x1400000>;
+	};
+
+};
+
+&usdhc0 {
+	status = "okay";
+};
diff --git a/board/freescale/s32-gen1/Kconfig b/board/freescale/s32-gen1/Kconfig
index fa4228f0db..376e56063d 100644
--- a/board/freescale/s32-gen1/Kconfig
+++ b/board/freescale/s32-gen1/Kconfig
@@ -1,4 +1,4 @@
-if TARGET_S32G274AEMU || TARGET_S32R45EMU
+if TARGET_S32G274AEMU || TARGET_S32R45EMU || TARGET_S32G398AEMU
 
 config TARGET_TYPE_S32GEN1_EMULATOR
 	bool
@@ -52,6 +52,7 @@ config SYS_CONFIG_NAME
 	string
 	default "s32g274a" if NXP_S32G2XX
 	default "s32r45" if NXP_S32R45
+	default "s32g398a" if NXP_S32G3XX
 
 config SYS_ERRATUM_ERR050543
 	bool "Workaround for NXP Erratum ERR050543"
diff --git a/board/freescale/s32-gen1/Makefile b/board/freescale/s32-gen1/Makefile
index 98bffd1631..ee649f8061 100644
--- a/board/freescale/s32-gen1/Makefile
+++ b/board/freescale/s32-gen1/Makefile
@@ -20,7 +20,8 @@ obj-$(CONFIG_TARGET_S32G274AEVB) += s32g274aevb.o
 obj-$(CONFIG_TARGET_S32G274ARDB) += s32g274ardb.o
 obj-$(CONFIG_TARGET_S32G274ASIM) += s32g274asim.o
 obj-$(CONFIG_TARGET_S32G274ABLUEBOX3) += s32g274abluebox3.o
-obj-$(CONFIG_TARGET_S32G274AEMU) += s32g274aemu.o
+obj-$(CONFIG_TARGET_S32G274AEMU) += s32g_emu.o
+obj-$(CONFIG_TARGET_S32G398AEMU) += s32g_emu.o
 
 obj-$(CONFIG_TARGET_S32R45EVB) += s32r45evb.o
 obj-$(CONFIG_TARGET_S32R45SIM) += s32r45sim.o
diff --git a/board/freescale/s32-gen1/board_common.h b/board/freescale/s32-gen1/board_common.h
index c9777b9956..892f4390d7 100644
--- a/board/freescale/s32-gen1/board_common.h
+++ b/board/freescale/s32-gen1/board_common.h
@@ -20,7 +20,9 @@ void setup_iomux_uart(void);
 void setup_iomux_uart0_pc09_pc10(void);
 #endif
 
-#if defined(CONFIG_TARGET_S32G274ASIM) || defined(CONFIG_TARGET_S32G274AEMU)
+#if defined(CONFIG_TARGET_S32G274ASIM) || \
+	defined(CONFIG_TARGET_S32G274AEMU) || \
+	defined(CONFIG_TARGET_S32G398AEMU)
 void setup_iomux_uart1_pb09_pb10(void);
 #endif
 
diff --git a/board/freescale/s32-gen1/common.c b/board/freescale/s32-gen1/common.c
index 56861e2f10..45c673b51d 100644
--- a/board/freescale/s32-gen1/common.c
+++ b/board/freescale/s32-gen1/common.c
@@ -63,6 +63,8 @@ int checkboard(void)
 	puts("Board:\tVDK for NXP S32G274A VP\n");
 #elif defined(CONFIG_TARGET_S32G274AEMU)
 	puts("Board:\tZeBu model for NXP S32G274A\n");
+#elif defined(CONFIG_TARGET_S32G398AEMU)
+	puts("Board:\tZeBu model for NXP S32G398A\n");
 #elif defined(CONFIG_TARGET_S32R45EVB)
 	puts("Board:\tNXP S32R45-EVB\n");
 #elif defined(CONFIG_TARGET_S32R45SIM)
@@ -90,7 +92,9 @@ int ft_board_setup(void *blob, bd_t *bd)
 }
 #endif /* defined(CONFIG_OF_FDT) && defined(CONFIG_OF_BOARD_SETUP) */
 
-#if defined(CONFIG_TARGET_S32G274ASIM) || defined(CONFIG_TARGET_S32G274AEMU)
+#if defined(CONFIG_TARGET_S32G274ASIM) || \
+	defined(CONFIG_TARGET_S32G274AEMU) || \
+	defined(CONFIG_TARGET_S32G398AEMU)
 void setup_iomux_uart1_pb09_pb10(void)
 {
 	/* Muxing for linflex1 */
diff --git a/board/freescale/s32-gen1/s32g274aemu.c b/board/freescale/s32-gen1/s32g_emu.c
similarity index 100%
rename from board/freescale/s32-gen1/s32g274aemu.c
rename to board/freescale/s32-gen1/s32g_emu.c
diff --git a/configs/s32g398a_emu_defconfig b/configs/s32g398a_emu_defconfig
new file mode 100644
index 0000000000..e349164348
--- /dev/null
+++ b/configs/s32g398a_emu_defconfig
@@ -0,0 +1,28 @@
+CONFIG_ARM=y
+CONFIG_ARCH_S32=y
+CONFIG_ENV_SIZE=0x2000
+CONFIG_ENV_OFFSET=0x1e0000
+CONFIG_NR_DRAM_BANKS=3
+CONFIG_TARGET_S32G398AEMU=y
+CONFIG_S32_LPDDR4=y
+CONFIG_DISTRO_DEFAULTS=y
+# CONFIG_SYS_MALLOC_F is not set
+# CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
+CONFIG_TOOLS_DEBUG=y
+CONFIG_FIT=y
+CONFIG_SD_BOOT=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_ARCH_EARLY_INIT_R=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_SMC=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-s32g398aemu"
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_DM=y
+# CONFIG_DM_DEVICE_REMOVE is not set
+# CONFIG_DM_SEQ_ALIAS is not set
+CONFIG_DM_MMC=y
+CONFIG_FSL_USDHC=y
+CONFIG_FSL_LINFLEXUART=y
+CONFIG_FSL_LINFLEX_MODULE=1
diff --git a/drivers/clk/s32/Makefile b/drivers/clk/s32/Makefile
index e279aa3c9a..4f3796ced3 100644
--- a/drivers/clk/s32/Makefile
+++ b/drivers/clk/s32/Makefile
@@ -12,6 +12,7 @@ obj-y += clk_utils.o
 obj-y += s32gen1_scmi_ids.o
 obj-y += s32gen1_scmi_clk.o
 obj-$(CONFIG_NXP_S32G2XX) += s32g274a_clk.o s32g274a_scmi_ids.o
+obj-$(CONFIG_NXP_S32G3XX) += s32g274a_clk.o s32g274a_scmi_ids.o
 obj-$(CONFIG_NXP_S32R45) += s32r45_clk.o s32r45_scmi_ids.o
 obj-$(CONFIG_CMD_CLK) += clk_dump/
 
diff --git a/drivers/clk/s32/clk_dump/Makefile b/drivers/clk/s32/clk_dump/Makefile
index e500feabf7..6afcbc7325 100644
--- a/drivers/clk/s32/clk_dump/Makefile
+++ b/drivers/clk/s32/clk_dump/Makefile
@@ -6,6 +6,7 @@
 obj-y += clk_dump.o
 obj-y += s32gen1_clk_names.o
 obj-$(CONFIG_NXP_S32G2XX) += s32g274a_clk_names.o
+obj-$(CONFIG_NXP_S32G3XX) += s32g274a_clk_names.o
 obj-$(CONFIG_NXP_S32R45) += s32r45_clk_names.o
 
 ccflags-y += -Idrivers/clk/s32/include
diff --git a/drivers/clk/s32/s32g274a_clk.c b/drivers/clk/s32/s32g274a_clk.c
index c7ca783311..c37e8553d8 100644
--- a/drivers/clk/s32/s32g274a_clk.c
+++ b/drivers/clk/s32/s32g274a_clk.c
@@ -329,11 +329,14 @@ struct s32gen1_clk *get_plat_clock(uint32_t id)
 
 ulong s32gen1_plat_set_rate(struct clk *c, ulong rate)
 {
+#ifdef NXP_S32G2XX
 	ulong qspi_max_rate;
+#endif
 
 	if (s32gen1_scmi_request(c))
 		return 0;
 
+#ifdef NXP_S32G2XX
 	if (is_qspi_clk(c->id)) {
 		if (is_qspi2x_clk(c->id))
 			qspi_max_rate = S32G274A_REV1_QSPI_MAX_FREQ * 2;
@@ -343,6 +346,7 @@ ulong s32gen1_plat_set_rate(struct clk *c, ulong rate)
 		if (is_s32gen1_soc_rev1() && rate > qspi_max_rate)
 			rate = qspi_max_rate;
 	}
+#endif
 
 	return s32gen1_scmi_set_rate(c, rate);
 }
diff --git a/drivers/clk/s32/s32gen1_clk.c b/drivers/clk/s32/s32gen1_clk.c
index 13f00c0531..97afaa020c 100644
--- a/drivers/clk/s32/s32gen1_clk.c
+++ b/drivers/clk/s32/s32gen1_clk.c
@@ -653,6 +653,7 @@ struct s32gen1_clk *get_clock(uint32_t id)
 	return plat_clocks[index];
 }
 
+#ifdef NXP_S32G2XX
 bool is_qspi1x_clk(uint32_t id)
 {
 	return (id == S32GEN1_SCMI_CLK_QSPI_FLASH1X) ||
@@ -669,3 +670,4 @@ bool is_qspi_clk(uint32_t id)
 {
 	return is_qspi1x_clk(id) || is_qspi2x_clk(id);
 }
+#endif
diff --git a/drivers/net/dwc_eth_qos_s32cc.c b/drivers/net/dwc_eth_qos_s32cc.c
index 59b560f9e6..1b712fb7ea 100644
--- a/drivers/net/dwc_eth_qos_s32cc.c
+++ b/drivers/net/dwc_eth_qos_s32cc.c
@@ -259,7 +259,8 @@ static int check_sgmii_cfg(int gmac_no)
 #if defined(CONFIG_TARGET_S32G274AEVB) || \
 	defined(CONFIG_TARGET_S32G274ARDB) || \
 	defined(CONFIG_TARGET_S32G274ASIM) || \
-	defined(CONFIG_TARGET_S32G274AEMU)
+	defined(CONFIG_TARGET_S32G274ASIM) || \
+	defined(CONFIG_TARGET_S32G398AEMU)
 
 	desired_mode1 = SGMII_XPCS0;
 	desired_mode2 = SGMII_XPCS0_XPCS1;
diff --git a/include/configs/s32g398a.h b/include/configs/s32g398a.h
new file mode 100644
index 0000000000..7813745b10
--- /dev/null
+++ b/include/configs/s32g398a.h
@@ -0,0 +1,24 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
+/*
+ * Copyright 2021 NXP
+ */
+
+/*
+ * Configuration settings for all the Freescale S32G398A boards.
+ */
+
+#ifndef __S32G398A_H
+#define __S32G398A_H
+
+#include <configs/s32-gen1.h>
+
+#if !defined(CONFIG_PRAM) && !defined(CONFIG_S32_SKIP_RELOC)
+
+/* 24 MB covering the following:
+ *  - 22 MB for optee_os + shared memory between optee_os and linux kernel
+ *  - 2 MB for the Secure Monitor
+ */
+#define CONFIG_PRAM	24576	/* 24MB */
+#endif
+
+#endif
diff --git a/include/dt-bindings/clock/s32gen1-clock-freq.h b/include/dt-bindings/clock/s32gen1-clock-freq.h
index 5a33ca8b14..6db683ca27 100644
--- a/include/dt-bindings/clock/s32gen1-clock-freq.h
+++ b/include/dt-bindings/clock/s32gen1-clock-freq.h
@@ -13,7 +13,6 @@
 #define S32GEN1_PERIPH_PLL_VCO_FREQ		(2000 * MHZ)
 #define S32GEN1_FXOSC_FREQ			(40 * MHZ)
 #define S32GEN1_FIRC_FREQ			(48 * MHZ)
-#define S32GEN1_XBAR_2X_FREQ			(800 * MHZ)
 #define S32GEN1_LIN_BAUD_CLK_FREQ		(125 * MHZ)
 
 #if defined(CONFIG_NXP_S32G2XX)
@@ -28,6 +27,8 @@
 #define S32GEN1_DDR_FREQ			(666666666)
 #define S32G274A_REV2_DDR_PLL_VCO_FREQ		(1600 * MHZ)
 #define S32G274A_REV2_DDR_FREQ			(800 * MHZ)
+#define S32GEN1_XBAR_2X_FREQ			(800 * MHZ)
+
 #elif defined(CONFIG_NXP_S32R45)
 #define S32GEN1_A53_MAX_FREQ			(800 * MHZ)
 #define S32GEN1_ARM_PLL_VCO_MAX_FREQ		(1600 * MHZ)
@@ -37,7 +38,18 @@
 #define S32GEN1_QSPI_MAX_FREQ			(133333333)
 #define S32GEN1_DDR_PLL_VCO_FREQ		(1600 * MHZ)
 #define S32GEN1_DDR_FREQ			(800 * MHZ)
+#define S32GEN1_XBAR_2X_FREQ			(800 * MHZ)
 
+#elif defined(CONFIG_NXP_S32G3XX)
+#define S32GEN1_A53_MAX_FREQ			(1111000434UL)
+#define S32GEN1_ARM_PLL_VCO_MAX_FREQ		(2222000868UL)
+#define S32GEN1_ARM_PLL_PHI0_MAX_FREQ		(1111000434)
+#define S32GEN1_PERIPH_PLL_PHI0_MIN_FREQ	(100 * MHZ)
+#define S32GEN1_PERIPH_PLL_PHI2_MIN_FREQ	(40 * MHZ)
+#define S32GEN1_QSPI_MAX_FREQ			(200 * MHZ)
+#define S32GEN1_DDR_PLL_VCO_FREQ		(1600 * MHZ)
+#define S32GEN1_DDR_FREQ			(800 * MHZ)
+#define S32GEN1_XBAR_2X_FREQ			(799920312UL)
 #else
 #error Undefined platform
 #endif
-- 
2.25.1

