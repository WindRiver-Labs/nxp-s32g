From b90aed4a6f9f92be8699505bfe3132d98bd61afd Mon Sep 17 00:00:00 2001
From: Vlad Pelin <vlad.pelin@nxp.com>
Date: Wed, 28 Apr 2021 15:34:48 +0300
Subject: [PATCH 42/42] secboot: update hse interface and hse_reserved

updated hse interface to sync with HSE_FW_0.9.0_RC2
moved hse_reserved dts node so it can be used by rdb2
changed mmc layout

Upstream-Status: Pending

Issue: ALB-6597
Signed-off-by: Vlad Pelin <vlad.pelin@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../cpu/armv8/s32/s32-gen1/hse_adv_secboot.c  | 56 +++++++------------
 arch/arm/dts/fsl-s32-gen1.dtsi                |  7 +++
 arch/arm/dts/fsl-s32g274aevb.dts              | 14 -----
 drivers/crypto/fsl/hse/hse_mu.c               |  5 +-
 include/hse/hse_abi.h                         | 27 ++++-----
 tools/s32gen1_secboot.sh                      | 16 +++---
 tools/s32gen1image.c                          | 25 ++++-----
 tools/s32gen1image.h                          |  4 +-
 8 files changed, 67 insertions(+), 87 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c b/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
index af56985eeb..5d75340253 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
@@ -46,52 +46,36 @@ static const u8 rsa2048_orig_exp[] = { 0x01, 0x00, 0x01 };
 /* hse nvm key catalog configuration */
 #define HSE_NVM_KEY_CATALOG_CFG \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
-	HSE_KEY_TYPE_AES, 4U, HSE_KEY128_BITS }, \
+	HSE_KEY_TYPE_AES, 5U, HSE_KEY128_BITS }, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
-	HSE_KEY_TYPE_AES, 6U, HSE_KEY256_BITS }, \
+	HSE_KEY_TYPE_AES, 10U, HSE_KEY256_BITS }, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
-	HSE_KEY_TYPE_HMAC, 1U, HSE_KEY512_BITS }, \
+	HSE_KEY_TYPE_HMAC, 5U, HSE_KEY512_BITS }, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
 	HSE_KEY_TYPE_ECC_PAIR, 2U, HSE_KEY256_BITS }, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
-	HSE_KEY_TYPE_ECC_PUB_EXT, 2U, HSE_KEY256_BITS }, \
+	HSE_KEY_TYPE_ECC_PUB, 2U, HSE_KEY256_BITS }, \
+{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
+	HSE_KEY_TYPE_ECC_PUB_EXT, 1U, HSE_KEY256_BITS }, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
 	HSE_KEY_TYPE_RSA_PAIR, 2U, HSE_KEY2048_BITS}, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
 	HSE_KEY_TYPE_RSA_PUB, 2U, HSE_KEY2048_BITS}, \
 { HSE_ALL_MU_MASK, HSE_KEY_OWNER_CUST, \
-	HSE_KEY_TYPE_RSA_PUB_EXT, 2U, HSE_KEY2048_BITS}, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_OEM, \
-	HSE_KEY_TYPE_AES, 1U, HSE_KEY128_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_OEM, \
-	HSE_KEY_TYPE_AES, 3U, HSE_KEY256_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_OEM, \
-	HSE_KEY_TYPE_HMAC, 1U, HSE_KEY512_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_OEM, \
-	HSE_KEY_TYPE_ECC_PUB, 1U, HSE_KEY256_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_OEM, \
-	HSE_KEY_TYPE_RSA_PUB, 1U, HSE_KEY2048_BITS}, \
+	HSE_KEY_TYPE_RSA_PUB_EXT, 1U, HSE_KEY2048_BITS}, \
 { 0U, 0U, 0U, 0U, 0U }
 
 /* hse ram key catalog configuration */
-#define HSE_RAM_KEY_CATALOG_CFG \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_AES, 2U, HSE_KEY128_BITS }, \
-{ HSE_MU0_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_AES, 4U, HSE_KEY256_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_HMAC, 5U, HSE_KEY512_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_ECC_PAIR, 2U, HSE_KEY256_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_ECC_PUB, 1U, HSE_KEY256_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_RSA_PUB, 2U, HSE_KEY2048_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_SHARED_SECRET, 2U, HSE_KEY638_BITS }, \
-{ HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
-	HSE_KEY_TYPE_SHARED_SECRET, 2U, HSE_KEY4096_BITS }, \
-{ 0U, 0U, 0U, 0U, 0U }
+#define  HSE_RAM_KEY_CATALOG_CFG \
+{HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
+	HSE_KEY_TYPE_RSA_PUB, 1u, HSE_KEY2048_BITS }, \
+{HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
+	HSE_KEY_TYPE_AES, 12u, HSE_KEY256_BITS }, \
+{HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
+	HSE_KEY_TYPE_HMAC, 6u, HSE_KEY512_BITS}, \
+{HSE_ALL_MU_MASK, HSE_KEY_OWNER_ANY, \
+	HSE_KEY_TYPE_ECC_PUB, 1u, HSE_KEY256_BITS}, \
+{0u, 0u, 0u, 0u, 0u}
 
 /* the nvm container used to format the hse key catalogs */
 static const struct hse_key_group_cfg_entry nvm_orig_cat[] = {
@@ -327,7 +311,7 @@ int hse_write_sys_img(struct hse_private *priv, bool secure)
 	flush_dcache_range((u64)priv,
 			   (u64)priv + sizeof(struct hse_private));
 
-	ret = hse_mmc_write(&priv->sys_img, HSE_SYS_IMG_BLK, 128);
+	ret = hse_mmc_write(&priv->sys_img, HSE_SYS_IMG_BLK, 96);
 	if (ret) {
 		log_err("ERROR: sys-img write failed!\n");
 		ret = CMD_RET_FAILURE;
@@ -388,13 +372,13 @@ static int do_hse_adv_secboot_prep(cmd_tbl_t *cmdtp, int flag,
 	hse_nodeoffset = fdt_path_offset(gd->fdt_blob,
 				     "/reserved-memory/hse_reserved");
 	if (hse_nodeoffset < 0) {
-		log_err("ERROR: hse_reserved node not found!\n");
+		printf("ERROR: hse_reserved node not found!\n");
 		return hse_nodeoffset;
 	}
 
 	hse_resmem = fdt_get_base_address(gd->fdt_blob, hse_nodeoffset);
 	if (hse_resmem < 0) {
-		log_err("ERROR: could not get base address of hse_reserved node!\n");
+		printf("ERROR: could not get base address of hse_reserved node!\n");
 		return hse_resmem;
 	}
 
diff --git a/arch/arm/dts/fsl-s32-gen1.dtsi b/arch/arm/dts/fsl-s32-gen1.dtsi
index 1f39d52274..2e7b746523 100644
--- a/arch/arm/dts/fsl-s32-gen1.dtsi
+++ b/arch/arm/dts/fsl-s32-gen1.dtsi
@@ -44,6 +44,13 @@
 			reg = <0x0 0xd0000000 0x0 0x001000>;
 			no-map;
 		};
+
+#ifdef CONFIG_HSE_SECBOOT
+		hse_reserved: hse_reserved@0x84000000 {
+			no-map;
+			reg = <0 0x84000000 0 0x40000>; /* 256K */
+		};
+#endif
 	};
 
 	fxosc: fxosc@40050000 {
diff --git a/arch/arm/dts/fsl-s32g274aevb.dts b/arch/arm/dts/fsl-s32g274aevb.dts
index a1d20d29f1..a58c04bdd4 100644
--- a/arch/arm/dts/fsl-s32g274aevb.dts
+++ b/arch/arm/dts/fsl-s32g274aevb.dts
@@ -11,20 +11,6 @@
 		usb0 = &usbotg;
 	};
 
-#ifdef CONFIG_HSE_SECBOOT
-	reserved-memory {
-		#address-cells = <2>;
-		#size-cells = <2>;
-		ranges;
-
-		/* reserved space to store hse data */
-		hse_reserved: hse_reserved@0xd0000000 {
-			no-map;
-			reg = <0 0xd0000000 0 0x40000>; /* 256K */
-		};
-	};
-#endif
-
 	usbotg: usb@44064000 {
 		compatible = "fsl,imx27-usb";
 		reg = <0x0 0x44064000 0x0 0x200>;
diff --git a/drivers/crypto/fsl/hse/hse_mu.c b/drivers/crypto/fsl/hse/hse_mu.c
index 104f2e452e..87196a16a5 100644
--- a/drivers/crypto/fsl/hse/hse_mu.c
+++ b/drivers/crypto/fsl/hse/hse_mu.c
@@ -2,7 +2,7 @@
 /*
  * HSE MU interface for secure boot in u-boot
  *
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #include <common.h>
@@ -42,6 +42,9 @@ static inline int hse_err_decode(u32 *srv_rsp)
 	case HSE_SRV_RSP_KEY_INVALID:
 		printf("ERROR: key flags do not match requested operation!\n");
 		goto ret_err;
+	case HSE_SRV_RSP_NOT_ALLOWED:
+		printf("ERROR: operation not allowed!\n");
+		goto ret_err;
 	default:
 		printf("ERROR: unknown error, EFAULT!\n");
 		goto ret_err;
diff --git a/include/hse/hse_abi.h b/include/hse/hse_abi.h
index 22ad710233..6b170de589 100644
--- a/include/hse/hse_abi.h
+++ b/include/hse/hse_abi.h
@@ -14,22 +14,23 @@
 #define BYTES_TO_BITS(x)	((x) * 8u)
 
 #define HSE_SRV_RSP_OK            0x55A5AA33ul
-#define HSE_SRV_RSP_VERIFY_FAILED 0x55A5AA35ul
-#define HSE_SRV_RSP_INVALID_ADDR  0x55A5AA55ul
-#define HSE_SRV_RSP_INVALID_PARAM 0x55A5AA56ul
-#define HSE_SRV_RSP_KEY_INVALID   0xA5AA5527ul
+#define HSE_SRV_RSP_VERIFY_FAILED 0x55A5A164ul
+#define HSE_SRV_RSP_INVALID_ADDR  0x55A5A26Aul
+#define HSE_SRV_RSP_INVALID_PARAM 0x55A5A399ul
+#define HSE_SRV_RSP_NOT_ALLOWED   0xAA55A21Cul
+#define HSE_SRV_RSP_KEY_INVALID   0xA5AA52B4ul
 
 #define HSE_UBOOT_MAX_SIZE   0x100000u
-#define HSE_SYS_IMG_MAX_SIZE 0x10000u
+#define HSE_SYS_IMG_MAX_SIZE 0xC000u
 #define HSE_UBOOT_AUTH_LEN   0x100u
-#define HSE_SYS_IMG_SD       0x71200u
-#define HSE_AUTH_TAG_SD      0x81200u
+#define HSE_SYS_IMG_SD       0x76000u
+#define HSE_AUTH_TAG_SD      0x82000u
 
 #define HSE_PIVT_BLK       0
 #define HSE_DIVT_BLK       8
-#define HSE_SYS_IMG_BLK    905
-#define HSE_UBOOT_SIGN_BLK 1033
-#define HSE_UBOOT_BIN_BLK  1051
+#define HSE_SYS_IMG_BLK    944
+#define HSE_UBOOT_SIGN_BLK 1040
+#define HSE_UBOOT_BIN_BLK  1057
 
 #define HSE_EXT_FLASH_SD   2u
 #define HSE_EXT_FLASH_PAGE 512u
@@ -49,7 +50,7 @@
 
 #define HSE_ACCESS_MODE_ONE_PASS 0u
 
-#define HSE_APP_CORE3 3u
+#define HSE_APP_CORE3 3u /* A53_0 */
 
 #define HSE_PUBLISH_ALL_DATA_SETS BIT(1)
 
@@ -58,13 +59,13 @@
 #define HSE_SMR_ENTRY_1               BIT(1)
 
 #define HSE_CR_SANCTION_KEEP_CORE_IN_RESET 0x7455u
-#define HSE_CR_AUTO_START                  0x35A5U
+#define HSE_CR_AUTO_START                  0x35A5u
 
 #define HSE_SIGN_RSASSA_PKCS1_V15 0x93u
 #define HSE_HASH_ALGO_SHA_1       2u
 
 #define HSE_INVALID_KEY_HANDLE              0xFFFFFFFFul
-#define HSE_BOOT_KEY_HANDLE                 0x010600u
+#define HSE_BOOT_KEY_HANDLE                 0x010700u
 #define HSE_SMR_DECRYPT_KEY_HANDLE_NOT_USED 0ul
 
 #define HSE_MU0_MASK    BIT(0)
diff --git a/tools/s32gen1_secboot.sh b/tools/s32gen1_secboot.sh
index b2b5fa8913..8a21061be0 100755
--- a/tools/s32gen1_secboot.sh
+++ b/tools/s32gen1_secboot.sh
@@ -87,7 +87,7 @@ openssl rsa -in "$KEY_PATH"/private.pem -pubout > "$KEY_PATH"/public.pem
 fi
 
 # extract app code
-dd if=u-boot.s32 of=u-boot-tosign.s32 bs=512 skip=1051
+dd if=u-boot.s32 of=u-boot-tosign.s32 bs=512 skip=1057
 
 # find necessary padding for u-boot
 PAD=$((UBOOT_MAX_SIZE - $(wc -c < u-boot-tosign.s32)))
@@ -108,17 +108,17 @@ dd if=u-boot.s32 of="$DEV_PATH" bs=512 skip=8 seek=8 count=1 conv=notrunc,fsync
 
 # write DCD
 dd if=u-boot.s32 of="$DEV_PATH" bs=512 \
-skip=1034 seek=1034 count=16 conv=notrunc,fsync
+skip=9 seek=9 count=16 conv=notrunc,fsync
 
 # write hse fw
-dd if="$HSE_PATH" of="$DEV_PATH" bs=512 seek=9 conv=notrunc,fsync
+dd if="$HSE_PATH" of="$DEV_PATH" bs=512 seek=32 conv=notrunc,fsync
 
 # write signature
-dd if=u-boot.sign of="$DEV_PATH" bs=512 seek=1033 conv=notrunc,fsync
-
-# write signed u-boot
-dd if=u-boot-tosign.s32 of="$DEV_PATH" bs=512 seek=1051 conv=notrunc,fsync
+dd if=u-boot.sign of="$DEV_PATH" bs=512 seek=1040 conv=notrunc,fsync
 
 # write app header
 dd if=u-boot.s32 of="$DEV_PATH" bs=512 \
-seek=1050 skip=1050 count=1 conv=notrunc,fsync
+seek=1056 skip=1056 count=1 conv=notrunc,fsync
+
+# write signed u-boot
+dd if=u-boot-tosign.s32 of="$DEV_PATH" bs=512 seek=1057 conv=notrunc,fsync
diff --git a/tools/s32gen1image.c b/tools/s32gen1image.c
index 31253bfaf4..17b320f404 100644
--- a/tools/s32gen1image.c
+++ b/tools/s32gen1image.c
@@ -11,7 +11,7 @@
 #define UNSPECIFIED	-1
 
 #ifdef CONFIG_HSE_SECBOOT
-#  define S32GEN1_SECBOOT_HSE_RES_SIZE 0x80200u
+#  define S32GEN1_SECBOOT_HSE_RES_SIZE 0x80000ul
 #endif
 
 #ifdef CONFIG_FLASH_BOOT
@@ -40,18 +40,18 @@ static struct program_image image_layout = {
 		.offset = S32GEN1_IVT_OFFSET_1000,
 		.size = sizeof(struct ivt),
 	},
+	.dcd = {
+		.offset = S32_AUTO_OFFSET,
+		.alignment = 0x200U,
+		.size = DCD_MAXIMUM_SIZE,
+	},
 #ifdef CONFIG_HSE_SECBOOT
 	.hse_reserved = {
 		.offset = S32_AUTO_OFFSET,
-		.alignment = 0x200U,
+		.alignment = 0x2000U,
 		.size = S32GEN1_SECBOOT_HSE_RES_SIZE,
 	},
 #endif
-	.dcd = {
-		.offset = S32_AUTO_OFFSET,
-		.alignment = 0x200U,
-		.size = DCD_MAXIMUM_SIZE,
-	},
 	.app_code = {
 		.offset = S32_AUTO_OFFSET,
 		.alignment = 0x200U,
@@ -370,10 +370,10 @@ static int s32g2xx_build_layout(struct program_image *program_image,
 		&program_image->qspi_params,
 #endif
 		&program_image->ivt_duplicate,
+		&program_image->dcd,
 #ifdef CONFIG_HSE_SECBOOT
 		&program_image->hse_reserved,
 #endif
-		&program_image->dcd,
 		&program_image->app_code,
 		&program_image->code,
 	};
@@ -422,20 +422,19 @@ static void s32gen1_print_header(const void *header)
 	fprintf(stderr, "IVT (duplicate):\tOffset: 0x%x\t\tSize: 0x%x\n",
 		(unsigned int)image_layout.ivt_duplicate.offset,
 		(unsigned int)image_layout.ivt_duplicate.size);
+	fprintf(stderr, "DCD:\t\t\tOffset: 0x%x\t\tSize: 0x%x\n",
+		(unsigned int)image_layout.dcd.offset,
+		(unsigned int)image_layout.dcd.size);
 #ifdef CONFIG_HSE_SECBOOT
 	fprintf(stderr, "HSE Reserved:\t\tOffset: 0x%x\t\tSize: 0x%x\n",
 		(unsigned int)image_layout.hse_reserved.offset,
 		(unsigned int)image_layout.hse_reserved.size);
 #endif
-	fprintf(stderr, "DCD:\t\t\tOffset: 0x%x\t\tSize: 0x%x\n",
-		(unsigned int)image_layout.dcd.offset,
-		(unsigned int)image_layout.dcd.size);
 	fprintf(stderr, "AppBootCode Header:\tOffset: 0x%x\t\tSize: 0x%x\n",
 		(unsigned int)image_layout.app_code.offset,
 		(unsigned int)image_layout.app_code.size);
 	fprintf(stderr, "U-Boot/FIP:\t\tOffset: 0x%x\t\tSize: 0x%x\n",
-		(unsigned int)(image_layout.app_code.offset +
-			offsetof(struct application_boot_code, code)),
+		(unsigned int)image_layout.code.offset,
 		(unsigned int)image_layout.code.size);
 #if defined(CONFIG_ENV_OFFSET) && defined(CONFIG_ENV_SIZE)
 	fprintf(stderr, "U-Boot Environment:\tOffset: 0x%x\tSize: 0x%x\n",
diff --git a/tools/s32gen1image.h b/tools/s32gen1image.h
index 2238047c4e..93731d6c69 100644
--- a/tools/s32gen1image.h
+++ b/tools/s32gen1image.h
@@ -1,5 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
-/* Copyright 2019-2020 NXP */
+/* Copyright 2019-2021 NXP */
 
 #ifndef S32GEN1IMAGE_H
 #define S32GEN1IMAGE_H
@@ -124,10 +124,10 @@ struct program_image {
 	struct image_comp qspi_params;
 #endif
 	struct image_comp ivt_duplicate;
+	struct image_comp dcd;
 #ifdef CONFIG_HSE_SECBOOT
 	struct image_comp hse_reserved;
 #endif
-	struct image_comp dcd;
 	struct image_comp app_code;
 	struct image_comp code;
 	__u8 *header;
-- 
2.25.1

