From a39e33faae8c5cd1902e4ab88b8bd4c0ce040a6e Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Tue, 12 Jan 2021 14:49:59 +0200
Subject: [PATCH 37/76] s32-gen1: Start U-Boot in DDR and skip relocation when
 deployed from ATF

U-Boot should start from DDR when booting with ATF, consequently the
relocation is not needed anymore. This also helps to reduce boot time.

Issue: ALB-6294
Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
---
 Kconfig                          |  2 +-
 arch/arm/cpu/armv8/s32/cpu.c     | 14 +++++++++-----
 board/freescale/s32-gen1/Kconfig | 11 +++++++----
 3 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/Kconfig b/Kconfig
index de67ea61f1..14309612f3 100644
--- a/Kconfig
+++ b/Kconfig
@@ -594,7 +594,7 @@ config SYS_TEXT_BASE
 	default 0x4a000000 if ARCH_SUNXI && !MACH_SUN9I && !MACH_SUN8I_V3S
 	default 0x2a000000 if ARCH_SUNXI && MACH_SUN9I
 	default 0x42e00000 if ARCH_SUNXI && MACH_SUN8I_V3S
-	hex "Text Base"
+	hex "Text Base" if !ARCH_S32
 	help
 	  The address in memory that U-Boot will be running from, initially.
 
diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index 20d92781cd..13b5ad3dcc 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier:     GPL-2.0+
 /*
  * Copyright 2014-2016 Freescale Semiconductor, Inc.
- * Copyright 2017-2020 NXP
+ * Copyright 2017-2021 NXP
  */
 
 #include <common.h>
@@ -37,7 +37,8 @@ void mmu_setup(void);
 #ifndef CONFIG_SYS_DCACHE_OFF
 
 static struct mm_region early_map[] = {
-#ifndef CONFIG_S32_SKIP_RELOC
+#if !defined(CONFIG_S32_SKIP_RELOC) || \
+	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 #ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE1, CONFIG_SYS_FSL_DRAM_BASE1,
@@ -74,7 +75,8 @@ static struct mm_region early_map[] = {
 	  PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) | PTE_BLOCK_NON_SHARE
 	},
 #endif /* CONFIG_S32_GEN1 */
-#ifndef CONFIG_S32_SKIP_RELOC
+#if !defined(CONFIG_S32_SKIP_RELOC) || \
+	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE2, CONFIG_SYS_FSL_DRAM_BASE2,
 	  CONFIG_SYS_FSL_DRAM_SIZE2,
@@ -98,7 +100,8 @@ static struct mm_region early_map[] = {
 };
 
 static struct mm_region final_map[] = {
-#ifndef CONFIG_S32_SKIP_RELOC
+#if !defined(CONFIG_S32_SKIP_RELOC) || \
+	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 #ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE1, CONFIG_SYS_FSL_DRAM_BASE1,
@@ -132,7 +135,8 @@ static struct mm_region final_map[] = {
 	  PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) | PTE_BLOCK_NON_SHARE
 	},
 #endif /* CONFIG_S32_GEN1 */
-#ifndef CONFIG_S32_SKIP_RELOC
+#if !defined(CONFIG_S32_SKIP_RELOC) || \
+	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE2, CONFIG_SYS_FSL_DRAM_BASE2,
 	  CONFIG_SYS_FSL_DRAM_SIZE2,
diff --git a/board/freescale/s32-gen1/Kconfig b/board/freescale/s32-gen1/Kconfig
index 0078d4c361..360c012f7f 100644
--- a/board/freescale/s32-gen1/Kconfig
+++ b/board/freescale/s32-gen1/Kconfig
@@ -19,20 +19,21 @@ config TARGET_TYPE_S32GEN1_SIMULATOR
 endif
 
 config SYS_DATA_BASE
-	hex "Data Base"
+	hex "Data Base" if !S32_ATF_BOOT_FLOW
+	default 0xff800000 if S32_ATF_BOOT_FLOW
 	default 0x34000000
 	help
 	  U-boot data base address (normally SRAM base address)
 
 config SYS_TEXT_BASE
-	hex
+	default 0xff8a0000 if S32_ATF_BOOT_FLOW
 	default 0x340a0000
 
 config SYS_MEM_SIZE
 	hex "RAM Memory Size"
 	default 0x00800000
 	help
-	  U-boot SRAM size (8 MB for Gen1, 4 MB for older architectures)
+	  U-boot SRAM size (8 MB for Gen1)
 
 if S32_GEN1
 
@@ -66,7 +67,8 @@ config UBOOT_SRAM_FOOTPRINT
 	default 0x200000
 
 config DTB_SRAM_ADDR
-	hex "SRAM address at which the dtb will be found"
+	hex "SRAM address at which the dtb will be found" if !S32_ATF_BOOT_FLOW
+	default 0xff890000 if S32_ATF_BOOT_FLOW
 	default 0x34090000
 
 choice
@@ -92,6 +94,7 @@ choice
 
 	config S32_ATF_BOOT_FLOW
 		bool "Boot flow with TF-A"
+		select S32_SKIP_RELOC
 		help
 		  U-Boot is started by the ARM Trusted Firmware (TF-A) and runs
 		  in the non-secure world.
-- 
2.17.1

