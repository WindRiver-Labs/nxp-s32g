From 80444eb742b8c587127f1124aa20fedd90eb4600 Mon Sep 17 00:00:00 2001
From: "Radu Pirea (NXP OSS)" <radu-nicolae.pirea@oss.nxp.com>
Date: Thu, 23 Sep 2021 15:31:04 +0300
Subject: [PATCH 16/19] sja1105: add dm support

Issue: ALB-4601

Upstream-Status: Pending 

Signed-off-by: Radu Pirea (NXP OSS) <radu-nicolae.pirea@oss.nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/misc/sja1105.c | 40 +++++++++++++++++++++++++++++++++++++++-
 1 file changed, 39 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/sja1105.c b/drivers/misc/sja1105.c
index 04d7ba498c..5fc2240631 100644
--- a/drivers/misc/sja1105.c
+++ b/drivers/misc/sja1105.c
@@ -5,6 +5,7 @@
 
 
 #include <common.h>
+#include <dm/device.h>
 #include <linux/errno.h>
 #include <spi.h>
 #include "sja1105_ll.h"
@@ -103,7 +104,15 @@ static struct spi_slave *get_spi_slave(struct sja_parms *sjap)
 				 name, &dev, &slave);
 	if (ret)
 		return NULL;
-
+	/*
+	 * spi_get_bus_and_cs does not populate max_hz, mode and wordlen fields
+	 * when there is a node in dts.
+	 * In order to maintain the compatibility with the DM version of
+	 * the driver, these fields should be assigned manually.
+	 */
+	slave->max_hz = SJA_DSPI_HZ;
+	slave->mode = SJA_DSPI_MODE;
+	slave->wordlen = SPI_DEFAULT_WORDLEN;
 #else
 	slave = spi_setup_slave(sjap->bus, sjap->cs, SJA_DSPI_HZ,
 				SJA_DSPI_MODE);
@@ -683,6 +692,23 @@ int sja1105_probe(u32 cs, u32 bus)
 	return sja1105_configuration_load(&sjap);
 }
 
+static int sja11105_dm_probe(struct udevice *dev)
+{
+#ifdef CONFIG_DM_SPI
+	int cs = spi_chip_select(dev);
+	int bus = dev->parent->seq;
+#else
+	struct spi_slave *slave = dev_get_parent_priv(dev);
+	int cs = slave->cs;
+	int bus = slave->bus;
+#endif
+
+	if (cs < 0)
+		return cs;
+
+	return sja1105_probe(cs, bus);
+}
+
 static int sja1105_print_regs(struct sja_parms *sjap)
 {
 	u32 val32;
@@ -807,3 +833,15 @@ U_BOOT_CMD(
 	"          for ports, speed options [-|disable|10M|100M|1G] when \"-\" is set\n"
 	"          given port is not updated\n"
 );
+
+static const struct udevice_id sja1105_ids[] = {
+	{ .compatible = "nxp,sja1105-fw-loader" },
+	{}
+};
+
+U_BOOT_DRIVER(altera_sysid) = {
+	.name	= "sja1105_fw_loader",
+	.id	= UCLASS_MISC,
+	.of_match = sja1105_ids,
+	.probe	= sja11105_dm_probe,
+};
-- 
2.17.1

