From 3f89dcca88e9b6882611824effe1e8da89d2ad5f Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Tue, 21 Sep 2021 14:37:58 +0300
Subject: [PATCH 07/19] s32g3: Add initial support for s32g3 evb board

Issue: ALB-7737
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/Kconfig                    |  13 +-
 arch/arm/cpu/armv8/s32/Kconfig                |   4 +
 arch/arm/cpu/armv8/s32/s32-gen1/Makefile      |   2 +-
 arch/arm/dts/Makefile                         |   1 +
 arch/arm/dts/fsl-s32g274aevb.dts              | 350 +----------------
 arch/arm/dts/fsl-s32g3xxaevb.dts              |   7 +
 arch/arm/dts/fsl-s32gxxxaevb.dtsi             | 353 ++++++++++++++++++
 board/freescale/s32-gen1/Kconfig              |   2 +-
 board/freescale/s32-gen1/Makefile             |   7 +-
 board/freescale/s32-gen1/board_common.h       |   2 +-
 board/freescale/s32-gen1/common.c             |   2 +
 board/freescale/s32-gen1/eth.c                |   4 +
 .../s32-gen1/{s32g274aevb.c => s32gxxxaevb.c} |   0
 configs/s32g3xxaevb_defconfig                 |  74 ++++
 configs/s32g3xxaevb_qspi_defconfig            |  80 ++++
 drivers/clk/s32/clk_dump/s32g398a_clk_names.c |   1 +
 drivers/net/Kconfig                           |   4 +-
 drivers/net/dwc_eth_qos_s32cc.c               |   1 +
 drivers/net/pfeng/pfeng_cmd.c                 |  27 +-
 drivers/pci/Kconfig                           |   2 +-
 drivers/usb/host/ehci-mx6.c                   |  20 +-
 include/configs/s32-gen1.h                    |  33 +-
 include/configs/s32.h                         |   2 +-
 include/configs/s32g274a.h                    |  29 +-
 include/configs/s32g398a.h                    |  13 +-
 include/configs/s32r45.h                      |   4 +
 26 files changed, 615 insertions(+), 422 deletions(-)
 create mode 100644 arch/arm/dts/fsl-s32g3xxaevb.dts
 create mode 100644 arch/arm/dts/fsl-s32gxxxaevb.dtsi
 rename board/freescale/s32-gen1/{s32g274aevb.c => s32gxxxaevb.c} (100%)
 create mode 100644 configs/s32g3xxaevb_defconfig
 create mode 100644 configs/s32g3xxaevb_qspi_defconfig

diff --git a/arch/arm/cpu/armv8/Kconfig b/arch/arm/cpu/armv8/Kconfig
index e7bd328e5a..1245852b46 100644
--- a/arch/arm/cpu/armv8/Kconfig
+++ b/arch/arm/cpu/armv8/Kconfig
@@ -111,17 +111,8 @@ config PSCI_RESET
 		   !TARGET_LS2081ARDB && !TARGET_LX2160ARDB && \
 		   !TARGET_LX2160AQDS && \
 		   !ARCH_UNIPHIER && \
-		   !TARGET_S32V234HPCSOM && \
-		   !TARGET_S32V234EVB && !TARGET_MPXS32V234 && \
-		   !TARGET_S32V234PCIE && \
-		   !TARGET_S32V234CCPB && \
-		   !TARGET_CAMPPS32V2 && \
-		   !TARGET_CAMPPS32V2_REVB && \
-		   !TARGET_S32G274AEVB && \
-		   !TARGET_S32G274ARDB && \
-		   !TARGET_S32R45EVB && \
-		   !TARGET_TYPE_S32GEN1_EMULATOR && \
-		   !TARGET_TYPE_S32GEN1_SIMULATOR
+		   !S32V2 && \
+		   !S32_GEN1
 	help
 	  Most armv8 systems have PSCI support enabled in EL3, either through
 	  ARM Trusted Firmware or other firmware.
diff --git a/arch/arm/cpu/armv8/s32/Kconfig b/arch/arm/cpu/armv8/s32/Kconfig
index 82d353204c..4bd7a44895 100644
--- a/arch/arm/cpu/armv8/s32/Kconfig
+++ b/arch/arm/cpu/armv8/s32/Kconfig
@@ -114,6 +114,10 @@ config TARGET_S32G398AEMU
 	bool "Support S32G398A ZeBu"
 	select NXP_S32G3XX
 
+config TARGET_S32G3XXAEVB
+	bool "Support for S32G3 EVB boards"
+	select NXP_S32G3XX
+
 endchoice
 
 if TARGET_S32V234EVB
diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/Makefile b/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
index 997e6decad..a026aef3e8 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/Makefile
@@ -13,7 +13,7 @@ obj-y					+= ncore.o
 obj-y					+= soc.o
 obj-$(CONFIG_NXP_S32G2XX)		+= s32g274a.o
 obj-y					+= sram.o
-ifneq ($(filter y,$(CONFIG_NXP_S32G2XX) $(CONFIG_NXP_S32R45)),)
+ifdef CONFIG_S32_GEN1
 obj-$(CONFIG_NETDEVICES)		+= sgmii/sgmii.o sgmii/serdes_xpcs.o
 endif
 ccflags-y				+= -I./board/freescale/s32-gen1/
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 4d97b36850..b0f3dcccfd 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -390,6 +390,7 @@ dtb-$(CONFIG_FSL_LSCH2) += fsl-ls1043a-qds-duart.dtb \
 
 dtb-$(CONFIG_TARGET_S32G274ABLUEBOX3) += fsl-s32g274abluebox3.dtb
 dtb-$(CONFIG_TARGET_S32G274AEVB) += fsl-s32g274aevb.dtb
+dtb-$(CONFIG_TARGET_S32G3XXAEVB) += fsl-s32g3xxaevb.dtb
 dtb-$(CONFIG_TARGET_S32G274AEMU) += fsl-s32g274aemu.dtb
 dtb-$(CONFIG_TARGET_S32G398AEMU) += fsl-s32g398aemu.dtb
 dtb-$(CONFIG_S32G274ARDB) += fsl-s32g274ardb.dtb
diff --git a/arch/arm/dts/fsl-s32g274aevb.dts b/arch/arm/dts/fsl-s32g274aevb.dts
index 10201eb20b..508d674176 100644
--- a/arch/arm/dts/fsl-s32g274aevb.dts
+++ b/arch/arm/dts/fsl-s32g274aevb.dts
@@ -1,353 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-or-later
 /*
- * Copyright 2019-2021 NXP
+ * Copyright 2021 NXP
  */
 
 /dts-v1/;
-#include <dt-bindings/gpio/gpio.h>
-#include "fsl-s32g274a.dtsi"
-
-/ {
-	aliases {
-		usb0 = &usbotg;
-	};
-
-	usbotg: usb@44064000 {
-		compatible = "fsl,imx27-usb";
-		reg = <0x0 0x44064000 0x0 0x200>;
-		pinctrl-0 = <&pinctrl0_usb &pinctrl1_usb>;
-		pinctrl-names = "default";
-		phys = <&saf1508_phy>;
-	};
-
-	saf1508_phy: usb_phy@44064000 {
-		compatible = "nxp,saf1508bet";
-		reg = <0x0 0x44064000 0x0 0x200>;
-		#phy-cells = <0>;
-	};
-};
-
-&usdhc0 {
-	pinctrl-0 = <&pinctrl0_sd0>;
-	pinctrl-1 = <>;
-	pinctrl-2 = <>;
-	pinctrl-names = "default", "state_100mhz", "state_200mhz";
-	status = "okay";
-};
-
-&dspi1 {
-	pinctrl-0 = <&pinctrl0_dspi1 &pinctrl1_dspi1>;
-	pinctrl-names = "default";
-	status = "okay";
-};
-
-&dspi5 {
-	pinctrl-0 = <&pinctrl0_dspi5 &pinctrl1_dspi5>;
-	pinctrl-names = "default";
-	status = "okay";
-};
-
-&gmac0 {
-	status = "okay";
-	phy-mode = "rgmii";
-	phy-handle = <&mdio_c_phy4>;
-};
-
-&usbotg {
-	status = "okay";
-};
-
-&gmac0_mdio {
-	#address-cells = <1>;
-	#size-cells = <0>;
-	/* ARQ107 on S32RGV-VNP-PLAT */
-	mdio_c_phy1: ethernet-phy@1 {
-		compatible = "ethernet-phy-ieee802.3-c45";
-		reg = <1>;
-	};
-	/* KSZ9031RNX on S32G-VNP-PROC */
-	mdio_c_phy4: ethernet-phy@4 {
-		reg = <4>;
-		max-speed = <1000>;
-	};
-	/* KSZ9031RNX on S32RGV-VNP-PLAT */
-	mdio_c_phy5: ethernet-phy@5 {
-		status = "disabled"; /* blocked by USB by default */
-		reg = <5>;
-		max-speed = <1000>;
-	};
-};
-
-&pfe {
-	status = "okay";
-};
-
-/* EEPROM */
-&i2c0 {
-	clock-frequency=<100000>;
-	pinctrl-names = "default", "gpio";
-	pinctrl-0 = <&pinctrl0_i2c0>;
-	pinctrl-1 = <&pinctrl0_i2c0_gpio>;
-	scl-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	sda-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	status = "okay";
-};
-
-/* Platform board PCI X16 EXPRESS - I2C_SCL_S0, I2C_SDA_S0  */
-&i2c1 {
-	clock-frequency=<100000>;
-	pinctrl-names = "default", "gpio";
-	pinctrl-0 = <&pinctrl0_i2c1 &pinctrl1_i2c1>;
-	pinctrl-1 = <&pinctrl0_i2c1_gpio &pinctrl1_i2c1_gpio>;
-	scl-gpios = <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	sda-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	status = "okay";
-};
-
-/* Platform board GPIO_J3-17 (SDA), GPIO_J3-19 (SCL0)  */
-&i2c2 {
-	clock-frequency=<100000>;
-	pinctrl-names = "default", "gpio";
-	pinctrl-0 = <&pinctrl0_i2c2 &pinctrl1_i2c2>;
-	pinctrl-1 = <&pinctrl0_i2c2_gpio &pinctrl1_i2c2_gpio>;
-	scl-gpios = <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	sda-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	status = "okay";
-};
-
-/* PMIC */
-&i2c4 {
-	status = "okay";
-	pinctrl-names = "default", "gpio";
-	pinctrl-0 = <&pinctrl0_i2c4 &pinctrl1_i2c4>;
-	pinctrl-1 = <&pinctrl0_i2c4_gpio &pinctrl1_i2c4_gpio>;
-	scl-gpios = <&gpio0 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	sda-gpios = <&gpio0 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
-	clock-frequency=<100000>;
-
-	vr5510 {
-		compatible = "fsl,vr5510";
-		reg = <0x20>;
-		status = "okay";
-	};
-
-	vr5510_fsu {
-		compatible = "fsl,vr5510";
-		reg = <0x21>;
-		status = "okay";
-	};
-
-};
-
-&pinctrl0 {
-	board_pinctrl0 {
-		pinctrl0_i2c0: pinctrl0_i2c0 {
-			fsl,pins = <PB00_MSCR_S32G PB00_I2C0_SDA_CFG
-				    PB01_MSCR_S32G PB01_I2C0_SCL_CFG
-				    I2C0_SDA_IMCR PB00_I2C0_SDA_IN
-				    I2C0_SCL_IMCR PB01_I2C0_SCL_IN
-				    >;
-		};
-
-		pinctrl0_i2c0_gpio: pinctrl0_i2c0_gpio {
-			fsl,pins = <PB00_MSCR_S32G PB00_I2C0_SDA_GPIO
-				    PB01_MSCR_S32G PB01_I2C0_SCL_GPIO
-				    I2C0_SDA_IMCR IMCR_DISABLED
-				    I2C0_SCL_IMCR IMCR_DISABLED
-				    >;
-		};
-
-		pinctrl0_i2c1: pinctrl0_i2c1 {
-			fsl,pins = <PB03_MSCR_S32G PB03_I2C1_SCL_CFG
-				    PB04_MSCR_S32G PB04_I2C1_SDA_CFG
-				    >;
-		};
-
-		pinctrl0_i2c1_gpio: pinctrl0_i2c1_gpio {
-			fsl,pins = <PB03_MSCR_S32G PB03_I2C1_SCL_GPIO
-				    PB04_MSCR_S32G PB04_I2C1_SDA_GPIO
-				    >;
-		};
-
-		pinctrl0_i2c2: pinctrl0_i2c2 {
-			fsl,pins = <PB05_MSCR_S32G PB05_I2C2_SCL_CFG
-				    PB06_MSCR_S32G PB06_I2C2_SDA_CFG
-				    >;
-		};
-
-		pinctrl0_i2c2_gpio: pinctrl0_i2c2_gpio {
-			fsl,pins = <PB05_MSCR_S32G PB05_I2C2_SCL_GPIO
-				    PB06_MSCR_S32G PB06_I2C2_SDA_GPIO
-				    >;
-		};
-
-		pinctrl0_i2c4: pinctrl0_i2c4 {
-			fsl,pins = <PC01_MSCR_S32G PC01_I2C4_SDA_CFG
-				    PC02_MSCR_S32G PC02_I2C4_SCL_CFG
-				    >;
-		};
-
-		pinctrl0_i2c4_gpio: pinctrl0_i2c4_gpio {
-			fsl,pins = <PC01_MSCR_S32G PC01_I2C4_SDA_GPIO
-				    PC02_MSCR_S32G PC02_I2C4_SCL_GPIO
-				    >;
-		};
-
-		pinctrl0_qspi: pinctrl0_qspi {
-			fsl,pins = <PF05_MSCR_S32G PF05_QSPI_DATA_A0_CFG
-				    PF06_MSCR_S32G PF06_QSPI_DATA_A1_CFG
-				    PF07_MSCR_S32G PF07_QSPI_DATA_A2_CFG
-				    PF08_MSCR_S32G PF08_QSPI_DATA_A3_CFG
-				    PF09_MSCR_S32G PF09_QSPI_DATA_A4_CFG
-				    PF10_MSCR_S32G PF10_QSPI_DATA_A5_CFG
-				    PF11_MSCR_S32G PF11_QSPI_DATA_A6_CFG
-				    PF12_MSCR_S32G PF12_QSPI_DATA_A7_CFG
-				    PF13_MSCR_S32G PF13_QSPI_DQS_A_CFG
-				    PG00_MSCR_S32G PG00_QSPI_CLK_A_CFG
-				    PG01_MSCR_S32G PG01_QSPI_CLK_A_b_CFG
-				    PG02_MSCR_S32G PG02_QSPI_CLK_2A_CFG
-				    PG03_MSCR_S32G PG03_QSPI_CLK_2A_b_CFG
-				    PG04_MSCR_S32G PG04_QSPI_CS_A0
-				    PG05_MSCR_S32G PG05_QSPI_CS_A1
-				    QSPI_DATA0_A_IMCR PF05_QSPI_DATA_A0_IN
-				    QSPI_DATA1_A_IMCR PF06_QSPI_DATA_A1_IN
-				    QSPI_DATA2_A_IMCR PF07_QSPI_DATA_A2_IN
-				    QSPI_DATA3_A_IMCR PF08_QSPI_DATA_A3_IN
-				    QSPI_DATA4_A_IMCR PF09_QSPI_DATA_A4_IN
-				    QSPI_DATA5_A_IMCR PF10_QSPI_DATA_A5_IN
-				    QSPI_DATA6_A_IMCR PF11_QSPI_DATA_A6_IN
-				    QSPI_DATA7_A_IMCR PF12_QSPI_DATA_A7_IN
-				    QSPI_DQS_A_IMCR PF13_DQS_A_IN
-				    >;
-		};
-
-		pinctrl0_sd0: pinctrl0_sd0 {
-			fsl,pins = <PC14_MSCR_S32G PC14_SD0_CLK_CFG
-				    PC15_MSCR_S32G PC15_SD0_CMD_CFG
-				    PD00_MSCR_S32G PD00_SD0_D0_CFG
-				    PD01_MSCR_S32G PD01_SD0_D1_CFG
-				    PD02_MSCR_S32G PD02_SD0_D2_CFG
-				    PD03_MSCR_S32G PD03_SD0_D3_CFG
-				    PD04_MSCR_S32G PD04_SD0_D4_CFG
-				    PD05_MSCR_S32G PD05_SD0_D5_CFG
-				    PD06_MSCR_S32G PD06_SD0_D6_CFG
-				    PD07_MSCR_S32G PD07_SD0_D7_CFG
-				    PD08_MSCR_S32G PD08_SD0_RST_CFG
-				    PD09_MSCR_S32G PD09_SD0_VSELECT_CFG
-				    PD10_MSCR_S32G PD10_SD0_DQS_CFG
-				    SD0_CMD_IMCR PC15_SD0_CMD_IN
-				    SD0_D0_IMCR PD00_SD0_D0_IN
-				    SD0_D1_IMCR PD01_SD0_D1_IN
-				    SD0_D2_IMCR PD02_SD0_D2_IN
-				    SD0_D3_IMCR PD03_SD0_D3_IN
-				    SD0_D4_IMCR PD04_SD0_D4_IN
-				    SD0_D5_IMCR PD05_SD0_D5_IN
-				    SD0_D6_IMCR PD06_SD0_D6_IN
-				    SD0_D7_IMCR PD07_SD0_D7_IN
-				    SD0_DQS_IMCR PD10_SD0_DQS_IN
-				    >;
-		};
-
-		pinctrl0_dspi1: pinctrl0_dspi1 {
-			fsl,pins = <PA06_MSCR_S32G PA06_SPI1_SOUT_CFG
-				    PA07_MSCR_S32G PA07_SPI1_CS0_CFG
-				    PA08_MSCR_S32G PA08_SPI1_SCK_CFG
-				    PF15_MSCR_S32G PF15_SPI1_SIN_CFG
-				    >;
-		};
-
-		pinctrl0_dspi5: pinctrl0_dspi5 {
-			fsl,pins = <PA09_MSCR_S32G PA09_SPI5_SCK_CFG
-				    PA10_MSCR_S32G PA10_SPI5_SIN_CFG
-				    PA11_MSCR_S32G PA11_SPI5_SOUT_CFG
-				    PA12_MSCR_S32G PA12_SPI5_CS0_CFG
-				    >;
-		};
-
-		pinctrl0_usb: pinctrl0_usb {
-			fsl,pins = <PD14_MSCR_S32G PD14_USB_DATA0_CFG
-				    PD15_MSCR_S32G PD15_USB_DATA1_CFG
-				    PE00_MSCR_S32G PE00_USB_DATA2_CFG
-				    PE01_MSCR_S32G PE01_USB_DATA3_CFG
-				    >;
-		};
-	};
-};
-
-&pinctrl1 {
-	board_pinctrl1 {
-		pinctrl1_i2c1: pinctrl1_i2c1 {
-			fsl,pins = <I2C1_SCL_IMCR PB03_I2C1_SCL_IN
-				    I2C1_SDA_IMCR PB04_I2C1_SDA_IN
-				    >;
-		};
-
-		pinctrl1_i2c1_gpio: pinctrl1_i2c1_gpio {
-			fsl,pins = <I2C1_SCL_IMCR IMCR_DISABLED
-				    I2C1_SDA_IMCR IMCR_DISABLED
-				    >;
-		};
-
-		pinctrl1_i2c2: pinctrl1_i2c2 {
-			fsl,pins = <I2C2_SCL_IMCR PB05_I2C2_SCL_IN
-				    I2C2_SDA_IMCR PB06_I2C2_SDA_IN
-				    >;
-		};
-
-		pinctrl1_i2c2_gpio: pinctrl1_i2c2_gpio {
-			fsl,pins = <I2C2_SCL_IMCR IMCR_DISABLED
-				    I2C2_SDA_IMCR IMCR_DISABLED
-				    >;
-		};
-
-		pinctrl1_i2c4: pinctrl1_i2c4 {
-			fsl,pins = <I2C4_SDA_IMCR PC01_I2C4_SDA_IN
-				    I2C4_SCL_IMCR PC02_I2C4_SCL_IN
-				    >;
-		};
-
-		pinctrl1_i2c4_gpio: pinctrl1_i2c4_gpio {
-			fsl,pins = <I2C4_SDA_IMCR IMCR_DISABLED
-				    I2C4_SCL_IMCR IMCR_DISABLED
-				    >;
-		};
-
-		pinctrl1_dspi1: pinctrl1_dspi1 {
-			fsl,pins = <DSPI1_SIN_IMCR PF15_SPI1_SIN_IN
-				    >;
-		};
-
-		pinctrl1_dspi5: pinctrl1_dspi5 {
-			fsl,pins = <DSPI5_SIN_IMCR PA10_SPI5_SIN_IN
-				    >;
-		};
-
-		pinctrl1_usb: pinctrl1_usb {
-			fsl,pins = <PH00_MSCR_S32G PH00_USB_DATA7_CFG
-				    PL08_MSCR_S32G PL08_USB_CLK_CFG
-				    PL09_MSCR_S32G PL09_USB_DIR_CFG
-				    PL10_MSCR_S32G PL10_USB_STP_CFG
-				    PL11_MSCR_S32G PL11_USB_NXT_CFG
-				    PL12_MSCR_S32G PL12_USB_DATA4_CFG
-				    PL13_MSCR_S32G PL13_USB_DATA5_CFG
-				    PL14_MSCR_S32G PL14_USB_DATA6_CFG
-				    USB_ULPI_CLK_IMCR PL08_USB_CLK_IN
-				    USB_ULPI_DATA0_IMCR PD14_USB_DATA0_IN
-				    USB_ULPI_DATA1_IMCR PD15_USB_DATA1_IN
-				    USB_ULPI_DATA2_IMCR PE00_USB_DATA2_IN
-				    USB_ULPI_DATA3_IMCR PE01_USB_DATA3_IN
-				    USB_ULPI_DATA4_IMCR PL12_USB_DATA4_IN
-				    USB_ULPI_DATA5_IMCR PL13_USB_DATA5_IN
-				    USB_ULPI_DATA6_IMCR PL14_USB_DATA6_IN
-				    USB_ULPI_DATA7_IMCR PH00_USB_DATA7_IN
-				    USB_ULPI_DIR_IMCR PL09_USB_DIR_IN
-				    USB_ULPI_NXT_IMCR PL11_USB_NXT_IN
-				    >;
-		};
-	};
-};
-
-&qspi {
-	pinctrl-0 = <&pinctrl0_qspi>;
-	pinctrl-names = "default";
-};
+#include "fsl-s32gxxxaevb.dtsi"
diff --git a/arch/arm/dts/fsl-s32g3xxaevb.dts b/arch/arm/dts/fsl-s32g3xxaevb.dts
new file mode 100644
index 0000000000..508d674176
--- /dev/null
+++ b/arch/arm/dts/fsl-s32g3xxaevb.dts
@@ -0,0 +1,7 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+/*
+ * Copyright 2021 NXP
+ */
+
+/dts-v1/;
+#include "fsl-s32gxxxaevb.dtsi"
diff --git a/arch/arm/dts/fsl-s32gxxxaevb.dtsi b/arch/arm/dts/fsl-s32gxxxaevb.dtsi
new file mode 100644
index 0000000000..10201eb20b
--- /dev/null
+++ b/arch/arm/dts/fsl-s32gxxxaevb.dtsi
@@ -0,0 +1,353 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+/*
+ * Copyright 2019-2021 NXP
+ */
+
+/dts-v1/;
+#include <dt-bindings/gpio/gpio.h>
+#include "fsl-s32g274a.dtsi"
+
+/ {
+	aliases {
+		usb0 = &usbotg;
+	};
+
+	usbotg: usb@44064000 {
+		compatible = "fsl,imx27-usb";
+		reg = <0x0 0x44064000 0x0 0x200>;
+		pinctrl-0 = <&pinctrl0_usb &pinctrl1_usb>;
+		pinctrl-names = "default";
+		phys = <&saf1508_phy>;
+	};
+
+	saf1508_phy: usb_phy@44064000 {
+		compatible = "nxp,saf1508bet";
+		reg = <0x0 0x44064000 0x0 0x200>;
+		#phy-cells = <0>;
+	};
+};
+
+&usdhc0 {
+	pinctrl-0 = <&pinctrl0_sd0>;
+	pinctrl-1 = <>;
+	pinctrl-2 = <>;
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	status = "okay";
+};
+
+&dspi1 {
+	pinctrl-0 = <&pinctrl0_dspi1 &pinctrl1_dspi1>;
+	pinctrl-names = "default";
+	status = "okay";
+};
+
+&dspi5 {
+	pinctrl-0 = <&pinctrl0_dspi5 &pinctrl1_dspi5>;
+	pinctrl-names = "default";
+	status = "okay";
+};
+
+&gmac0 {
+	status = "okay";
+	phy-mode = "rgmii";
+	phy-handle = <&mdio_c_phy4>;
+};
+
+&usbotg {
+	status = "okay";
+};
+
+&gmac0_mdio {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	/* ARQ107 on S32RGV-VNP-PLAT */
+	mdio_c_phy1: ethernet-phy@1 {
+		compatible = "ethernet-phy-ieee802.3-c45";
+		reg = <1>;
+	};
+	/* KSZ9031RNX on S32G-VNP-PROC */
+	mdio_c_phy4: ethernet-phy@4 {
+		reg = <4>;
+		max-speed = <1000>;
+	};
+	/* KSZ9031RNX on S32RGV-VNP-PLAT */
+	mdio_c_phy5: ethernet-phy@5 {
+		status = "disabled"; /* blocked by USB by default */
+		reg = <5>;
+		max-speed = <1000>;
+	};
+};
+
+&pfe {
+	status = "okay";
+};
+
+/* EEPROM */
+&i2c0 {
+	clock-frequency=<100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl0_i2c0>;
+	pinctrl-1 = <&pinctrl0_i2c0_gpio>;
+	scl-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+/* Platform board PCI X16 EXPRESS - I2C_SCL_S0, I2C_SDA_S0  */
+&i2c1 {
+	clock-frequency=<100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl0_i2c1 &pinctrl1_i2c1>;
+	pinctrl-1 = <&pinctrl0_i2c1_gpio &pinctrl1_i2c1_gpio>;
+	scl-gpios = <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+/* Platform board GPIO_J3-17 (SDA), GPIO_J3-19 (SCL0)  */
+&i2c2 {
+	clock-frequency=<100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl0_i2c2 &pinctrl1_i2c2>;
+	pinctrl-1 = <&pinctrl0_i2c2_gpio &pinctrl1_i2c2_gpio>;
+	scl-gpios = <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+/* PMIC */
+&i2c4 {
+	status = "okay";
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl0_i2c4 &pinctrl1_i2c4>;
+	pinctrl-1 = <&pinctrl0_i2c4_gpio &pinctrl1_i2c4_gpio>;
+	scl-gpios = <&gpio0 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio0 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	clock-frequency=<100000>;
+
+	vr5510 {
+		compatible = "fsl,vr5510";
+		reg = <0x20>;
+		status = "okay";
+	};
+
+	vr5510_fsu {
+		compatible = "fsl,vr5510";
+		reg = <0x21>;
+		status = "okay";
+	};
+
+};
+
+&pinctrl0 {
+	board_pinctrl0 {
+		pinctrl0_i2c0: pinctrl0_i2c0 {
+			fsl,pins = <PB00_MSCR_S32G PB00_I2C0_SDA_CFG
+				    PB01_MSCR_S32G PB01_I2C0_SCL_CFG
+				    I2C0_SDA_IMCR PB00_I2C0_SDA_IN
+				    I2C0_SCL_IMCR PB01_I2C0_SCL_IN
+				    >;
+		};
+
+		pinctrl0_i2c0_gpio: pinctrl0_i2c0_gpio {
+			fsl,pins = <PB00_MSCR_S32G PB00_I2C0_SDA_GPIO
+				    PB01_MSCR_S32G PB01_I2C0_SCL_GPIO
+				    I2C0_SDA_IMCR IMCR_DISABLED
+				    I2C0_SCL_IMCR IMCR_DISABLED
+				    >;
+		};
+
+		pinctrl0_i2c1: pinctrl0_i2c1 {
+			fsl,pins = <PB03_MSCR_S32G PB03_I2C1_SCL_CFG
+				    PB04_MSCR_S32G PB04_I2C1_SDA_CFG
+				    >;
+		};
+
+		pinctrl0_i2c1_gpio: pinctrl0_i2c1_gpio {
+			fsl,pins = <PB03_MSCR_S32G PB03_I2C1_SCL_GPIO
+				    PB04_MSCR_S32G PB04_I2C1_SDA_GPIO
+				    >;
+		};
+
+		pinctrl0_i2c2: pinctrl0_i2c2 {
+			fsl,pins = <PB05_MSCR_S32G PB05_I2C2_SCL_CFG
+				    PB06_MSCR_S32G PB06_I2C2_SDA_CFG
+				    >;
+		};
+
+		pinctrl0_i2c2_gpio: pinctrl0_i2c2_gpio {
+			fsl,pins = <PB05_MSCR_S32G PB05_I2C2_SCL_GPIO
+				    PB06_MSCR_S32G PB06_I2C2_SDA_GPIO
+				    >;
+		};
+
+		pinctrl0_i2c4: pinctrl0_i2c4 {
+			fsl,pins = <PC01_MSCR_S32G PC01_I2C4_SDA_CFG
+				    PC02_MSCR_S32G PC02_I2C4_SCL_CFG
+				    >;
+		};
+
+		pinctrl0_i2c4_gpio: pinctrl0_i2c4_gpio {
+			fsl,pins = <PC01_MSCR_S32G PC01_I2C4_SDA_GPIO
+				    PC02_MSCR_S32G PC02_I2C4_SCL_GPIO
+				    >;
+		};
+
+		pinctrl0_qspi: pinctrl0_qspi {
+			fsl,pins = <PF05_MSCR_S32G PF05_QSPI_DATA_A0_CFG
+				    PF06_MSCR_S32G PF06_QSPI_DATA_A1_CFG
+				    PF07_MSCR_S32G PF07_QSPI_DATA_A2_CFG
+				    PF08_MSCR_S32G PF08_QSPI_DATA_A3_CFG
+				    PF09_MSCR_S32G PF09_QSPI_DATA_A4_CFG
+				    PF10_MSCR_S32G PF10_QSPI_DATA_A5_CFG
+				    PF11_MSCR_S32G PF11_QSPI_DATA_A6_CFG
+				    PF12_MSCR_S32G PF12_QSPI_DATA_A7_CFG
+				    PF13_MSCR_S32G PF13_QSPI_DQS_A_CFG
+				    PG00_MSCR_S32G PG00_QSPI_CLK_A_CFG
+				    PG01_MSCR_S32G PG01_QSPI_CLK_A_b_CFG
+				    PG02_MSCR_S32G PG02_QSPI_CLK_2A_CFG
+				    PG03_MSCR_S32G PG03_QSPI_CLK_2A_b_CFG
+				    PG04_MSCR_S32G PG04_QSPI_CS_A0
+				    PG05_MSCR_S32G PG05_QSPI_CS_A1
+				    QSPI_DATA0_A_IMCR PF05_QSPI_DATA_A0_IN
+				    QSPI_DATA1_A_IMCR PF06_QSPI_DATA_A1_IN
+				    QSPI_DATA2_A_IMCR PF07_QSPI_DATA_A2_IN
+				    QSPI_DATA3_A_IMCR PF08_QSPI_DATA_A3_IN
+				    QSPI_DATA4_A_IMCR PF09_QSPI_DATA_A4_IN
+				    QSPI_DATA5_A_IMCR PF10_QSPI_DATA_A5_IN
+				    QSPI_DATA6_A_IMCR PF11_QSPI_DATA_A6_IN
+				    QSPI_DATA7_A_IMCR PF12_QSPI_DATA_A7_IN
+				    QSPI_DQS_A_IMCR PF13_DQS_A_IN
+				    >;
+		};
+
+		pinctrl0_sd0: pinctrl0_sd0 {
+			fsl,pins = <PC14_MSCR_S32G PC14_SD0_CLK_CFG
+				    PC15_MSCR_S32G PC15_SD0_CMD_CFG
+				    PD00_MSCR_S32G PD00_SD0_D0_CFG
+				    PD01_MSCR_S32G PD01_SD0_D1_CFG
+				    PD02_MSCR_S32G PD02_SD0_D2_CFG
+				    PD03_MSCR_S32G PD03_SD0_D3_CFG
+				    PD04_MSCR_S32G PD04_SD0_D4_CFG
+				    PD05_MSCR_S32G PD05_SD0_D5_CFG
+				    PD06_MSCR_S32G PD06_SD0_D6_CFG
+				    PD07_MSCR_S32G PD07_SD0_D7_CFG
+				    PD08_MSCR_S32G PD08_SD0_RST_CFG
+				    PD09_MSCR_S32G PD09_SD0_VSELECT_CFG
+				    PD10_MSCR_S32G PD10_SD0_DQS_CFG
+				    SD0_CMD_IMCR PC15_SD0_CMD_IN
+				    SD0_D0_IMCR PD00_SD0_D0_IN
+				    SD0_D1_IMCR PD01_SD0_D1_IN
+				    SD0_D2_IMCR PD02_SD0_D2_IN
+				    SD0_D3_IMCR PD03_SD0_D3_IN
+				    SD0_D4_IMCR PD04_SD0_D4_IN
+				    SD0_D5_IMCR PD05_SD0_D5_IN
+				    SD0_D6_IMCR PD06_SD0_D6_IN
+				    SD0_D7_IMCR PD07_SD0_D7_IN
+				    SD0_DQS_IMCR PD10_SD0_DQS_IN
+				    >;
+		};
+
+		pinctrl0_dspi1: pinctrl0_dspi1 {
+			fsl,pins = <PA06_MSCR_S32G PA06_SPI1_SOUT_CFG
+				    PA07_MSCR_S32G PA07_SPI1_CS0_CFG
+				    PA08_MSCR_S32G PA08_SPI1_SCK_CFG
+				    PF15_MSCR_S32G PF15_SPI1_SIN_CFG
+				    >;
+		};
+
+		pinctrl0_dspi5: pinctrl0_dspi5 {
+			fsl,pins = <PA09_MSCR_S32G PA09_SPI5_SCK_CFG
+				    PA10_MSCR_S32G PA10_SPI5_SIN_CFG
+				    PA11_MSCR_S32G PA11_SPI5_SOUT_CFG
+				    PA12_MSCR_S32G PA12_SPI5_CS0_CFG
+				    >;
+		};
+
+		pinctrl0_usb: pinctrl0_usb {
+			fsl,pins = <PD14_MSCR_S32G PD14_USB_DATA0_CFG
+				    PD15_MSCR_S32G PD15_USB_DATA1_CFG
+				    PE00_MSCR_S32G PE00_USB_DATA2_CFG
+				    PE01_MSCR_S32G PE01_USB_DATA3_CFG
+				    >;
+		};
+	};
+};
+
+&pinctrl1 {
+	board_pinctrl1 {
+		pinctrl1_i2c1: pinctrl1_i2c1 {
+			fsl,pins = <I2C1_SCL_IMCR PB03_I2C1_SCL_IN
+				    I2C1_SDA_IMCR PB04_I2C1_SDA_IN
+				    >;
+		};
+
+		pinctrl1_i2c1_gpio: pinctrl1_i2c1_gpio {
+			fsl,pins = <I2C1_SCL_IMCR IMCR_DISABLED
+				    I2C1_SDA_IMCR IMCR_DISABLED
+				    >;
+		};
+
+		pinctrl1_i2c2: pinctrl1_i2c2 {
+			fsl,pins = <I2C2_SCL_IMCR PB05_I2C2_SCL_IN
+				    I2C2_SDA_IMCR PB06_I2C2_SDA_IN
+				    >;
+		};
+
+		pinctrl1_i2c2_gpio: pinctrl1_i2c2_gpio {
+			fsl,pins = <I2C2_SCL_IMCR IMCR_DISABLED
+				    I2C2_SDA_IMCR IMCR_DISABLED
+				    >;
+		};
+
+		pinctrl1_i2c4: pinctrl1_i2c4 {
+			fsl,pins = <I2C4_SDA_IMCR PC01_I2C4_SDA_IN
+				    I2C4_SCL_IMCR PC02_I2C4_SCL_IN
+				    >;
+		};
+
+		pinctrl1_i2c4_gpio: pinctrl1_i2c4_gpio {
+			fsl,pins = <I2C4_SDA_IMCR IMCR_DISABLED
+				    I2C4_SCL_IMCR IMCR_DISABLED
+				    >;
+		};
+
+		pinctrl1_dspi1: pinctrl1_dspi1 {
+			fsl,pins = <DSPI1_SIN_IMCR PF15_SPI1_SIN_IN
+				    >;
+		};
+
+		pinctrl1_dspi5: pinctrl1_dspi5 {
+			fsl,pins = <DSPI5_SIN_IMCR PA10_SPI5_SIN_IN
+				    >;
+		};
+
+		pinctrl1_usb: pinctrl1_usb {
+			fsl,pins = <PH00_MSCR_S32G PH00_USB_DATA7_CFG
+				    PL08_MSCR_S32G PL08_USB_CLK_CFG
+				    PL09_MSCR_S32G PL09_USB_DIR_CFG
+				    PL10_MSCR_S32G PL10_USB_STP_CFG
+				    PL11_MSCR_S32G PL11_USB_NXT_CFG
+				    PL12_MSCR_S32G PL12_USB_DATA4_CFG
+				    PL13_MSCR_S32G PL13_USB_DATA5_CFG
+				    PL14_MSCR_S32G PL14_USB_DATA6_CFG
+				    USB_ULPI_CLK_IMCR PL08_USB_CLK_IN
+				    USB_ULPI_DATA0_IMCR PD14_USB_DATA0_IN
+				    USB_ULPI_DATA1_IMCR PD15_USB_DATA1_IN
+				    USB_ULPI_DATA2_IMCR PE00_USB_DATA2_IN
+				    USB_ULPI_DATA3_IMCR PE01_USB_DATA3_IN
+				    USB_ULPI_DATA4_IMCR PL12_USB_DATA4_IN
+				    USB_ULPI_DATA5_IMCR PL13_USB_DATA5_IN
+				    USB_ULPI_DATA6_IMCR PL14_USB_DATA6_IN
+				    USB_ULPI_DATA7_IMCR PH00_USB_DATA7_IN
+				    USB_ULPI_DIR_IMCR PL09_USB_DIR_IN
+				    USB_ULPI_NXT_IMCR PL11_USB_NXT_IN
+				    >;
+		};
+	};
+};
+
+&qspi {
+	pinctrl-0 = <&pinctrl0_qspi>;
+	pinctrl-names = "default";
+};
diff --git a/board/freescale/s32-gen1/Kconfig b/board/freescale/s32-gen1/Kconfig
index 7e0be7daab..2452bb7ea8 100644
--- a/board/freescale/s32-gen1/Kconfig
+++ b/board/freescale/s32-gen1/Kconfig
@@ -142,7 +142,7 @@ config S32GEN1_HWCONFIG
 	string "S32GEN1 HWConfig definition"
 	depends on S32_GEN1 && (PCIE_S32GEN1 || FSL_PFENG)
 	default "pcie0:mode=rc,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=2G5" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274ARDB
-	default "pcie0:mode=rc,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=0" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274AEVB
+	default "pcie0:mode=rc,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=0" if (PCIE_S32GEN1 && FSL_PFENG) &&  (TARGET_S32G274AEVB || TARGET_S32G3XXAEVB)
 	default "pcie0:mode=ep,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=0" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274ABLUEBOX3
 	default "pcie0:mode=sgmii;pcie1:mode=sgmii" if (!PCIE_S32GEN1 && FSL_PFENG)
 	default "pcie0:mode=rc,clock=ext;pcie1:mode=ep,clock=int" if (PCIE_S32GEN1 && !FSL_PFENG)
diff --git a/board/freescale/s32-gen1/Makefile b/board/freescale/s32-gen1/Makefile
index 71de05663b..fac9399d19 100644
--- a/board/freescale/s32-gen1/Makefile
+++ b/board/freescale/s32-gen1/Makefile
@@ -16,7 +16,8 @@ endif
 
 obj-$(CONFIG_NETDEVICES) += eth.o
 
-obj-$(CONFIG_TARGET_S32G274AEVB) += s32g274aevb.o
+obj-$(CONFIG_TARGET_S32G274AEVB) += s32gxxxaevb.o
+obj-$(CONFIG_TARGET_S32G3XXAEVB) += s32gxxxaevb.o
 obj-$(CONFIG_TARGET_S32G274ARDB) += s32g274ardb.o
 obj-$(CONFIG_TARGET_S32G274ASIM) += s32g274asim.o
 obj-$(CONFIG_TARGET_S32G274ABLUEBOX3) += s32g274abluebox3.o
@@ -31,7 +32,7 @@ ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 obj-$(CONFIG_SYS_FSL_DDRSS) += ddrss_regconf_emu.o ddrss_firmware_emu.o
 else
 
-ifneq ($(filter y,$(CONFIG_TARGET_S32G274ARDB) $(CONFIG_TARGET_S32G274AEVB) $(CONFIG_TARGET_S32G274ABLUEBOX3)),)
+ifneq ($(filter y,$(CONFIG_NXP_S32G2XX) $(CONFIG_NXP_S32G3XX)),)
 obj-$(CONFIG_SYS_FSL_DDRSS) +=	ddr_density.o \
 				ddr_init.o \
 				ddr_utils.o \
@@ -61,6 +62,8 @@ endif
 
 ifdef CONFIG_TARGET_S32G274AEVB
 obj-$(CONFIG_SJA1105) += sja1105_cfg_evb.o
+else ifdef CONFIG_TARGET_S32G3XXAEVB
+obj-$(CONFIG_SJA1105) += sja1105_cfg_rdb.o
 else ifdef CONFIG_TARGET_S32G274ARDB
 obj-$(CONFIG_SJA1105) += sja1105_cfg_rdb.o
 endif
diff --git a/board/freescale/s32-gen1/board_common.h b/board/freescale/s32-gen1/board_common.h
index 892f4390d7..558328eb35 100644
--- a/board/freescale/s32-gen1/board_common.h
+++ b/board/freescale/s32-gen1/board_common.h
@@ -16,7 +16,7 @@ void setup_iomux_uart(void);
 	void setup_iomux_dspi(void);
 #endif
 
-#if defined(CONFIG_NXP_S32G2XX) || defined(CONFIG_NXP_S32R45)
+#if defined(CONFIG_S32_GEN1)
 void setup_iomux_uart0_pc09_pc10(void);
 #endif
 
diff --git a/board/freescale/s32-gen1/common.c b/board/freescale/s32-gen1/common.c
index 45c673b51d..e6b3ec246c 100644
--- a/board/freescale/s32-gen1/common.c
+++ b/board/freescale/s32-gen1/common.c
@@ -59,6 +59,8 @@ int checkboard(void)
 	printf("Board:\tNXP %s-RDB\n", get_s32g2_deriv_name());
 #elif defined(CONFIG_TARGET_S32G274ABLUEBOX3)
 	puts("Board:\tNXP S32G274A BlueBox3\n");
+#elif defined(CONFIG_TARGET_S32G3XXAEVB)
+	puts("Board:\tNXP S32G399A-EVB\n");
 #elif defined(CONFIG_TARGET_S32G274ASIM)
 	puts("Board:\tVDK for NXP S32G274A VP\n");
 #elif defined(CONFIG_TARGET_S32G274AEMU)
diff --git a/board/freescale/s32-gen1/eth.c b/board/freescale/s32-gen1/eth.c
index 3991765631..ee24a6f7b6 100644
--- a/board/freescale/s32-gen1/eth.c
+++ b/board/freescale/s32-gen1/eth.c
@@ -153,8 +153,10 @@ static void ft_enet_pfe_emac_fixup(u32 idx, void *fdt)
 
 static void ft_enet_compatible_fixup(void *fdt, int nodeoff)
 {
+#ifndef CONFIG_NXP_S32G3XX
 	if (!is_s32gen1_soc_rev1())
 		return;
+#endif
 
 	fdt_setprop_string(fdt, nodeoff, "compatible",
 			   "fsl,s32g274a-pfeng-cut1.1");
@@ -162,10 +164,12 @@ static void ft_enet_compatible_fixup(void *fdt, int nodeoff)
 
 static void ft_enet_coherent_fixup(void *fdt, int nodeoff)
 {
+#ifndef CONFIG_NXP_S32G3XX
 	if (is_s32gen1_soc_rev1())
 		if (fdt_getprop(fdt, nodeoff, "dma-coherent", NULL))
 			if (fdt_delprop(fdt, nodeoff, "dma-coherent"))
 				pr_err("Failed to remove dma-coherent\n");
+#endif
 }
 
 static bool pfeng_drv_status_active(void)
diff --git a/board/freescale/s32-gen1/s32g274aevb.c b/board/freescale/s32-gen1/s32gxxxaevb.c
similarity index 100%
rename from board/freescale/s32-gen1/s32g274aevb.c
rename to board/freescale/s32-gen1/s32gxxxaevb.c
diff --git a/configs/s32g3xxaevb_defconfig b/configs/s32g3xxaevb_defconfig
new file mode 100644
index 0000000000..efbbba15d0
--- /dev/null
+++ b/configs/s32g3xxaevb_defconfig
@@ -0,0 +1,74 @@
+CONFIG_ARM=y
+CONFIG_ARCH_S32=y
+CONFIG_ENV_SIZE=0x2000
+CONFIG_ENV_OFFSET=0x1e0000
+CONFIG_NR_DRAM_BANKS=3
+CONFIG_TARGET_S32G3XXAEVB=y
+CONFIG_S32_LPDDR4=y
+CONFIG_DISTRO_DEFAULTS=y
+# CONFIG_SYS_MALLOC_F is not set
+CONFIG_TOOLS_DEBUG=y
+CONFIG_FIT=y
+CONFIG_SD_BOOT=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="root=/dev/ram rw earlycon"
+CONFIG_ARCH_EARLY_INIT_R=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_CMD_EEPROM=y
+CONFIG_CMD_MD5SUM=y
+CONFIG_MD5SUM_VERIFY=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DM=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_SPI=y
+CONFIG_CMD_PMIC=y
+CONFIG_CMD_SMC=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-s32g3xxaevb"
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_DM=y
+# CONFIG_DM_DEVICE_REMOVE is not set
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_MXC=y
+CONFIG_I2C_EEPROM=y
+CONFIG_SYS_EEPROM_SIZE=128
+CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS=10
+CONFIG_DM_MMC=y
+CONFIG_FSL_USDHC=y
+CONFIG_DM_SPI_FLASH=y
+# CONFIG_SPI_FLASH_BAR is not set
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_PHY_AQUANTIA=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_PHY_FIXED=y
+CONFIG_DM_ETH=y
+CONFIG_FSL_PFENG=y
+CONFIG_FSL_PFENG_EMAC_1_RGMII=y
+CONFIG_DWC_ETH_QOS_DEVICES=y
+CONFIG_DWC_ETH_QOS_S32CC=y
+CONFIG_E1000=y
+CONFIG_CMD_E1000=y
+CONFIG_RGMII=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCIE_S32GEN1=y
+CONFIG_PHY=y
+CONFIG_SAF1508BET_USB_PHY=y
+CONFIG_DM_PMIC=y
+CONFIG_DM_PMIC_VR5510=y
+CONFIG_FSL_LINFLEXUART=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_FSL_DSPI=y
+CONFIG_FSL_QSPI=y
+CONFIG_SJA1105=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_ULPI_VIEWPORT=y
+CONFIG_USB_ULPI=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/s32g3xxaevb_qspi_defconfig b/configs/s32g3xxaevb_qspi_defconfig
new file mode 100644
index 0000000000..bd01b09503
--- /dev/null
+++ b/configs/s32g3xxaevb_qspi_defconfig
@@ -0,0 +1,80 @@
+CONFIG_FLASH_BOOT=y
+CONFIG_ARM=y
+CONFIG_ARCH_S32=y
+CONFIG_ENV_SIZE=0x10000
+CONFIG_ENV_SECT_SIZE=0x10000
+CONFIG_ENV_OFFSET=0x1e0000
+CONFIG_NR_DRAM_BANKS=3
+CONFIG_TARGET_S32G3XXAEVB=y
+CONFIG_S32_LPDDR4=y
+CONFIG_DISTRO_DEFAULTS=y
+# CONFIG_SYS_MALLOC_F is not set
+CONFIG_TOOLS_DEBUG=y
+CONFIG_FIT=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="root=/dev/ram rw earlycon"
+CONFIG_ARCH_EARLY_INIT_R=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_CMD_EEPROM=y
+CONFIG_CMD_MD5SUM=y
+CONFIG_MD5SUM_VERIFY=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DM=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_SPI=y
+CONFIG_CMD_PMIC=y
+CONFIG_CMD_SMC=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-s32g3xxaevb"
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_USE_ENV_SPI_BUS=y
+CONFIG_ENV_SPI_BUS=6
+CONFIG_USE_ENV_SPI_CS=y
+CONFIG_ENV_SPI_CS=0
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_DM=y
+# CONFIG_DM_DEVICE_REMOVE is not set
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_MXC=y
+CONFIG_I2C_EEPROM=y
+CONFIG_SYS_EEPROM_SIZE=128
+CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS=10
+CONFIG_DM_MMC=y
+CONFIG_FSL_USDHC=y
+CONFIG_DM_SPI_FLASH=y
+# CONFIG_SPI_FLASH_BAR is not set
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_PHY_AQUANTIA=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_PHY_FIXED=y
+CONFIG_DM_ETH=y
+CONFIG_FSL_PFENG=y
+CONFIG_FSL_PFENG_EMAC_1_RGMII=y
+CONFIG_DWC_ETH_QOS_DEVICES=y
+CONFIG_DWC_ETH_QOS_S32CC=y
+CONFIG_E1000=y
+CONFIG_CMD_E1000=y
+CONFIG_RGMII=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCIE_S32GEN1=y
+CONFIG_PHY=y
+CONFIG_SAF1508BET_USB_PHY=y
+CONFIG_DM_PMIC=y
+CONFIG_DM_PMIC_VR5510=y
+CONFIG_FSL_LINFLEXUART=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_FSL_DSPI=y
+CONFIG_FSL_QSPI=y
+CONFIG_SJA1105=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_ULPI_VIEWPORT=y
+CONFIG_USB_ULPI=y
+# CONFIG_EFI_LOADER is not set
diff --git a/drivers/clk/s32/clk_dump/s32g398a_clk_names.c b/drivers/clk/s32/clk_dump/s32g398a_clk_names.c
index 2f32aa7d1b..dcb29630f5 100644
--- a/drivers/clk/s32/clk_dump/s32g398a_clk_names.c
+++ b/drivers/clk/s32/clk_dump/s32g398a_clk_names.c
@@ -3,6 +3,7 @@
  * Copyright 2021 NXP
  */
 #include <dt-bindings/clock/s32g-clock.h>
+#include <dt-bindings/clock/s32g3-clock.h>
 #include <linux/kernel.h>
 #include <s32g_clk_dump.h>
 
diff --git a/drivers/net/Kconfig b/drivers/net/Kconfig
index eb1d1aa0f0..61ce117af7 100644
--- a/drivers/net/Kconfig
+++ b/drivers/net/Kconfig
@@ -120,7 +120,7 @@ config FSL_PFENG_FW_PART
 
 config FSL_PFENG_EMAC_0_RGMII
 	bool "Allow RGMII on PFE EMAC_0"
-	depends on TARGET_S32G274AEVB || TARGET_S32G274ARDB
+	depends on TARGET_S32G274AEVB || TARGET_S32G274ARDB || TARGET_S32G3XXAEVB
 	default n
 	help
 	  PFE EMAC_0 and EMAC_2 share RGMII interface on S32G-VNP-PROC
@@ -129,7 +129,7 @@ config FSL_PFENG_EMAC_0_RGMII
 
 config FSL_PFENG_EMAC_1_RGMII
 	bool "Allow RGMII on PFE EMAC 1"
-	depends on TARGET_S32G274AEVB || TARGET_S32G274ARDB
+	depends on TARGET_S32G274AEVB || TARGET_S32G274ARDB || TARGET_S32G3XXAEVB
 	default n
 	help
 	  PFE EMAC_1 and GMAC share RGMII interface on S32G-VNP-PROC
diff --git a/drivers/net/dwc_eth_qos_s32cc.c b/drivers/net/dwc_eth_qos_s32cc.c
index 1b712fb7ea..6caab20609 100644
--- a/drivers/net/dwc_eth_qos_s32cc.c
+++ b/drivers/net/dwc_eth_qos_s32cc.c
@@ -257,6 +257,7 @@ static int check_sgmii_cfg(int gmac_no)
 	enum serdes_xpcs_mode mode, desired_mode1, desired_mode2;
 
 #if defined(CONFIG_TARGET_S32G274AEVB) || \
+	defined(CONFIG_TARGET_S32G3XXAEVB) || \
 	defined(CONFIG_TARGET_S32G274ARDB) || \
 	defined(CONFIG_TARGET_S32G274ASIM) || \
 	defined(CONFIG_TARGET_S32G274ASIM) || \
diff --git a/drivers/net/pfeng/pfeng_cmd.c b/drivers/net/pfeng/pfeng_cmd.c
index a34164ef0a..3c66b2fc4e 100644
--- a/drivers/net/pfeng/pfeng_cmd.c
+++ b/drivers/net/pfeng/pfeng_cmd.c
@@ -28,7 +28,8 @@
 #include "pfeng.h"
 
 static u32 emac_intf[PFENG_EMACS_COUNT] = {
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+	CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 	PHY_INTERFACE_MODE_SGMII, /* ARQ107 on PROC board */
 	PHY_INTERFACE_MODE_RGMII, /* KSZ9031 on PROC board */
 	PHY_INTERFACE_MODE_RGMII  /* SJA1105 on PLAT board */
@@ -269,7 +270,9 @@ static void set_pfe_mac0_clk(int intf0, struct udevice *pfe_dev)
 		tx = "mac0_tx_sgmii";
 		break;
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if CONFIG_IS_ENABLED(FSL_PFENG_EMAC_0_RGMII)
 		rx = "mac0_rx_rgmii";
 		tx = "mac0_tx_rgmii";
@@ -309,7 +312,9 @@ static void set_pfe_mac1_clk(int intf1, struct udevice *pfe_dev)
 		tx = "mac1_tx_sgmii";
 		break;
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if CONFIG_IS_ENABLED(FSL_PFENG_EMAC_1_RGMII)
 		rx = "mac1_rx_rgmii";
 		tx = "mac1_tx_rgmii";
@@ -351,7 +356,9 @@ static void set_pfe_mac2_clk(int intf2, struct udevice *pfe_dev)
 		tx = "mac2_tx_sgmii";
 		break;
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if !CONFIG_IS_ENABLED(FSL_PFENG_EMAC_0_RGMII)
 		rx = "mac2_rx_rgmii";
 		tx = "mac2_tx_rgmii";
@@ -437,7 +444,9 @@ static void setup_iomux_pfe(struct udevice *dev,
 		break;
 
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if CONFIG_IS_ENABLED(FSL_PFENG_EMAC_0_RGMII)
 		pinctrl_select_state(dev, "pfe0_rgmii");
 #endif
@@ -464,7 +473,9 @@ static void setup_iomux_pfe(struct udevice *dev,
 		break;
 
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if CONFIG_IS_ENABLED(FSL_PFENG_EMAC_1_RGMII)
 		pinctrl_select_state(dev, "pfe1_rgmii");
 #endif
@@ -491,7 +502,9 @@ static void setup_iomux_pfe(struct udevice *dev,
 		break;
 
 	case PHY_INTERFACE_MODE_RGMII:
-#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || CONFIG_IS_ENABLED(TARGET_S32G274ARDB)
+#if CONFIG_IS_ENABLED(TARGET_S32G274AEVB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G274ARDB) || \
+		CONFIG_IS_ENABLED(TARGET_S32G3XXAEVB)
 #if !CONFIG_IS_ENABLED(FSL_PFENG_EMAC_0_RGMII)
 		pinctrl_select_state(dev, "pfe2_rgmii");
 #endif
diff --git a/drivers/pci/Kconfig b/drivers/pci/Kconfig
index edfb3a076b..6873e06c0c 100644
--- a/drivers/pci/Kconfig
+++ b/drivers/pci/Kconfig
@@ -170,7 +170,7 @@ config FSL_PCIE_EP_COMPAT
 config PCIE_S32GEN1
 	bool "S32GEN1 PCIe support"
 	depends on DM_PCI
-	depends on (NXP_S32G2XX || NXP_S32R45)
+	depends on (NXP_S32G2XX || NXP_S32R45 || NXP_S32G3XX)
 	depends on (!TARGET_TYPE_S32GEN1_SIMULATOR)
 	select DM_PCI_COMPAT
 	select OF_EMBED
diff --git a/drivers/usb/host/ehci-mx6.c b/drivers/usb/host/ehci-mx6.c
index 13bfe545f4..39ac119b7e 100644
--- a/drivers/usb/host/ehci-mx6.c
+++ b/drivers/usb/host/ehci-mx6.c
@@ -2,7 +2,7 @@
 /*
  * Copyright (c) 2009 Daniel Mack <daniel@caiaq.de>
  * Copyright (C) 2010 Freescale Semiconductor, Inc.
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #include <common.h>
@@ -145,13 +145,14 @@ static void usb_power_config(int index)
 }
 #endif
 
-#if defined(CONFIG_MX6) || defined(CONFIG_NXP_S32G2XX)
+#if defined(CONFIG_MX6) || defined(CONFIG_NXP_S32G2XX) || \
+	defined(CONFIG_NXP_S32G3XX)
 /* Return 0 : host node, <>0 : device mode */
 static int usb_phy_enable(int index, struct usb_ehci *ehci)
 {
 	int ret;
 	void __iomem *usb_cmd;
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 	void __iomem *phy_reg;
 	void __iomem *phy_ctrl;
 
@@ -174,7 +175,7 @@ static int usb_phy_enable(int index, struct usb_ehci *ehci)
 	if (ret)
 		return ret;
 
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 	/* Reset USBPHY module */
 	setbits_le32(phy_ctrl, USBPHY_CTRL_SFTRST);
 	udelay(10);
@@ -276,7 +277,7 @@ int usb_phy_mode(int port)
 
 static void usb_oc_config(int index)
 {
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 #if defined(CONFIG_MX6)
 	struct usbnc_regs *usbnc = (struct usbnc_regs *)(USB_BASE_ADDR +
 			USB_OTHERREGS_OFFSET);
@@ -353,7 +354,7 @@ int __weak board_ehci_power(int port, int on)
 
 int ehci_mx6_common_init(struct usb_ehci *ehci, int index)
 {
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 	int ret;
 
 	enable_usboh3_clk(1);
@@ -372,7 +373,8 @@ int ehci_mx6_common_init(struct usb_ehci *ehci, int index)
 	usb_internal_phy_clock_gate(index, 1);
 #endif
 
-#if defined(CONFIG_MX6) || defined(CONFIG_NXP_S32G2XX)
+#if defined(CONFIG_MX6) || defined(CONFIG_NXP_S32G2XX) || \
+	defined(CONFIG_NXP_S32G3XX)
 	usb_phy_enable(index, ehci);
 #endif
 
@@ -478,7 +480,7 @@ static const struct ehci_ops mx6_ehci_ops = {
 
 static int ehci_usb_phy_mode(struct udevice *dev)
 {
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 	struct usb_platdata *plat = dev_get_platdata(dev);
 	void *__iomem addr = (void *__iomem)devfdt_get_addr(dev);
 	void *__iomem phy_ctrl, *__iomem phy_status;
@@ -550,7 +552,7 @@ static int ehci_usb_ofdata_to_platdata(struct udevice *dev)
 
 static int ehci_usb_bind(struct udevice *dev)
 {
-#ifndef CONFIG_NXP_S32G2XX
+#if !defined(CONFIG_NXP_S32G2XX) && !defined(CONFIG_NXP_S32G3XX)
 	/*
 	 * TODO:
 	 * This driver is only partly converted to DT probing and still uses
diff --git a/include/configs/s32-gen1.h b/include/configs/s32-gen1.h
index b70ef6363c..a760bd7cee 100644
--- a/include/configs/s32-gen1.h
+++ b/include/configs/s32-gen1.h
@@ -12,6 +12,8 @@
 #ifndef __S32_GEN1_H
 #define __S32_GEN1_H
 
+#include <linux/sizes.h>
+
 #define CONFIG_SYS_FSL_DRAM_BASE1       0x80000000
 #ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 #define CONFIG_SYS_FSL_DRAM_SIZE1       0x40000000
@@ -55,23 +57,6 @@
 #define CONFIG_FEC_MXC_PHYADDR  7
 #endif
 
-#if defined(CONFIG_TARGET_S32G274AEVB)
-#define FDT_FILE fsl-s32g274a-evb.dtb
-
-#elif defined(CONFIG_TARGET_S32G274ARDB)
-#ifdef CONFIG_S32G274ARDB
-#define FDT_FILE fsl-s32g274a-rdb.dtb
-#else
-#define FDT_FILE fsl-s32g274a-rdb2.dtb
-#endif /* CONFIG_TARGET_S32G274ARDB */
-
-#elif defined(CONFIG_TARGET_S32G274ABLUEBOX3)
-#define FDT_FILE fsl-s32g274a-bluebox3.dtb
-
-#elif defined(CONFIG_TARGET_S32R45EVB)
-#define FDT_FILE fsl-s32r45-evb.dtb
-#endif
-
 #define CONFIG_LOADADDR		LOADADDR
 
 #ifdef CONFIG_CMD_IRQ
@@ -145,4 +130,18 @@
 #define SDHC_REDUCED_MAP
 #endif
 
+#if !defined(CONFIG_PRAM) && defined(CONFIG_S32_ATF_BOOT_FLOW)
+
+/* 24 MB covering the following:
+ *  - 22 MB for optee_os + shared memory between optee_os and linux kernel
+ *  - 2 MB for the Secure Monitor
+ */
+#define CONFIG_PRAM	24576	/* 24MB */
+
+#ifndef __ASSEMBLY__
+_Static_assert(CONFIG_PRAM * SZ_1K + INITRD_HIGH == INITRD_HIGH_DEFAULT,
+	       "Please adjust INITRD_HIGH when booting with TF-A");
+#endif
+
+#endif
 #endif
diff --git a/include/configs/s32.h b/include/configs/s32.h
index 866ec7c6e9..9d7705e6f6 100644
--- a/include/configs/s32.h
+++ b/include/configs/s32.h
@@ -310,7 +310,7 @@
 
 #ifdef CONFIG_FSL_PFENG
 #define PFENG_EXTRA_BOOT_ARGS " nohz=off coherent_pool=64M "
-#ifdef CONFIG_TARGET_S32G274AEVB
+#if defined(CONFIG_TARGET_S32G274AEVB) || defined(CONFIG_TARGET_S32G3XXAEVB)
 #define PFENG_MODE "enable,none,rgmii,rgmii"
 #define PFENG_EMAC "1"
 #endif
diff --git a/include/configs/s32g274a.h b/include/configs/s32g274a.h
index cd3f246321..5d4ce2c5e9 100644
--- a/include/configs/s32g274a.h
+++ b/include/configs/s32g274a.h
@@ -18,26 +18,25 @@
 #endif
 
 #include <configs/s32-gen1.h>
-#include <linux/sizes.h>
 
-#if !defined(CONFIG_PRAM) && defined(CONFIG_S32_ATF_BOOT_FLOW)
+#if defined(CONFIG_TARGET_S32G274AEVB)
+#define FDT_FILE fsl-s32g274a-evb.dtb
 
-/* 24 MB covering the following:
- *  - 22 MB for optee_os + shared memory between optee_os and linux kernel
- *  - 2 MB for the Secure Monitor
- */
-#define CONFIG_PRAM	24576	/* 24MB */
-
-#ifndef __ASSEMBLY__
-_Static_assert(CONFIG_PRAM * SZ_1K + INITRD_HIGH == INITRD_HIGH_DEFAULT,
-	       "Please adjust INITRD_HIGH when booting with TF-A");
+#if defined(CONFIG_USB)
+#define CONFIG_USB_EHCI_MX6
+#define CONFIG_MXC_USB_PORTSC        PORT_PTS_ULPI
 #endif
 
-#endif
+#elif defined(CONFIG_TARGET_S32G274ARDB)
+#ifdef CONFIG_S32G274ARDB
+#define FDT_FILE fsl-s32g274a-rdb.dtb
+#else
+#define FDT_FILE fsl-s32g274a-rdb2.dtb
+#endif /* CONFIG_TARGET_S32G274ARDB */
 
-#if defined(CONFIG_TARGET_S32G274AEVB) && defined(CONFIG_USB)
-#define CONFIG_USB_EHCI_MX6
-#define CONFIG_MXC_USB_PORTSC        PORT_PTS_ULPI
+#elif defined(CONFIG_TARGET_S32G274ABLUEBOX3)
+#define FDT_FILE fsl-s32g274a-bluebox3.dtb
 #endif
 
+
 #endif
diff --git a/include/configs/s32g398a.h b/include/configs/s32g398a.h
index 7813745b10..468d9d39e8 100644
--- a/include/configs/s32g398a.h
+++ b/include/configs/s32g398a.h
@@ -12,13 +12,14 @@
 
 #include <configs/s32-gen1.h>
 
-#if !defined(CONFIG_PRAM) && !defined(CONFIG_S32_SKIP_RELOC)
+#if defined(CONFIG_TARGET_S32G3XXAEVB)
+#define FDT_FILE			fsl-s32g3xxaevb.dtb
 
-/* 24 MB covering the following:
- *  - 22 MB for optee_os + shared memory between optee_os and linux kernel
- *  - 2 MB for the Secure Monitor
- */
-#define CONFIG_PRAM	24576	/* 24MB */
+#if defined(CONFIG_USB)
+#define CONFIG_USB_EHCI_MX6
+#define CONFIG_MXC_USB_PORTSC		PORT_PTS_ULPI
 #endif
 
+#endif /* CONFIG_TARGET_S32G3XXAEVB */
+
 #endif
diff --git a/include/configs/s32r45.h b/include/configs/s32r45.h
index 8377475467..4e958b888a 100644
--- a/include/configs/s32r45.h
+++ b/include/configs/s32r45.h
@@ -18,4 +18,8 @@
 
 #include <configs/s32-gen1.h>
 
+#if defined(CONFIG_TARGET_S32R45EVB)
+#define FDT_FILE fsl-s32r45-evb.dtb
+#endif
+
 #endif
-- 
2.17.1

