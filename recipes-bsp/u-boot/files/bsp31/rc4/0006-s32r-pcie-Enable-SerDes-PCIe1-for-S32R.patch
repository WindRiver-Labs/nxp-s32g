From b8055e24bd10172a5416f4f811d707de98fdaf96 Mon Sep 17 00:00:00 2001
From: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Date: Thu, 7 Oct 2021 00:51:56 +0300
Subject: [PATCH 06/11] s32r: pcie: Enable SerDes/PCIe1 for S32R

Issue: ALB-6475

Upstream-Status: Pending 

Signed-off-by: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/dts/fsl-s32r45.dts                   | 52 +++++++++++++++++++
 drivers/clk/s32/clk_dump/s32r45_clk_names.c   |  6 +--
 drivers/clk/s32/include/s32gen1_shared_clks.h |  4 +-
 drivers/clk/s32/s32g_clk.c                    | 21 ++++----
 drivers/clk/s32/s32gen1_clk.c                 | 19 +++----
 drivers/clk/s32/s32r45_clk.c                  |  8 +--
 include/dt-bindings/clock/s32g-clock.h        |  2 +-
 include/dt-bindings/clock/s32r45-clock.h      |  6 +--
 8 files changed, 85 insertions(+), 33 deletions(-)

diff --git a/arch/arm/dts/fsl-s32r45.dts b/arch/arm/dts/fsl-s32r45.dts
index ffb2c14e75..4f52aa8027 100644
--- a/arch/arm/dts/fsl-s32r45.dts
+++ b/arch/arm/dts/fsl-s32r45.dts
@@ -106,6 +106,58 @@
 			status = "okay";
 		};
 	};
+
+	serdes1: serdes@44180000 {
+		compatible = "fsl,s32gen1-serdes";
+		reg = <0x00 0x44100000 0x0 0x80000   /* dbi registers */
+		       0x00 0x44180000 0x0 0x04000>; /* serdes registers */
+		reg-names = "dbi", "ss";
+		#address-cells = <3>;
+		#size-cells = <2>;
+		device_type = "pci-generic";
+		device_id = <1>;
+		num-lanes = <1>; /* supports 1 lane */
+		clocks = <&clks S32GEN1_SCMI_CLK_SERDES_REF>;
+
+		assigned-clocks =
+			<&clks S32R45_CLK_SERDES1_LANE0_TX>,
+			<&clks S32R45_CLK_SERDES1_LANE0_CDR>;
+
+		assigned-clock-parents =
+			<&serdes1_lane0_ext_tx 0>,
+			<&serdes1_lane0_ext_cdr 0>;
+
+		status = "okay";
+	};
+
+	pcie1: pcie@44100000 {
+		compatible = "fsl,s32gen1-pcie";
+		reg =
+			<0x00 0x44100000 0x0 0x80000   /* dbi registers */
+			/* configuration space, 4KB each for cfg0 and cfg1
+			 * at the end of the outbound memory map
+			 */
+			0x4f 0xffffe000 0x0 0x00002000>;
+		reg-names = "dbi", "config";
+		#address-cells = <3>;
+		#size-cells = <2>;
+		device_type = "pci";
+		serdes-handle = <&serdes1>;
+		device_id = <1>;
+		num-lanes = <1>; /* supports max 1 pcie lane */
+		link-speed = <3>; /* supports Gen3 speed */
+		bus-range = <0x0 0xff>;
+		ranges =
+			/* downstream I/O, 64KB and aligned naturally just before
+			 * the config space to minimize fragmentation
+			 */
+			<0x81000000 0x0 0x00000000 0x4f 0xfffe0000 0x0 0x00010000
+			/* non-prefetchable memory, with best case size
+			 * and alignment
+			 */
+			 0x82000000 0x0 0x00000000 0x48 0x00000000 0x7 0xfffe0000>;
+		status = "okay";
+	};
 };
 
 &serdes0 {
diff --git a/drivers/clk/s32/clk_dump/s32r45_clk_names.c b/drivers/clk/s32/clk_dump/s32r45_clk_names.c
index 4226834a19..433bbc1cb6 100644
--- a/drivers/clk/s32/clk_dump/s32r45_clk_names.c
+++ b/drivers/clk/s32/clk_dump/s32r45_clk_names.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #include <dt-bindings/clock/s32r45-clock.h>
 #include <linux/kernel.h>
@@ -20,8 +20,8 @@ static struct s32gen1_clk_blk s32r45_clk_blks[] = {
 	CLK_NAME(S32R45_CLK_GMAC1_EXT_TX),
 	CLK_NAME(S32R45_CLK_GMAC1_EXT_RX),
 	CLK_NAME(S32R45_CLK_GMAC1_EXT_REF),
-	CLK_NAME(S32R45_CLK_SERDES1_LANE1_TX),
-	CLK_NAME(S32R45_CLK_SERDES1_LANE1_CDR),
+	CLK_NAME(S32R45_CLK_SERDES1_LANE0_TX),
+	CLK_NAME(S32R45_CLK_SERDES1_LANE0_CDR),
 	CLK_NAME(S32R45_CLK_GMAC1_REF_DIV),
 	CLK_NAME(S32R45_CLK_MC_CGM2_MUX0),
 	CLK_NAME(S32R45_CLK_ACCEL3),
diff --git a/drivers/clk/s32/include/s32gen1_shared_clks.h b/drivers/clk/s32/include/s32gen1_shared_clks.h
index 6cda1b40d1..222916caa7 100644
--- a/drivers/clk/s32/include/s32gen1_shared_clks.h
+++ b/drivers/clk/s32/include/s32gen1_shared_clks.h
@@ -10,8 +10,8 @@ extern struct s32gen1_clk xbar_2x_clk;
 extern struct s32gen1_cgm_div per_div;
 extern struct s32gen1_clk cgm0_mux0_clk;
 extern struct s32gen1_dfs armdfs;
-extern struct s32gen1_clk serdes1_lane1_tx_clk;
-extern struct s32gen1_clk serdes1_lane1_cdr_clk;
+extern struct s32gen1_clk serdes1_lane0_tx_clk;
+extern struct s32gen1_clk serdes1_lane0_cdr_clk;
 extern struct s32gen1_clk accel_pll_phi0_clk;
 extern struct s32gen1_clk accel_pll_phi1_clk;
 extern const struct siul2_freq_mapping siul2_clk_freq_map[];
diff --git a/drivers/clk/s32/s32g_clk.c b/drivers/clk/s32/s32g_clk.c
index c5ecb7b6e6..8eba3a53f9 100644
--- a/drivers/clk/s32/s32g_clk.c
+++ b/drivers/clk/s32/s32g_clk.c
@@ -34,11 +34,6 @@ static struct s32gen1_fixed_clock pfe_mac0_ext_ref =
 static struct s32gen1_clk pfe_mac0_ext_ref_clk =
 		S32GEN1_MODULE_CLK(pfe_mac0_ext_ref);
 
-static struct s32gen1_fixed_clock serdes1_lane0_ext_tx =
-		S32GEN1_FIXED_CLK_INIT();
-static struct s32gen1_clk serdes1_lane0_ext_tx_clk =
-		S32GEN1_MODULE_CLK(serdes1_lane0_ext_tx);
-
 static struct s32gen1_mux cgm2_mux1 =
 		S32GEN1_MUX_INIT(S32GEN1_CGM2, 1, 5,
 				 S32GEN1_CLK_FIRC,
@@ -72,11 +67,6 @@ static struct s32gen1_clk pfe_mac0_ref_div_clk =
 		S32GEN1_FREQ_MODULE_CLK(pfe0_ref_block, 0, 50 * MHZ);
 
 /* PFE_MAC0_RX */
-static struct s32gen1_fixed_clock serdes1_lane0_cdr =
-		S32GEN1_FIXED_CLK_INIT();
-static struct s32gen1_clk serdes1_lane0_cdr_clk =
-		S32GEN1_MODULE_CLK(serdes1_lane0_cdr);
-
 static struct s32gen1_fixed_clock pfe_mac0_ext_rx =
 		S32GEN1_FIXED_CLK_INIT();
 static struct s32gen1_clk pfe_mac0_ext_rx_clk =
@@ -97,6 +87,10 @@ static struct s32gen1_clk pfe_mac0_rx_clk =
 		S32GEN1_FREQ_MODULE_CLK(pfe0_rx_block, 2500000, 312500000);
 
 /* PFE_MAC1_TX */
+static struct s32gen1_fixed_clock serdes1_lane1_tx =
+		S32GEN1_FIXED_CLK_INIT();
+struct s32gen1_clk serdes1_lane1_tx_clk =
+		S32GEN1_MODULE_CLK(serdes1_lane1_tx);
 static struct s32gen1_fixed_clock pfe_mac1_ext_tx =
 		S32GEN1_FIXED_CLK_INIT();
 static struct s32gen1_clk pfe_mac1_ext_tx_clk =
@@ -140,6 +134,11 @@ static struct s32gen1_clk pfe_mac1_ref_div_clk =
 		S32GEN1_FREQ_MODULE_CLK(pfe1_ref_block, 0, 50 * MHZ);
 
 /* PFE_MAC1_RX */
+static struct s32gen1_fixed_clock serdes1_lane1_cdr =
+		S32GEN1_FIXED_CLK_INIT();
+struct s32gen1_clk serdes1_lane1_cdr_clk =
+		S32GEN1_MODULE_CLK(serdes1_lane1_cdr);
+
 static struct s32gen1_fixed_clock pfe_mac1_ext_rx =
 		S32GEN1_FIXED_CLK_INIT();
 static struct s32gen1_clk pfe_mac1_ext_rx_clk =
@@ -291,7 +290,7 @@ static struct s32gen1_clk *s32g_cc_clocks[] = {
 	[CC_ARR_CLK(S32G_CLK_PFE_MAC2_EXT_TX)] = &pfe_mac2_ext_tx_clk,
 	[CC_ARR_CLK(S32G_CLK_PFE_MAC2_EXT_RX)] = &pfe_mac2_ext_rx_clk,
 	[CC_ARR_CLK(S32G_CLK_PFE_MAC2_EXT_REF)] = &pfe_mac2_ext_ref_clk,
-	[CC_ARR_CLK(S32G_CLK_SERDES1_LANE0_TX)] = &serdes1_lane0_ext_tx_clk,
+	[CC_ARR_CLK(S32G_CLK_SERDES1_LANE0_TX)] = &serdes1_lane0_tx_clk,
 	[CC_ARR_CLK(S32G_CLK_SERDES1_LANE0_CDR)] = &serdes1_lane0_cdr_clk,
 	[CC_ARR_CLK(S32G_CLK_PFE_MAC0_REF_DIV)] = &pfe_mac0_ref_div_clk,
 	[CC_ARR_CLK(S32G_CLK_PFE_MAC1_REF_DIV)] = &pfe_mac1_ref_div_clk,
diff --git a/drivers/clk/s32/s32gen1_clk.c b/drivers/clk/s32/s32gen1_clk.c
index 652dd6a2d9..74f5d1f73a 100644
--- a/drivers/clk/s32/s32gen1_clk.c
+++ b/drivers/clk/s32/s32gen1_clk.c
@@ -17,15 +17,6 @@ static struct s32gen1_osc firc =
 static struct s32gen1_osc sirc =
 		S32GEN1_OSC_INIT(S32GEN1_SIRC);
 
-static struct s32gen1_fixed_clock serdes1_lane1_tx =
-		S32GEN1_FIXED_CLK_INIT();
-struct s32gen1_clk serdes1_lane1_tx_clk =
-		S32GEN1_MODULE_CLK(serdes1_lane1_tx);
-static struct s32gen1_fixed_clock serdes1_lane1_cdr =
-		S32GEN1_FIXED_CLK_INIT();
-struct s32gen1_clk serdes1_lane1_cdr_clk =
-		S32GEN1_MODULE_CLK(serdes1_lane1_cdr);
-
 /* Muxes */
 static struct s32gen1_mux arm_pll_mux =
 	S32GEN1_MUX_INIT(S32GEN1_ARM_PLL, 0, 2,
@@ -332,6 +323,16 @@ static struct s32gen1_fixed_clock serdes0_lane0_cdr =
 static struct s32gen1_clk serdes0_lane0_cdr_clk =
 		S32GEN1_MODULE_CLK(serdes0_lane0_cdr);
 
+/* S32GEN1_CLK_SERDES1_LANE0_TX */
+static struct s32gen1_fixed_clock serdes1_lane0_tx =
+		S32GEN1_FIXED_CLK_INIT();
+struct s32gen1_clk serdes1_lane0_tx_clk =
+		S32GEN1_MODULE_CLK(serdes1_lane0_tx);
+static struct s32gen1_fixed_clock serdes1_lane0_cdr =
+		S32GEN1_FIXED_CLK_INIT();
+struct s32gen1_clk serdes1_lane0_cdr_clk =
+		S32GEN1_MODULE_CLK(serdes1_lane0_cdr);
+
 /* SPI_CLK */
 static struct s32gen1_mux cgm0_mux16 =
 		S32GEN1_MUX_INIT(S32GEN1_CGM0, 16, 2,
diff --git a/drivers/clk/s32/s32r45_clk.c b/drivers/clk/s32/s32r45_clk.c
index b2645bfe0e..51f69ab9c6 100644
--- a/drivers/clk/s32/s32r45_clk.c
+++ b/drivers/clk/s32/s32r45_clk.c
@@ -192,7 +192,7 @@ static struct s32gen1_mux cgm2_mux2 =
 				 S32GEN1_CLK_PERIPH_PLL_PHI5,
 				 S32R45_CLK_GMAC1_EXT_TX,
 				 S32R45_CLK_GMAC1_EXT_REF,
-				 S32R45_CLK_SERDES1_LANE1_TX);
+				 S32R45_CLK_SERDES1_LANE0_TX);
 static struct s32gen1_clk cgm2_mux2_clk =
 		S32GEN1_MODULE_CLK(cgm2_mux2);
 static struct s32gen1_cgm_div cgm2_mux2_div =
@@ -218,7 +218,7 @@ static struct s32gen1_mux cgm2_mux4 =
 				 S32GEN1_CLK_FIRC,
 				 S32R45_CLK_GMAC1_REF_DIV,
 				 S32R45_CLK_GMAC1_EXT_RX,
-				 S32R45_CLK_SERDES1_LANE1_CDR);
+				 S32R45_CLK_SERDES1_LANE0_CDR);
 static struct s32gen1_clk cgm2_mux4_clk =
 		S32GEN1_MODULE_CLK(cgm2_mux4);
 static struct s32gen1_clk gmac1_rx_clk =
@@ -233,8 +233,8 @@ static struct s32gen1_clk *s32r45_cc_clocks[] = {
 	[CC_ARR_CLK(S32R45_CLK_GMAC1_EXT_TX)] = &gmac1_ext_tx_clk,
 	[CC_ARR_CLK(S32R45_CLK_GMAC1_EXT_RX)] = &gmac1_ext_rx_clk,
 	[CC_ARR_CLK(S32R45_CLK_GMAC1_EXT_REF)] = &gmac1_ext_ref_clk,
-	[CC_ARR_CLK(S32R45_CLK_SERDES1_LANE1_TX)] = &serdes1_lane1_tx_clk,
-	[CC_ARR_CLK(S32R45_CLK_SERDES1_LANE1_CDR)] = &serdes1_lane1_cdr_clk,
+	[CC_ARR_CLK(S32R45_CLK_SERDES1_LANE0_TX)] = &serdes1_lane0_tx_clk,
+	[CC_ARR_CLK(S32R45_CLK_SERDES1_LANE0_CDR)] = &serdes1_lane0_cdr_clk,
 	[CC_ARR_CLK(S32R45_CLK_GMAC1_REF_DIV)] = &gmac1_ref_div_clk,
 	[CC_ARR_CLK(S32GEN1_CLK_MC_CGM0_MUX10)] = &cgm0_mux10_clk,
 	[CC_ARR_CLK(S32GEN1_CLK_GMAC0_TX)] = &gmac_tx_clk,
diff --git a/include/dt-bindings/clock/s32g-clock.h b/include/dt-bindings/clock/s32g-clock.h
index 80635a044c..3e7815a186 100644
--- a/include/dt-bindings/clock/s32g-clock.h
+++ b/include/dt-bindings/clock/s32g-clock.h
@@ -29,8 +29,8 @@
 #define S32G_CLK_PFE_MAC0_REF_DIV	S32GEN1_CC_CLK(59)
 #define S32G_CLK_PFE_MAC1_REF_DIV	S32GEN1_CC_CLK(60)
 #define S32G_CLK_PFE_MAC2_REF_DIV	S32GEN1_CC_CLK(61)
-#define S32G_CLK_SERDES1_LANE1_TX	S32GEN1_CC_CLK(62)
 
+#define S32G_CLK_SERDES1_LANE1_TX	S32GEN1_CC_CLK(62)
 #define S32G_CLK_SERDES1_LANE1_CDR	S32GEN1_CC_CLK(63)
 
 #define S32G_CLK(N)			S32GEN1_PLAT_CLK(N)
diff --git a/include/dt-bindings/clock/s32r45-clock.h b/include/dt-bindings/clock/s32r45-clock.h
index 594377d93d..5b161c5ed7 100644
--- a/include/dt-bindings/clock/s32r45-clock.h
+++ b/include/dt-bindings/clock/s32r45-clock.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 
 #ifndef __DT_BINDINGS_CLOCK_S32R45_CLK_H
@@ -12,8 +12,8 @@
 #define S32R45_CLK_GMAC1_EXT_TX			S32GEN1_CC_CLK(56)
 #define S32R45_CLK_GMAC1_EXT_RX			S32GEN1_CC_CLK(57)
 #define S32R45_CLK_GMAC1_EXT_REF		S32GEN1_CC_CLK(58)
-#define S32R45_CLK_SERDES1_LANE1_TX		S32GEN1_CC_CLK(59)
-#define S32R45_CLK_SERDES1_LANE1_CDR		S32GEN1_CC_CLK(60)
+#define S32R45_CLK_SERDES1_LANE0_TX		S32GEN1_CC_CLK(59)
+#define S32R45_CLK_SERDES1_LANE0_CDR		S32GEN1_CC_CLK(60)
 #define S32R45_CLK_ACCEL_PLL_PHI0		S32GEN1_CC_CLK(62)
 #define S32R45_CLK_ARM_PLL_DFS4_2		S32GEN1_CC_CLK(63)
 
-- 
2.17.1

