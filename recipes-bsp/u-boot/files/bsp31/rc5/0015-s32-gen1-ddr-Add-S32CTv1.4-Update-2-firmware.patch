From c26553e97ae7a3d9045371316b414bd0e557282f Mon Sep 17 00:00:00 2001
From: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Date: Thu, 11 Nov 2021 17:51:47 +0200
Subject: [PATCH 15/19] s32-gen1: ddr: Add S32CTv1.4 Update 2 firmware

Added latest DDR Firmware code generated with the
Configuration Tools v1.4 Update 2.

Issue: ALB-8104
Upstream-Status: Pending 

Signed-off-by: Andrei Cherechesu <andrei.cherechesu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 board/freescale/s32-gen1/ddr_init.c  |   2 +-
 board/freescale/s32-gen1/ddr_utils.c |  47 ++++-----
 board/freescale/s32-gen1/ddr_utils.h | 144 +++++++++++++--------------
 3 files changed, 92 insertions(+), 101 deletions(-)

diff --git a/board/freescale/s32-gen1/ddr_init.c b/board/freescale/s32-gen1/ddr_init.c
index 4c0a852651..3eedf50866 100644
--- a/board/freescale/s32-gen1/ddr_init.c
+++ b/board/freescale/s32-gen1/ddr_init.c
@@ -204,7 +204,7 @@ static u32 load_phy_image(u32 start_addr, size_t size,
 
 	for (i = 0; i < size; i++) {
 		writel(image[i], (uintptr_t)current_addr);
-		current_addr += sizeof(u32);
+		current_addr += (u32)sizeof(u32);
 	}
 	return NO_ERR;
 }
diff --git a/board/freescale/s32-gen1/ddr_utils.c b/board/freescale/s32-gen1/ddr_utils.c
index f8d9888f3d..a658f80999 100644
--- a/board/freescale/s32-gen1/ddr_utils.c
+++ b/board/freescale/s32-gen1/ddr_utils.c
@@ -35,7 +35,7 @@ static u32 enable_axi_ports(void);
 static u32 get_mail(u32 *mail);
 static u32 ack_mail(void);
 static u32 init_memory_ecc_scrubber(void);
-static bool sel_clk_src(u32 clk_src);
+static void sel_clk_src(u32 clk_src, bool *already_set);
 
 #ifdef CONFIG_SYS_ERRATUM_ERR050543
 u8 polling_needed = 2;
@@ -59,18 +59,19 @@ bool update_bf(u32 *v, u8 pos, u32 mask, int32_t delta)
 /*
  * Set the ddr clock source, FIRC or DDR_PLL_PHI0.
  * @param clk_src - requested clock source
- * @return - true whether clock source has been changed, false otherwise
+ * @param already_set - whether clock source is already set to clk_src or not
  */
-static bool sel_clk_src(u32 clk_src)
+static void sel_clk_src(u32 clk_src, bool *already_set)
 {
 	u32 tmp32;
-	bool ret = true;
 
 	/* Check if the clock source is already set to clk_src*/
 	tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
 	if (((tmp32 & CSS_SELSTAT_MASK) >> CSS_SELSTAT_POS) == clk_src) {
-		ret = false;
+		*already_set = true;
 	} else {
+		*already_set = false;
+
 		/* To wait till clock switching is completed */
 		do {
 			tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
@@ -106,14 +107,13 @@ static bool sel_clk_src(u32 clk_src)
 		} while (((tmp32 & CSS_SELSTAT_MASK) >> CSS_SELSTAT_POS)
 			 != clk_src);
 	}
-	return ret;
 }
 
 /* Sets default AXI parity. */
 u32 set_axi_parity(void)
 {
 	u32 tmp32;
-	bool switched_to_firc;
+	bool already_set;
 
 	/* Enable Parity For All AXI Interfaces */
 	tmp32 = readl(DDR_SS_REG);
@@ -132,18 +132,18 @@ u32 set_axi_parity(void)
 
 	/*
 	 * Set ddr clock source on FIRC_CLK.
-	 * If it's already set on FIRC_CLK, it returns false.
+	 * If it's already set on FIRC_CLK, already_set becomes true.
 	 */
-	switched_to_firc = sel_clk_src(FIRC_CLK_SRC);
+	sel_clk_src(FIRC_CLK_SRC, &already_set);
 
 	/* De-assert Reset To Controller and AXI Ports */
 	tmp32 = readl(MC_RGM_PRST_0);
 	writel(~(FORCED_RESET_ON_PERIPH << PRST_0_PERIPH_3_RST_POS) &
 	       tmp32, MC_RGM_PRST_0);
 
-	/* Check if the initial clock source was not on FIRC */
-	if (switched_to_firc)
-		switched_to_firc = sel_clk_src(DDR_PHI0_PLL);
+	/* Check if the initial clock source was not already set FIRC */
+	if (!already_set)
+		sel_clk_src(DDR_PHI0_PLL, &already_set);
 
 	/* Enable HIF, CAM Queueing */
 	writel(DBG1_DISABLE_DE_QUEUEING, DDRC_BASE_ADDR + OFFSET_DDRC_DBG1);
@@ -336,24 +336,15 @@ u32 post_train_setup(u8 options)
 u32 wait_firmware_execution(void)
 {
 	u32 mail = 0;
-	u32 ret;
-	bool exit_loop = false;
+	u32 ret = NO_ERR;
 
-	while (!exit_loop) {
-		/* Obtain message from PHY (major message) */
+	while ((mail != TRAINING_OK_MSG) && (ret == NO_ERR)) {
 		ret = get_mail(&mail);
 
-		if (ret == NO_ERR) {
-			if (mail == TRAINING_OK_MSG) {
-				/* 0x07 means OK, 0xFF means failure */
-				exit_loop = true;
-			} else if (mail == TRAINING_FAILED_MSG) {
-				/* Training stage failed */
-				ret = TRAINING_FAILED;
-				exit_loop = true;
-			}
-		} else {
-			exit_loop = true;
+		/* 0x07 means OK, 0xFF means failure */
+		if (mail == TRAINING_FAILED_MSG) {
+			/* Training stage failed */
+			ret = TRAINING_FAILED;
 		}
 	}
 
@@ -556,7 +547,7 @@ u32 write_lpddr4_mr(u8 mr_index, u8 mr_data)
 
 	/* Set MRR_DDR_SEL_REG to 0x1 to enable LPDDR4 mode */
 	tmp32 = readl(PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
-	writel(tmp32 | MRCTRL0_MR_TYPE_READ,
+	writel(tmp32 | MRR_0_DDR_SEL_REG_MASK,
 	       PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
 
 	/*
diff --git a/board/freescale/s32-gen1/ddr_utils.h b/board/freescale/s32-gen1/ddr_utils.h
index 620e5b1930..b0ddcae6ef 100644
--- a/board/freescale/s32-gen1/ddr_utils.h
+++ b/board/freescale/s32-gen1/ddr_utils.h
@@ -47,29 +47,29 @@
 #define BITFIELD_EXCEEDED   0x00000004U
 
 /* DDRC related */
-#define DDRC_BASE_ADDR                   0x403C0000U
-#define OFFSET_DDRC_SWCTL                0x320U
-#define OFFSET_DDRC_DFIMISC              0x1b0U
-#define OFFSET_DDRC_DFISTAT              0x1bcU
-#define OFFSET_DDRC_PWRCTL               0x30U
-#define OFFSET_DDRC_SWSTAT               0x324U
-#define OFFSET_DDRC_STAT                 0x04U
-#define OFFSET_DDRC_DBG1                 0x304U
-#define OFFSET_DDRC_ECCCFG0              0x70U
-#define OFFSET_DDRC_ECCCFG1              0x74U
-#define OFFSET_DDRC_SBRCTL               0xf24U
-#define OFFSET_DDRC_SBRSTAT              0xf28U
-#define OFFSET_DDRC_SBRWDATA0            0xf2cU
-#define OFFSET_DDRC_MRSTAT               0x18U
-#define OFFSET_DDRC_MRCTRL0              0x10U
-#define OFFSET_DDRC_MRCTRL1              0x14U
+#define DDRC_BASE_ADDR                   (u32)0x403C0000U
+#define OFFSET_DDRC_SWCTL                (u32)0x320U
+#define OFFSET_DDRC_DFIMISC              (u32)0x1b0U
+#define OFFSET_DDRC_DFISTAT              (u32)0x1bcU
+#define OFFSET_DDRC_PWRCTL               (u32)0x30U
+#define OFFSET_DDRC_SWSTAT               (u32)0x324U
+#define OFFSET_DDRC_STAT                 (u32)0x04U
+#define OFFSET_DDRC_DBG1                 (u32)0x304U
+#define OFFSET_DDRC_ECCCFG0              (u32)0x70U
+#define OFFSET_DDRC_ECCCFG1              (u32)0x74U
+#define OFFSET_DDRC_SBRCTL               (u32)0xf24U
+#define OFFSET_DDRC_SBRSTAT              (u32)0xf28U
+#define OFFSET_DDRC_SBRWDATA0            (u32)0xf2cU
+#define OFFSET_DDRC_MRSTAT               (u32)0x18U
+#define OFFSET_DDRC_MRCTRL0              (u32)0x10U
+#define OFFSET_DDRC_MRCTRL1              (u32)0x14U
 
 #ifdef CONFIG_SYS_ERRATUM_ERR050543
-#define OFFSET_DDRC_DERATEEN             0x20U
-#define OFFSET_DDRC_RFSHTMG              0x64U
-#define OFFSET_DDRC_DRAMTMG0             0x100U
-#define OFFSET_DDRC_DRAMTMG1             0x104U
-#define OFFSET_DDRC_DRAMTMG4             0x110U
+#define OFFSET_DDRC_DERATEEN             (u32)0x20U
+#define OFFSET_DDRC_RFSHTMG              (u32)0x64U
+#define OFFSET_DDRC_DRAMTMG0             (u32)0x100U
+#define OFFSET_DDRC_DRAMTMG1             (u32)0x104U
+#define OFFSET_DDRC_DRAMTMG4             (u32)0x110U
 #endif
 
 /* DDRC masks and values */
@@ -83,7 +83,7 @@
 
 #ifdef CONFIG_SYS_ERRATUM_ERR050543
 #define RFSHTMG_VAL_SHIFT           16
-#define RFSHTMG_VAL                 0xfffUL
+#define RFSHTMG_VAL                 (u32)0xfffU
 #define RFSHTMG_MASK                (RFSHTMG_VAL << \
 	RFSHTMG_VAL_SHIFT)
 #define RFSHCTL3_UPDATE_SHIFT       1
@@ -147,58 +147,58 @@
 #define	DFISTAT_DFI_INIT_DONE		0x1U
 #define	DFISTAT_DFI_INIT_INCOMPLETE	0x0U
 #define	PWRCTL_SELFREF_SW_MASK		0x00000020U
-#define	STAT_OPERATING_MODE_MASK		0x7U
-#define	STAT_OPERATING_MODE_INIT		0x0U
+#define	STAT_OPERATING_MODE_MASK	0x7U
+#define	STAT_OPERATING_MODE_INIT	0x0U
 #define	RFSHCTL3_DIS_AUTO_REFRESH_MASK	0x00000001U
 #define	ECCCFG0_ECC_MODE_MASK		0x7U
 #define	ECCCFG0_ECC_DISABLED		0x0U
 #define	TRAINING_OK_MSG			0x07U
 #define	TRAINING_FAILED_MSG		0xFFU
-#define	ECCCFG1_REGION_PARITY_LOCKED	0x1UL
+#define	ECCCFG1_REGION_PARITY_LOCKED	(u32)0x1U
 #define	ECCCFG1_REGION_PARITY_LOCK_POS	4
-#define	SBRCTL_SCRUB_MODE_WRITE		0x1UL
+#define	SBRCTL_SCRUB_MODE_WRITE		(u32)0x1U
 #define	SBRCTL_SCRUB_MODE_POS		2
 
-#define	APBONLY_DCTWRITEPROT_ACK_EN	0
-#define	APBONLY_DCTWRITEPROT_ACK_DIS	1
-#define	SBRCTL_SCRUB_DURING_LOWPOWER_CONTINUED	0x1UL
-#define	SBRCTL_SCRUB_DURING_LOWPOWER_POS		1
-
-#define	SBRCTL_SCRUB_INTERVAL_FIELD	0x1FFFU
-#define	SBRCTL_SCRUB_INTERVAL_POS		8
-#define	SBRCTL_SCRUB_EN		0x1U
-#define	SBRSTAT_SCRUB_DONE_MASK		0x2U
-#define	SBRSTAT_SCRUBBER_NOT_DONE		0x0U
-#define	SBRSTAT_SCRUBBER_BUSY_MASK		0x1U
-#define	SBRSTAT_SCRUBBER_NOT_BUSY		0x0U
-#define	SBRCTL_SCRUB_INTERVAL_VALUE_1	0x1UL
-#define	MRR_0_DDR_SEL_REG_MASK	0x1U
-
-#define	MRSTAT_MR_BUSY			0x1U
-#define	MRSTAT_MR_NOT_BUSY			0x0U
-#define	MRCTRL0_MR_TYPE_READ		0x1U
-#define	MRCTRL0_RANK_ACCESS_POS		4
-#define	MRCTRL0_RANK_ACCESS_FIELD		0xfUL
-#define	MRCTRL0_RANK_0			0x1UL
-#define	MRCTRL1_MR_ADDRESS_FIELD		0xffUL
-#define	MRCTRL1_MR_ADDRESS_POS		8
-#define	MRCTRL0_WR_ENGAGE			0x1UL
-#define	MRCTRL0_WR_ENGAGE_POS		31
-#define	MRCTRL1_MR_DATA_ADDRESS_FIELD	0xffffUL
-#define	MRCTRL1_MR_DATA_ADDRESS_POS	16
-#define STORE_CSR_DISABLED			0x0U
-#define INIT_MEM_DISABLED			0x0U
+#define	APBONLY_DCTWRITEPROT_ACK_EN              0
+#define	APBONLY_DCTWRITEPROT_ACK_DIS             1
+#define	SBRCTL_SCRUB_DURING_LOWPOWER_CONTINUED   (u32)0x1U
+#define	SBRCTL_SCRUB_DURING_LOWPOWER_POS         1
+
+#define	SBRCTL_SCRUB_INTERVAL_FIELD     0x1FFFU
+#define	SBRCTL_SCRUB_INTERVAL_POS       8
+#define	SBRCTL_SCRUB_EN	                0x1U
+#define	SBRSTAT_SCRUB_DONE_MASK         0x2U
+#define	SBRSTAT_SCRUBBER_NOT_DONE       0x0U
+#define	SBRSTAT_SCRUBBER_BUSY_MASK      0x1U
+#define	SBRSTAT_SCRUBBER_NOT_BUSY       0x0U
+#define	SBRCTL_SCRUB_INTERVAL_VALUE_1   (u32)0x1U
+#define	MRR_0_DDR_SEL_REG_MASK          0x1U
+
+#define	MRSTAT_MR_BUSY                  0x1U
+#define	MRSTAT_MR_NOT_BUSY              0x0U
+#define	MRCTRL0_MR_TYPE_READ            0x1U
+#define	MRCTRL0_RANK_ACCESS_POS         4
+#define	MRCTRL0_RANK_ACCESS_FIELD       (u32)0xfU
+#define	MRCTRL0_RANK_0                  0x1U
+#define	MRCTRL1_MR_ADDRESS_FIELD        (u32)0xffU
+#define	MRCTRL1_MR_ADDRESS_POS          8
+#define	MRCTRL0_WR_ENGAGE               (u32)0x1U
+#define	MRCTRL0_WR_ENGAGE_POS           31
+#define	MRCTRL1_MR_DATA_ADDRESS_FIELD   (u32)0xffffU
+#define	MRCTRL1_MR_DATA_ADDRESS_POS     16
+#define STORE_CSR_DISABLED              0x0U
+#define INIT_MEM_DISABLED               0x0U
 
 /* Performance monitoring registers */
-#define PERF_BASE_ADDR                   0x403E0000U
-#define OFFSET_MRR_0_DATA_REG_ADDR       0x40U
-#define OFFSET_MRR_1_DATA_REG_ADDR       0x44U
+#define PERF_BASE_ADDR                   (u32)0x403E0000U
+#define OFFSET_MRR_0_DATA_REG_ADDR       (u32)0x40U
+#define OFFSET_MRR_1_DATA_REG_ADDR       (u32)0x44U
 
 /* uMCTL2 Multi-Port Registers */
-#define DDRC_UMCTL2_MP_BASE_ADDR         0x403C03F8U
-#define OFFSET_DDRC_PCTRL_0              0x98U
-#define OFFSET_DDRC_PCTRL_1              0x148U
-#define OFFSET_DDRC_PCTRL_2              0x1f8U
+#define DDRC_UMCTL2_MP_BASE_ADDR         (u32)0x403C03F8U
+#define OFFSET_DDRC_PCTRL_0              (u32)0x98U
+#define OFFSET_DDRC_PCTRL_1              (u32)0x148U
+#define OFFSET_DDRC_PCTRL_2              (u32)0x1f8U
 
 /* PHY related */
 #define DDR_PHYA_MASTER0_CALBUSY		0x4038165C
@@ -206,14 +206,14 @@
 #define UCT_WRITE_PROT_SHADOW_MASK              0x1U
 #define DDR_PHYA_DCTWRITEPROT			0x4038040C
 #define DDR_PHYA_APBONLY_UCTWRITEONLYSHADOW	0x40380410
-#define OFFSET_DDRC_RFSHCTL3			0x60U
+#define OFFSET_DDRC_RFSHCTL3			(u32)0x60U
 #define DDR_PHYA_UCCLKHCLKENABLES		0x40380BEC
 #define UCT_WRITE_PROT_SHADOW_ACK		0x0U
 
-#define SHIFT_BIT(nr)             ((1UL) << (nr))
+#define SHIFT_BIT(nr)             (((u32)0x1U) << (nr))
 #define UCCLKEN_MASK              SHIFT_BIT(0)
 #define HCLKEN_MASK               SHIFT_BIT(1)
-#define OFFSET_DDRC_INIT0         0xd0U
+#define OFFSET_DDRC_INIT0         (u32)0xd0U
 
 #define STORE_CSR_MASK            SHIFT_BIT(0)
 #define INIT_MEM_MASK             SHIFT_BIT(1)
@@ -238,10 +238,10 @@
 /* Reset Generation Module */
 #define MC_RGM_PRST_0             0x40078040
 #ifndef MC_CGM5_BASE_ADDR
-#define MC_CGM5_BASE_ADDR         0x40068000U
+#define MC_CGM5_BASE_ADDR         (u32)0x40068000U
 #endif
-#define OFFSET_MUX_0_CSS          0x304U
-#define OFFSET_MUX_0_CSC          0x300U
+#define OFFSET_MUX_0_CSS          (u32)0x304U
+#define OFFSET_MUX_0_CSC          (u32)0x300U
 #define FIRC_CLK_SRC              0x0U
 #define DDR_PHI0_PLL              0x24U
 
@@ -254,10 +254,10 @@
 
 #ifdef CONFIG_SYS_ERRATUM_ERR050543
 /* ERR050543 related defines */
-#define MR4_IDX 4
-#define MR4_MASK	0x7U
-#define MR4_SHIFT	16
-#define TUF_THRESHOLD 0x3U
+#define MR4_IDX            4
+#define MR4_MASK           0x7U
+#define MR4_SHIFT          16
+#define TUF_THRESHOLD      0x3U
 #define REQUIRED_OK_CHECKS 0x3U
 #endif
 
-- 
2.17.1

