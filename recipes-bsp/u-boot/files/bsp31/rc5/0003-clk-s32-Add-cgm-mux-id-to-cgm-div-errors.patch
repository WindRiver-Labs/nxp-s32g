From b58fc491e6616c24a07ce5996b01d9aab9b5670a Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Wed, 27 Oct 2021 10:57:31 +0300
Subject: [PATCH 03/19] clk/s32: Add cgm mux id to cgm div errors

Issue: ALB-8016
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/clk/s32/enable_clk.c      | 20 +++++++++++---------
 drivers/clk/s32/s32gen1_clk_drv.c |  6 ++++--
 2 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/drivers/clk/s32/enable_clk.c b/drivers/clk/s32/enable_clk.c
index 92eac4d2a5..2cc7483955 100644
--- a/drivers/clk/s32/enable_clk.c
+++ b/drivers/clk/s32/enable_clk.c
@@ -329,9 +329,13 @@ static int enable_cgm_div(struct s32gen1_clk_obj *module,
 		return -EINVAL;
 	}
 
+	mux = get_cgm_div_mux(div);
+	if (!mux)
+		return -EINVAL;
+
 	if (!div->freq) {
-		pr_err("The frequency of the divider %d is not set\n",
-		       div->index);
+		pr_err("The frequency of the divider %d is not set (mux = %u)\n",
+		       div->index, mux->index);
 		return -EINVAL;
 	}
 
@@ -341,23 +345,21 @@ static int enable_cgm_div(struct s32gen1_clk_obj *module,
 
 	pfreq = (double)get_module_rate(div->parent, priv);
 	if (!pfreq) {
-		pr_err("Failed to get the frequency of CGM MUX\n");
+		pr_err("Failed to get the frequency of CGM MUX (id = %u)\n",
+		       mux->index);
 		return -EINVAL;
 	}
 
 	dc = (u32)(pfreq / div->freq);
 	if ((ulong)(pfreq / dc) != div->freq) {
-		pr_err("Cannot set CGM divider for input = %lu & output = %lu. Nearest freq = %lu\n",
-		       (ulong)pfreq, div->freq, (ulong)(pfreq / dc));
+		pr_err("Cannot set CGM divider (mux = %u div = %u) for input = %lu & output = %lu. Nearest freq = %lu\n",
+		       mux->index, div->index, (ulong)pfreq,
+		       div->freq, (ulong)(pfreq / dc));
 #ifndef CONFIG_S32GEN1_SET_NEAREST_FREQ
 		return -EINVAL;
 #endif
 	}
 
-	mux = get_cgm_div_mux(div);
-	if (!mux)
-		return -EINVAL;
-
 	cgm_addr = get_base_addr(mux->module, priv);
 	if (!cgm_addr) {
 		pr_err("Failed to get CGM base address of the module %d\n",
diff --git a/drivers/clk/s32/s32gen1_clk_drv.c b/drivers/clk/s32/s32gen1_clk_drv.c
index f1cc082033..212351a230 100644
--- a/drivers/clk/s32/s32gen1_clk_drv.c
+++ b/drivers/clk/s32/s32gen1_clk_drv.c
@@ -57,14 +57,16 @@ static int bind_clk_provider(struct udevice *pdev, const char *compatible,
 	/* Pre probe */
 	ret = clk_set_defaults(dev, 0);
 	if (ret) {
-		pr_err("Failed to set default clocks for '%s'\n", compatible);
+		pr_err("Failed to set default clocks(0) for '%s'\n",
+		       compatible);
 		return -EIO;
 	}
 
 	/* Post probe */
 	ret = clk_set_defaults(dev, 1);
 	if (ret) {
-		pr_err("Failed to set default clocks for '%s'\n", compatible);
+		pr_err("Failed to set default clocks(1) for '%s'\n",
+		       compatible);
 		return -EIO;
 	}
 
-- 
2.17.1

