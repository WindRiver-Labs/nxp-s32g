From 810496d3bb8b66c52668450c92c1cd3b55982c06 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
Date: Fri, 18 Dec 2020 17:12:33 +0200
Subject: [PATCH 19/76] s32g2xx: Reduce SRAM size to 6MB for s32g233

Issue: ALB-6005, ALB-6004
Signed-off-by: Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
---
 arch/arm/cpu/armv8/s32/cpu.c          |  6 +++---
 arch/arm/cpu/armv8/s32/initsram.c     |  2 +-
 arch/arm/cpu/armv8/s32/s32-gen1/soc.c | 20 ++++++++++++++++++++
 arch/arm/cpu/armv8/s32/s32v234/soc.c  |  5 +++++
 arch/arm/include/asm/arch-s32/soc.h   |  4 +++-
 include/configs/s32-gen1.h            |  2 +-
 6 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index 19bdbeeaea..20d92781cd 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -572,7 +572,7 @@ int dram_init_banksize(void)
 {
 #if defined(CONFIG_S32_SKIP_RELOC) && !defined(CONFIG_S32_ATF_BOOT_FLOW)
 	gd->bd->bi_dram[0].start = S32_SRAM_BASE;
-	gd->bd->bi_dram[0].size = S32_SRAM_SIZE;
+	gd->bd->bi_dram[0].size = get_sram_size();
 
 	gd->bd->bi_dram[1].start = 0x0;
 	gd->bd->bi_dram[1].size = 0x0;
@@ -594,7 +594,7 @@ int dram_init_banksize(void)
 	gd->bd->bi_dram[1].size = CONFIG_SYS_FSL_DRAM_SIZE2;
 
 	gd->bd->bi_dram[2].start = S32_SRAM_BASE;
-	gd->bd->bi_dram[2].size = S32_SRAM_SIZE;
+	gd->bd->bi_dram[2].size = get_sram_size();
 #endif
 #endif
 	s32_init_ram_size();
@@ -609,7 +609,7 @@ phys_size_t __weak get_effective_memsize(void)
 	 * Note: gd->bd isn't initialized yet
 	 */
 #if defined(CONFIG_S32_SKIP_RELOC) && !defined(CONFIG_S32_ATF_BOOT_FLOW)
-	size = S32_SRAM_SIZE;
+	size = get_sram_size();
 #else
 	size = CONFIG_SYS_FSL_DRAM_SIZE1;
 #ifdef CONFIG_PRAM
diff --git a/arch/arm/cpu/armv8/s32/initsram.c b/arch/arm/cpu/armv8/s32/initsram.c
index 6850722e1c..2a70e00e14 100644
--- a/arch/arm/cpu/armv8/s32/initsram.c
+++ b/arch/arm/cpu/armv8/s32/initsram.c
@@ -45,7 +45,7 @@ static int do_init_sram(cmd_tbl_t *cmdtp, int flag, int argc,
 		return CMD_RET_USAGE;
 	}
 
-	max_size = S32_SRAM_SIZE - (addr - S32_SRAM_BASE);
+	max_size = get_sram_size() - (addr - S32_SRAM_BASE);
 	if (size > max_size) {
 		printf("WARNING: given size exceeds SRAM boundaries.\n");
 		size = max_size;
diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/soc.c b/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
index c566ccad91..74cd7e9abc 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/soc.c
@@ -339,6 +339,21 @@ u32 cpu_pos_mask(void)
 
 	return 0;
 }
+
+u32 get_sram_size(void)
+{
+	switch (get_s32g2_derivative()) {
+	case S32G274A_DERIV:
+	case S32G254A_DERIV:
+		return S32_SRAM_SIZE;
+	case S32G233A_DERIV:
+		return 6 * SZ_1M;
+	default:
+		return 0;
+	}
+
+	return 0;
+}
 #endif
 
 #ifdef CONFIG_NXP_S32R45
@@ -347,4 +362,9 @@ u32 cpu_pos_mask(void)
 	/* 4 cores */
 	return 0xFU;
 }
+
+u32 get_sram_size(void)
+{
+	return S32_SRAM_SIZE;
+}
 #endif
diff --git a/arch/arm/cpu/armv8/s32/s32v234/soc.c b/arch/arm/cpu/armv8/s32/s32v234/soc.c
index 11f629e8e7..4e1ca96de8 100644
--- a/arch/arm/cpu/armv8/s32/s32v234/soc.c
+++ b/arch/arm/cpu/armv8/s32/s32v234/soc.c
@@ -1140,3 +1140,8 @@ u32 cpu_pos_mask(void)
 	/* 4 cores */
 	return 0xFU;
 }
+
+u32 get_sram_size(void)
+{
+	return S32_SRAM_SIZE;
+}
diff --git a/arch/arm/include/asm/arch-s32/soc.h b/arch/arm/include/asm/arch-s32/soc.h
index 091953dc8e..bad57d7b95 100644
--- a/arch/arm/include/asm/arch-s32/soc.h
+++ b/arch/arm/include/asm/arch-s32/soc.h
@@ -37,9 +37,11 @@ void setup_iomux_dcu(void);
 int board_dcu_qos(void);
 #endif
 
+u32 get_sram_size(void);
+
 static inline bool is_addr_in_sram(uintptr_t addr)
 {
-	return addr >= S32_SRAM_BASE && addr < S32_SRAM_BASE + S32_SRAM_SIZE;
+	return addr >= S32_SRAM_BASE && addr < S32_SRAM_BASE + get_sram_size();
 }
 
 void cpu_pci_clock_init(const int clockexternal);
diff --git a/include/configs/s32-gen1.h b/include/configs/s32-gen1.h
index e8eb053bc4..418d3eb501 100644
--- a/include/configs/s32-gen1.h
+++ b/include/configs/s32-gen1.h
@@ -113,7 +113,7 @@
 #define S32_SRAM_BASE		0x34000000
 #endif
 
-#define S32_SRAM_SIZE		0x800000
+#define S32_SRAM_SIZE		(8 * SZ_1M)
 
 #define IRAM_BASE_ADDR  CONFIG_SYS_DATA_BASE
 #define IRAM_SIZE		CONFIG_SYS_MEM_SIZE
-- 
2.17.1

