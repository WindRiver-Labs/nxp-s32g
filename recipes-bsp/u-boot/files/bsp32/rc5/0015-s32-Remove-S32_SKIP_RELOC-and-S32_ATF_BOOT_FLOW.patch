From 21a4232f75e4cde64836e8354acc1f5a99370930 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Thu, 3 Feb 2022 12:24:44 +0200
Subject: [PATCH 15/43] s32: Remove S32_SKIP_RELOC and S32_ATF_BOOT_FLOW

Remove unused configs for S32_SKIP_RELOC and S32_ATF_BOOT_FLOW.

Issue: ALB-8347
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/cpu.c     | 18 ------------------
 arch/arm/cpu/armv8/s32/fdt.c     |  4 ----
 arch/arm/cpu/armv8/s32/mp.c      |  4 +---
 board/freescale/Kconfig          |  7 -------
 board/freescale/s32-gen1/Kconfig |  7 -------
 include/configs/s32.h            | 14 +-------------
 6 files changed, 2 insertions(+), 52 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index 0f229cd7e3..322bed5175 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -25,8 +25,6 @@ void mmu_setup(void);
 #ifndef CONFIG_SYS_DCACHE_OFF
 
 static struct mm_region early_map[] = {
-#if !defined(CONFIG_S32_SKIP_RELOC) || \
-	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 #ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE1, CONFIG_SYS_FSL_DRAM_BASE1,
@@ -42,7 +40,6 @@ static struct mm_region early_map[] = {
 	  CONFIG_SYS_FSL_DRAM_SIZE1,
 	  PTE_BLOCK_MEMTYPE(MT_NORMAL_NC) | PTE_BLOCK_OUTER_SHARE
 	},
-#endif
 #endif
 	{
 	  S32_SRAM_BASE, S32_SRAM_BASE,
@@ -56,22 +53,17 @@ static struct mm_region early_map[] = {
 	  PTE_BLOCK_PXN | PTE_BLOCK_UXN
 	},
 #if defined(CONFIG_SYS_FSL_DRAM_BASE2)
-#if !defined(CONFIG_S32_SKIP_RELOC) || \
-	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE2, CONFIG_SYS_FSL_DRAM_BASE2,
 	  CONFIG_SYS_FSL_DRAM_SIZE2,
 	  PTE_BLOCK_MEMTYPE(MT_NORMAL_NC) | PTE_BLOCK_OUTER_SHARE
 	},
-#endif
 #endif
 	/* list terminator */
 	{},
 };
 
 static struct mm_region final_map[] = {
-#if !defined(CONFIG_S32_SKIP_RELOC) || \
-	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 #ifdef CONFIG_TARGET_TYPE_S32GEN1_EMULATOR
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE1, CONFIG_SYS_FSL_DRAM_BASE1,
@@ -84,7 +76,6 @@ static struct mm_region final_map[] = {
 	  CONFIG_SYS_FSL_DRAM_SIZE1,
 	  PTE_BLOCK_MEMTYPE(MT_NORMAL) | PTE_BLOCK_OUTER_SHARE
 	},
-#endif
 #endif
 	{
 	  S32_SRAM_BASE, S32_SRAM_BASE,
@@ -98,14 +89,11 @@ static struct mm_region final_map[] = {
 	  PTE_BLOCK_PXN | PTE_BLOCK_UXN
 	},
 #if defined(CONFIG_SYS_FSL_DRAM_BASE2)
-#if !defined(CONFIG_S32_SKIP_RELOC) || \
-	(defined(CONFIG_S32_SKIP_RELOC) && defined(CONFIG_S32_ATF_BOOT_FLOW))
 	{
 	  CONFIG_SYS_FSL_DRAM_BASE2, CONFIG_SYS_FSL_DRAM_BASE2,
 	  CONFIG_SYS_FSL_DRAM_SIZE2,
 	  PTE_BLOCK_MEMTYPE(MT_NORMAL) | PTE_BLOCK_OUTER_SHARE
 	},
-#endif
 #endif
 	{
 	  CONFIG_SYS_FSL_FLASH0_BASE, CONFIG_SYS_FSL_FLASH0_BASE,
@@ -212,14 +200,10 @@ int arch_cpu_init(void)
 {
 	int ret = 0;
 
-#ifdef CONFIG_S32_ATF_BOOT_FLOW
 	/* Clear the BSS. */
 	memset(__bss_start, 0, __bss_end - __bss_start);
-#endif
 
-#ifdef CONFIG_S32_SKIP_RELOC
 	gd->flags |= GD_FLG_SKIP_RELOC;
-#endif
 
 	set_sctlr(get_sctlr() & ~CR_M);
 	icache_enable();
@@ -342,7 +326,6 @@ phys_size_t __weak get_effective_memsize(void)
 	return size;
 }
 
-#ifdef CONFIG_S32_ATF_BOOT_FLOW
 void board_prep_linux(bootm_headers_t *images)
 {
 	int ret;
@@ -351,4 +334,3 @@ void board_prep_linux(bootm_headers_t *images)
 	if (ret)
 		pr_err("Failed to reset SCMI agent's settings\n");
 }
-#endif
diff --git a/arch/arm/cpu/armv8/s32/fdt.c b/arch/arm/cpu/armv8/s32/fdt.c
index b0c66d477f..22d686ac87 100644
--- a/arch/arm/cpu/armv8/s32/fdt.c
+++ b/arch/arm/cpu/armv8/s32/fdt.c
@@ -133,7 +133,6 @@ static void ft_fixup_memory(void *blob, bd_t *bd)
 	apply_memory_fixups(blob, bd);
 }
 
-#ifdef CONFIG_S32_ATF_BOOT_FLOW
 static int add_atf_reserved_memory(const void *old_blob, void *new_blob)
 {
 	int ret, off;
@@ -191,7 +190,6 @@ static void ft_fixup_atf(const void *old_blob, void *new_blob)
 	if (add_atf_reserved_memory(old_blob, new_blob))
 		pr_err("Copying 'atf' node from U-Boot DT to Linux DT failed!\n");
 }
-#endif
 
 #ifdef CONFIG_PCIE_S32GEN1
 static int fdt_alias2node(void *blob, const char *alias_fmt, int alias_id)
@@ -588,9 +586,7 @@ void ft_cpu_setup(void *blob, bd_t *bd)
 {
 	ft_fixup_memory(blob, bd);
 	ft_fixup_ddr_polling(gd->fdt_blob, blob);
-#ifdef CONFIG_S32_ATF_BOOT_FLOW
 	ft_fixup_atf(gd->fdt_blob, blob);
-#endif
 #ifdef CONFIG_PCIE_S32GEN1
 	ft_fixup_serdes(blob);
 #endif
diff --git a/arch/arm/cpu/armv8/s32/mp.c b/arch/arm/cpu/armv8/s32/mp.c
index d19dcb62eb..bf02b1574a 100644
--- a/arch/arm/cpu/armv8/s32/mp.c
+++ b/arch/arm/cpu/armv8/s32/mp.c
@@ -14,7 +14,7 @@
 #include <asm/spin_table.h>
 #include "mp.h"
 
-#if defined(CONFIG_S32_ATF_BOOT_FLOW) && defined(CONFIG_MP)
+#if defined(CONFIG_MP)
 #include <dm/uclass.h>
 #include <linux/psci.h>
 #include <malloc.h>
@@ -34,7 +34,6 @@ struct cpu_desc {
 DECLARE_GLOBAL_DATA_PTR;
 
 #if defined(CONFIG_MP)
-#if defined(CONFIG_S32_ATF_BOOT_FLOW)
 static struct cpu_desc *cpus;
 static u32 n_cpus;
 
@@ -224,4 +223,3 @@ int cpu_release(u32 nr, int argc, char * const argv[])
 	return 0;
 }
 #endif
-#endif
diff --git a/board/freescale/Kconfig b/board/freescale/Kconfig
index e11dfc1edc..7cbe14906a 100644
--- a/board/freescale/Kconfig
+++ b/board/freescale/Kconfig
@@ -46,13 +46,6 @@ config PHY_RGMII_DIRECT_CONNECTED
 	  Adds the platform "fixed" MDIO Bus to cover the boards that
 	  use PHYs that are not connected to the real MDIO bus.
 
-config S32_SKIP_RELOC
-	bool "Skip code relocation on NXP S32 platforms"
-	help
-		This allows to run U-Boot in SRAM, without touching the DDR
-		memory. It's very useful for bring-up activities or when the DDR
-		memory is not stable.
-
 config XEN_SUPPORT
 	bool "Enable Xen EL2 Booting and set environment variables in order to boot directly into Xen Hypervisor"
 	default n
diff --git a/board/freescale/s32-gen1/Kconfig b/board/freescale/s32-gen1/Kconfig
index 7dc36e2129..9898c1347e 100644
--- a/board/freescale/s32-gen1/Kconfig
+++ b/board/freescale/s32-gen1/Kconfig
@@ -83,13 +83,6 @@ config DTB_ADDR
 	default 0xbfa90000 if TARGET_TYPE_S32GEN1_EMULATOR
 	default 0xffa90000
 
-config S32_ATF_BOOT_FLOW
-	bool "Boot flow with TF-A"
-	select S32_SKIP_RELOC
-	help
-	  U-Boot is started by the ARM Trusted Firmware (TF-A) and runs
-	  in the non-secure world.
-
 config S32GEN1_HWCONFIG
 	string "S32GEN1 HWConfig definition"
 	depends on S32_GEN1 && (PCIE_S32GEN1 || FSL_PFENG)
diff --git a/include/configs/s32.h b/include/configs/s32.h
index 594fc88c5a..f82e6e40a4 100644
--- a/include/configs/s32.h
+++ b/include/configs/s32.h
@@ -39,11 +39,7 @@
 
 /* SMP definitions */
 #define CONFIG_MAX_CPUS			(4)
-#ifdef CONFIG_S32_SKIP_RELOC
-#define SECONDARY_CPU_BOOT_PAGE		(S32_SRAM_BASE)
-#else
 #define SECONDARY_CPU_BOOT_PAGE		(CONFIG_SYS_FSL_DRAM_BASE1)
-#endif
 #define CPU_RELEASE_ADDR		SECONDARY_CPU_BOOT_PAGE
 #define CONFIG_FSL_SMP_RELEASE_ALL
 #ifndef CONFIG_XEN_SUPPORT
@@ -154,7 +150,7 @@
 #endif
 
 /* Size of malloc() pool */
-#if defined(CONFIG_RUN_FROM_IRAM_ONLY) || defined(CONFIG_S32_SKIP_RELOC)
+#if defined(CONFIG_RUN_FROM_IRAM_ONLY)
 #define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + 512 * 1024)
 #else
 #define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + 2 * 1024 * 1024)
@@ -285,11 +281,7 @@
 #define INITRD_HIGH_DEFAULT 0xffffffff
 
 /* Leave room for TF-A & OPTEE */
-#if defined(CONFIG_S32_ATF_BOOT_FLOW)
 #define INITRD_HIGH 0xFE1FFFFF
-#else
-#define INITRD_HIGH INITRD_HIGH_DEFAULT
-#endif
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	CONFIG_BOARD_EXTRA_ENV_SETTINGS  \
@@ -452,11 +444,7 @@
 #define CONFIG_SYS_MALLOC_BASE		(CONFIG_SYS_FSL_DRAM_BASE1)
 #endif
 
-#if defined(CONFIG_S32_SKIP_RELOC)
-#define CONFIG_SYS_SDRAM_BASE		S32_SRAM_BASE
-#else
 #define CONFIG_SYS_SDRAM_BASE		CONFIG_SYS_FSL_DRAM_BASE1
-#endif
 
 #define CONFIG_SYS_INIT_RAM_ADDR	IRAM_BASE_ADDR
 #define CONFIG_SYS_INIT_RAM_SIZE	IRAM_SIZE
-- 
2.17.1

