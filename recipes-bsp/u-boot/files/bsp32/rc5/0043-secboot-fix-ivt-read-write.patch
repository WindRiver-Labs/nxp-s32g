From fe6818f0bf1060d16d9297942f12732446077fce Mon Sep 17 00:00:00 2001
From: Vlad Pelin <vlad.pelin@nxp.com>
Date: Thu, 20 Jan 2022 15:20:29 +0200
Subject: [PATCH 43/43] secboot: fix ivt read/write

when rev1 was supported, ivt read was done at offset 0, then used to
overwrite the ivt at offset 1000 after modifying it. since we no
longer use an ivt at offset 0, this is no longer needed

Issue: ALB-8402
Upstream-Status: Pending 

Signed-off-by: Vlad Pelin <vlad.pelin@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../cpu/armv8/s32/s32-gen1/hse_adv_secboot.c  | 51 +++++--------------
 include/hse/hse_abi.h                         |  8 +--
 2 files changed, 18 insertions(+), 41 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c b/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
index faeadf8ee1..ef576b0aef 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/hse_adv_secboot.c
@@ -330,18 +330,10 @@ int hse_write_sys_img(struct hse_private *priv, bool secure)
 	if (secure)
 		priv->ivt.boot_cfg |= HSE_IVT_BOOTSEQ_BIT;
 
-	/* write primary ivt */
-	ret = hse_mmc_write(&priv->ivt, HSE_PIVT_BLK, 1);
+	/* write ivt */
+	ret = hse_mmc_write(&priv->ivt, HSE_IVT_BLK, 1);
 	if (ret) {
-		log_err("ERROR: primary ivt write failed!\n");
-		ret = CMD_RET_FAILURE;
-		goto ret_fail;
-	}
-
-	/* write duplicate ivt */
-	ret = hse_mmc_write(&priv->ivt, HSE_DIVT_BLK, 1);
-	if (ret) {
-		log_err("ERROR: duplicate ivt write failed!\n");
+		log_err("ERROR: ivt write failed!\n");
 		ret = CMD_RET_FAILURE;
 		goto ret_fail;
 	}
@@ -433,15 +425,11 @@ static int do_hse_adv_secboot_prep(cmd_tbl_t *cmdtp, int flag,
 	priv = (struct hse_private *)hse_resmem;
 	memset((void *)priv, 0, sizeof(struct hse_private));
 
-	/* can only read from mmc in blocks of 512B */
-	ret = hse_mmc_read((void *)&priv->ivt, HSE_PIVT_BLK, 1);
+	/* read ivt block */
+	ret = hse_mmc_read((void *)&priv->ivt, HSE_IVT_BLK, 1);
 	if (ret) {
-		/* try reading duplicate ivt */
-		ret = hse_mmc_read((void *)&priv->ivt, HSE_DIVT_BLK, 1);
-		if (ret) {
-			log_err("ERROR: ivt read failed!\n");
-			goto ret_fail;
-		}
+		log_err("ERROR: ivt read failed!\n");
+		goto ret_fail;
 	}
 
 	/* check if sys_img already exists */
@@ -458,21 +446,14 @@ static int do_hse_adv_secboot_prep(cmd_tbl_t *cmdtp, int flag,
 			printf("\tSetting BOOTSEQ bit...\n");
 			priv->ivt.boot_cfg |= HSE_IVT_BOOTSEQ_BIT;
 
-			/* write primary ivt */
-			ret = hse_mmc_write(&priv->ivt, HSE_PIVT_BLK, 1);
+			/* write ivt */
+			ret = hse_mmc_write(&priv->ivt, HSE_IVT_BLK, 1);
 			if (ret) {
-				log_err("ERROR: primary ivt write failed!\n");
+				log_err("ERROR: ivt write failed!\n");
 				ret = CMD_RET_FAILURE;
 				goto ret_fail;
 			}
 
-			/* write duplicate ivt */
-			ret = hse_mmc_write(&priv->ivt, HSE_DIVT_BLK, 1);
-			if (ret) {
-				log_err("ERROR: duplicate ivt write failed!\n");
-				goto ret_fail;
-			}
-
 			ret = CMD_RET_SUCCESS;
 			goto ret_fail;
 		}
@@ -550,15 +531,11 @@ static int do_hse_keystore_format(cmd_tbl_t *cmdtp, int flag,
 	priv = (struct hse_private *)hse_resmem;
 	memset((void *)priv, 0, sizeof(struct hse_private));
 
-	/* can only read from mmc in blocks of 512B */
-	ret = hse_mmc_read((void *)&priv->ivt, HSE_PIVT_BLK, 1);
+	/* read ivt */
+	ret = hse_mmc_read((void *)&priv->ivt, HSE_IVT_BLK, 1);
 	if (ret) {
-		/* try reading duplicate ivt */
-		ret = hse_mmc_read((void *)&priv->ivt, HSE_DIVT_BLK, 1);
-		if (ret) {
-			log_err("ERROR: ivt read failed!\n");
-			goto ret_fail;
-		}
+		log_err("ERROR: ivt read failed!\n");
+		goto ret_fail;
 	}
 
 	/* check if sys_img already exists */
diff --git a/include/hse/hse_abi.h b/include/hse/hse_abi.h
index ac54fb453d..03eb20684a 100644
--- a/include/hse/hse_abi.h
+++ b/include/hse/hse_abi.h
@@ -2,7 +2,7 @@
 /*
  * HSE ABI for secure boot in u-boot
  *
- * Copyright 2020-2021 NXP
+ * Copyright 2020-2022 NXP
  */
 
 #ifndef HSE_ABI_H
@@ -26,8 +26,7 @@
 #define HSE_SYS_IMG_SD       0x76000u
 #define HSE_AUTH_TAG_SD      0x82000u
 
-#define HSE_PIVT_BLK       0
-#define HSE_DIVT_BLK       8
+#define HSE_IVT_BLK        8
 #define HSE_SYS_IMG_BLK    944
 #define HSE_UBOOT_SIGN_BLK 1040
 #define HSE_UBOOT_BIN_BLK  1057
@@ -151,7 +150,8 @@ struct ivt {
 	u32 app_bsb_ext_flash_type;
 	u8 reserved3[168];
 	u32 gmac[4];
-	u8 reserved4[256]; // MBR
+	/* pad to block size - 512 bytes */
+	u8 reserved4[256];
 } __packed;
 
 /**
-- 
2.17.1

