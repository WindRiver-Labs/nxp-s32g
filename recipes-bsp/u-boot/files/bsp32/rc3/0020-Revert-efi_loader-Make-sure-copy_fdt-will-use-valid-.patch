From e5f698a2425b44881042472fd2fc0d4fa8738038 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Sat, 15 Jan 2022 02:47:23 +0200
Subject: [PATCH 20/25] Revert "efi_loader: Make sure copy_fdt will use valid
 address"

This reverts commit efa34b774513bd3d4d74a0fb830f17ff536804d6.

Issue: ALB-8332
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 cmd/bootefi.c | 27 +++++++++++----------------
 1 file changed, 11 insertions(+), 16 deletions(-)

diff --git a/cmd/bootefi.c b/cmd/bootefi.c
index 4ceb836386..aaed575505 100644
--- a/cmd/bootefi.c
+++ b/cmd/bootefi.c
@@ -3,7 +3,6 @@
  *  EFI application loader
  *
  *  Copyright (c) 2016 Alexander Graf
- *  Copyright 2021 NXP
  */
 
 #include <common.h>
@@ -24,8 +23,6 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
-#define SAFE_FDT_LOCATION	0x7f00000
-
 static struct efi_device_path *bootefi_image_path;
 static struct efi_device_path *bootefi_device_path;
 
@@ -104,14 +101,6 @@ static efi_status_t copy_fdt(void **fdtp)
 	uint fdt_size;
 	int i;
 
-	/*
-	 * Give us at least 12 KiB of breathing room in case the device tree
-	 * needs to be expanded later.
-	 */
-	fdt = *fdtp;
-	fdt_pages = efi_size_in_pages(fdt_totalsize(fdt) + 0x3000);
-	fdt_size = fdt_pages << EFI_PAGE_SHIFT;
-
 	for (i = 0; i < CONFIG_NR_DRAM_BANKS; i++) {
 		u64 ram_start = gd->bd->bi_dram[i].start;
 		u64 ram_size = gd->bd->bi_dram[i].size;
@@ -119,18 +108,24 @@ static efi_status_t copy_fdt(void **fdtp)
 		if (!ram_size)
 			continue;
 
-		if (ram_start < fdt_ram_start && ram_size >
-			(SAFE_FDT_LOCATION + fdt_size))
+		if (ram_start < fdt_ram_start)
 			fdt_ram_start = ram_start;
 	}
 
+	/*
+	 * Give us at least 12 KiB of breathing room in case the device tree
+	 * needs to be expanded later.
+	 */
+	fdt = *fdtp;
+	fdt_pages = efi_size_in_pages(fdt_totalsize(fdt) + 0x3000);
+	fdt_size = fdt_pages << EFI_PAGE_SHIFT;
+
 	/*
 	 * Safe fdt location is at 127 MiB.
 	 * On the sandbox convert from the sandbox address space.
 	 */
-	new_fdt_addr = (uintptr_t)map_sysmem(fdt_ram_start +
-					     SAFE_FDT_LOCATION + fdt_size, 0);
-
+	new_fdt_addr = (uintptr_t)map_sysmem(fdt_ram_start + 0x7f00000 +
+					     fdt_size, 0);
 	ret = efi_allocate_pages(EFI_ALLOCATE_MAX_ADDRESS,
 				 EFI_BOOT_SERVICES_DATA, fdt_pages,
 				 &new_fdt_addr);
-- 
2.17.1

