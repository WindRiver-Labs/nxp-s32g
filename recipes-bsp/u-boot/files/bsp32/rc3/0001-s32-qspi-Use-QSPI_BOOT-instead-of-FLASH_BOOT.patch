From 5ad7750c36056476fb0141085d9e688c25ec4da9 Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Mon, 10 Jan 2022 10:45:36 +0200
Subject: [PATCH 01/25] s32: qspi: Use 'QSPI_BOOT' instead of 'FLASH_BOOT'

Issue: ALB-4141
Upstream-Status: Pending 

Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/Kconfig                            |  5 -----
 configs/s32g274abluebox3_qspi_defconfig |  2 +-
 configs/s32g274ardb2_qspi_defconfig     |  2 +-
 configs/s32g2xxaevb_qspi_defconfig      |  2 +-
 configs/s32g3xxaevb_qspi_defconfig      |  2 +-
 configs/s32r45_emu_defconfig            |  2 +-
 configs/s32r45evb_qspi_defconfig        |  2 +-
 include/configs/s32.h                   |  6 +++---
 tools/s32gen1image.c                    | 18 +++++++++---------
 tools/s32gen1image.h                    |  6 +++---
 tools/s32gen1image_qspi_macronix.c      |  4 ++--
 tools/s32gen1image_qspi_micron.c        |  4 ++--
 12 files changed, 25 insertions(+), 30 deletions(-)

diff --git a/arch/Kconfig b/arch/Kconfig
index 267cadd804..ae9c93ed7b 100644
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -1,11 +1,6 @@
 config CREATE_ARCH_SYMLINK
 	bool
 
-config FLASH_BOOT
-	bool "Flash Boot"
-	depends on !SD_BOOT
-	default n
-
 config HAVE_ARCH_IOREMAP
 	bool
 
diff --git a/configs/s32g274abluebox3_qspi_defconfig b/configs/s32g274abluebox3_qspi_defconfig
index 1d5c12d40d..77502d16a8 100644
--- a/configs/s32g274abluebox3_qspi_defconfig
+++ b/configs/s32g274abluebox3_qspi_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x10000
diff --git a/configs/s32g274ardb2_qspi_defconfig b/configs/s32g274ardb2_qspi_defconfig
index 252ab014da..55f574533c 100644
--- a/configs/s32g274ardb2_qspi_defconfig
+++ b/configs/s32g274ardb2_qspi_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x10000
diff --git a/configs/s32g2xxaevb_qspi_defconfig b/configs/s32g2xxaevb_qspi_defconfig
index b911e5c915..34b7764c27 100644
--- a/configs/s32g2xxaevb_qspi_defconfig
+++ b/configs/s32g2xxaevb_qspi_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x10000
diff --git a/configs/s32g3xxaevb_qspi_defconfig b/configs/s32g3xxaevb_qspi_defconfig
index a70895d8b9..4464873e3e 100644
--- a/configs/s32g3xxaevb_qspi_defconfig
+++ b/configs/s32g3xxaevb_qspi_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x10000
diff --git a/configs/s32r45_emu_defconfig b/configs/s32r45_emu_defconfig
index bd3c18d582..13f2faad6e 100644
--- a/configs/s32r45_emu_defconfig
+++ b/configs/s32r45_emu_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x2000
diff --git a/configs/s32r45evb_qspi_defconfig b/configs/s32r45evb_qspi_defconfig
index 91559f6797..aae5357dfd 100644
--- a/configs/s32r45evb_qspi_defconfig
+++ b/configs/s32r45evb_qspi_defconfig
@@ -1,4 +1,4 @@
-CONFIG_FLASH_BOOT=y
+CONFIG_QSPI_BOOT=y
 CONFIG_ARM=y
 CONFIG_ARCH_S32=y
 CONFIG_ENV_SIZE=0x10000
diff --git a/include/configs/s32.h b/include/configs/s32.h
index d110d7e907..08f0eb1a87 100644
--- a/include/configs/s32.h
+++ b/include/configs/s32.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /*
- * Copyright 2017-2021 NXP
+ * Copyright 2017-2022 NXP
  */
 
 /*
@@ -456,7 +456,7 @@
 	defined(CONFIG_TARGET_TYPE_S32GEN1_SIMULATOR)
 #  define CONFIG_BOOTCOMMAND \
 		"${boot_mtd} ${loadaddr} - ${fdt_addr}"
-#elif defined(CONFIG_FLASH_BOOT)
+#elif defined(CONFIG_QSPI_BOOT)
 #  define CONFIG_BOOTCOMMAND \
 	PFE_INIT_CMD "run flashboot"
 #elif defined(CONFIG_SD_BOOT)
@@ -522,7 +522,7 @@
 #define FLASH_SECTOR_SIZE		0x40000 /* 256 KB */
 #endif
 
-#if defined(CONFIG_FLASH_BOOT)
+#if defined(CONFIG_QSPI_BOOT)
 #define CONFIG_SYS_MAX_FLASH_BANKS	1
 #define CONFIG_SYS_MAX_FLASH_SECT 	(0x4000000 / CONFIG_ENV_SECT_SIZE)
 #endif
diff --git a/tools/s32gen1image.c b/tools/s32gen1image.c
index 7e44ad7a9e..d02a399fc3 100644
--- a/tools/s32gen1image.c
+++ b/tools/s32gen1image.c
@@ -1,5 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
-/* Copyright 2019-2021 NXP */
+/* Copyright 2019-2022 NXP */
 
 #include <image.h>
 #include <generated/autoconf.h>
@@ -15,11 +15,11 @@
 #  define S32GEN1_SECBOOT_HSE_RES_SIZE 0x80000ul
 #endif
 
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 #  define S32G2XX_COMMAND_SEQ_FILL_OFF 20
 #endif
 
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 #  define S32GEN1_QSPI_PARAMS_OFFSET 0x200U
 #endif
 
@@ -31,7 +31,7 @@ static struct program_image image_layout = {
 		.offset = S32GEN1_IVT_OFFSET_0,
 		.size = sizeof(struct ivt),
 	},
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 	.qspi_params = {
 		.offset = S32GEN1_QSPI_PARAMS_OFFSET,
 		.size = S32GEN1_QSPI_PARAMS_SIZE,
@@ -105,7 +105,7 @@ static struct application_boot_code *get_app_code(struct program_image *image)
 	return (struct application_boot_code *)image->app_code.data;
 }
 
-#ifndef CONFIG_FLASH_BOOT
+#ifndef CONFIG_QSPI_BOOT
 
 /* Areas of SRAM reserved by BootROM according to the
  * Reset and Boot: Boot: Program Image section of the Reference Manual,
@@ -161,7 +161,7 @@ static void set_data_pointers(struct program_image *layout, void *header)
 	uint8_t *data = (uint8_t *)header;
 
 	layout->ivt.data = data + layout->ivt.offset;
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 	layout->qspi_params.data = data + layout->qspi_params.offset;
 #endif
 	layout->ivt_duplicate.data = data + layout->ivt_duplicate.offset;
@@ -282,7 +282,7 @@ static void s32gen1_set_header(void *header, struct stat *sbuf, int unused,
 	 */
 	app_code->code_length = ROUND(app_code->code_length, 512);
 
-#ifndef CONFIG_FLASH_BOOT
+#ifndef CONFIG_QSPI_BOOT
 	enforce_reserved_ranges((void *)(__u64)
 				app_code->ram_start_pointer,
 				app_code->code_length);
@@ -310,7 +310,7 @@ static int s32g2xx_build_layout(struct program_image *program_image,
 {
 	uint8_t *image_layout;
 	struct image_comp *parts[] = {&program_image->ivt,
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 		&program_image->qspi_params,
 #endif
 		&program_image->ivt_duplicate,
@@ -358,7 +358,7 @@ static void s32gen1_print_header(const void *header)
 	fprintf(stderr, "\nIVT:\t\t\tOffset: 0x%x\t\tSize: 0x%x\n",
 		(unsigned int)image_layout.ivt.offset,
 		(unsigned int)image_layout.ivt.size);
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 	fprintf(stderr, "QSPI Parameters:\tOffset: 0x%x\t\tSize: 0x%x\n",
 		(unsigned int)image_layout.qspi_params.offset,
 		(unsigned int)image_layout.qspi_params.size);
diff --git a/tools/s32gen1image.h b/tools/s32gen1image.h
index 2224c17df1..7af9c2e047 100644
--- a/tools/s32gen1image.h
+++ b/tools/s32gen1image.h
@@ -1,5 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
-/* Copyright 2019-2021 NXP */
+/* Copyright 2019-2022 NXP */
 
 #ifndef S32GEN1IMAGE_H
 #define S32GEN1IMAGE_H
@@ -75,7 +75,7 @@ struct application_boot_code {
 	__u8		code[0];
 } __attribute__((packed));
 
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 struct flash_write {
 	union {
 		struct {
@@ -122,7 +122,7 @@ struct qspi_params {
 
 struct program_image {
 	struct image_comp ivt;
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 	struct image_comp qspi_params;
 #endif
 	struct image_comp ivt_duplicate;
diff --git a/tools/s32gen1image_qspi_macronix.c b/tools/s32gen1image_qspi_macronix.c
index 21322b5455..41f8b849c9 100644
--- a/tools/s32gen1image_qspi_macronix.c
+++ b/tools/s32gen1image_qspi_macronix.c
@@ -1,11 +1,11 @@
 // SPDX-License-Identifier: GPL-2.0+
-/* Copyright 2019-2021 NXP */
+/* Copyright 2019-2022 NXP */
 
 #include <generated/autoconf.h>
 #include "s32_common.h"
 #include "s32gen1image.h"
 
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 static struct qspi_params s32g2xx_qspi_conf = {
 	.header   = 0x5a5a5a5a,
 	.mcr      = 0x030f00cc,
diff --git a/tools/s32gen1image_qspi_micron.c b/tools/s32gen1image_qspi_micron.c
index b34551e0b7..09787483df 100644
--- a/tools/s32gen1image_qspi_micron.c
+++ b/tools/s32gen1image_qspi_micron.c
@@ -1,11 +1,11 @@
 // SPDX-License-Identifier: GPL-2.0+
-/* Copyright 2019-2021 NXP */
+/* Copyright 2019-2022 NXP */
 
 #include <generated/autoconf.h>
 #include "s32_common.h"
 #include "s32gen1image.h"
 
-#ifdef CONFIG_FLASH_BOOT
+#ifdef CONFIG_QSPI_BOOT
 static struct qspi_params s32g2xx_qspi_conf = {
 	.header   = 0x5a5a5a5a,
 	.mcr      = 0x010f00cc,
-- 
2.17.1

