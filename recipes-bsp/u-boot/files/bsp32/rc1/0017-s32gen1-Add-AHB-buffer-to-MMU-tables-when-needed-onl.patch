From 24a87fe460af8eba7128521d143049a101b4c303 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Fri, 3 Dec 2021 15:48:52 +0200
Subject: [PATCH 17/20] s32gen1: Add AHB buffer to MMU tables when needed only

Don't add QSPI AHB buffer to MMU tables when the QSPI node
is not enabled in device tree. This is needed for a better
platform isolation.

Issue: ALB-8218
Upstream-Status: Pending 

Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/cpu.c | 36 ++++++++++++++++++++++++------------
 1 file changed, 24 insertions(+), 12 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index be258282f3..3e2798d0e1 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -82,18 +82,6 @@ static struct mm_region early_map[] = {
 	  PTE_BLOCK_MEMTYPE(MT_NORMAL_NC) | PTE_BLOCK_OUTER_SHARE
 	},
 #endif
-#endif
-	{
-	  CONFIG_SYS_FSL_FLASH0_BASE, CONFIG_SYS_FSL_FLASH0_BASE,
-	  CONFIG_SYS_FSL_FLASH0_SIZE,
-	  PTE_BLOCK_MEMTYPE(MT_NORMAL_NC) | PTE_BLOCK_OUTER_SHARE
-	},
-#ifdef CONFIG_SYS_FSL_FLASH1_BASE
-	{
-	  CONFIG_SYS_FSL_FLASH1_BASE, CONFIG_SYS_FSL_FLASH1_BASE,
-	  CONFIG_SYS_FSL_FLASH1_SIZE,
-	  PTE_BLOCK_MEMTYPE(MT_NORMAL_NC) | PTE_BLOCK_OUTER_SHARE
-	},
 #endif
 	/* list terminator */
 	{},
@@ -568,6 +556,29 @@ int arch_cpu_init(void)
 	return ret;
 }
 
+static void disable_qspi_mmu_entry(void)
+{
+	struct mm_region *region;
+	int offset;
+	size_t i;
+
+	offset = fdt_node_offset_by_compatible(gd->fdt_blob, -1,
+					       "fsl,s32gen1-qspi");
+	if (offset > 0) {
+		if (fdtdec_get_is_enabled(gd->fdt_blob, offset))
+			return;
+	}
+
+	/* Skip AHB mapping by setting its size to 0 */
+	for (i = 0; i < ARRAY_SIZE(final_map); i++) {
+		region = &final_map[i];
+		if (region->phys == CONFIG_SYS_FSL_FLASH0_BASE) {
+			region->size = 0U;
+			break;
+		}
+	}
+}
+
 /*
  * This function is called from lib/board.c.
  * It recreates MMU table in main memory. MMU and d-cache are enabled earlier.
@@ -575,6 +586,7 @@ int arch_cpu_init(void)
  */
 void enable_caches(void)
 {
+	disable_qspi_mmu_entry();
 	final_mmu_setup();
 	__asm_invalidate_tlb_all();
 	dcache_enable();
-- 
2.17.1

