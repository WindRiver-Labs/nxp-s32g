From fcda5ecf0f33f4310a9e9afc62175b0ead85a9c7 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Tue, 8 Feb 2022 13:43:52 +0200
Subject: [PATCH 2/9] s32: remove save_tlb()

Function save_tlb() was used to save TLB for secondary cores. Since with
ATF boot flow the secondary cores are no longer started from U-Boot this
function is not necessary.

Issue: ALB-8344
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/cpu.c      | 18 ------------------
 arch/arm/cpu/armv8/s32/lowlevel.S | 31 -------------------------------
 2 files changed, 49 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index 3d923e88e8..58f9a66360 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -148,22 +148,6 @@ static inline void early_mmu_setup(void)
 	set_sctlr(get_sctlr() | CR_C);
 }
 
-/* Saved TLB settings for secondaries */
-uintptr_t s32_tlb_addr;
-u64 s32_tcr;
-
-static inline void save_tlb(void)
-{
-	s32_tlb_addr = gd->arch.tlb_addr;
-	s32_tcr = get_tcr(current_el(), NULL, NULL);
-
-	flush_dcache_range((unsigned long)&s32_tlb_addr,
-			   (unsigned long)&s32_tlb_addr + sizeof(s32_tlb_addr));
-
-	flush_dcache_range((unsigned long)&s32_tcr,
-			   (unsigned long)&s32_tcr + sizeof(s32_tcr));
-}
-
 static inline void final_mmu_setup(void)
 {
 	unsigned int el = current_el();
@@ -188,8 +172,6 @@ static inline void final_mmu_setup(void)
 	/* gd->arch.tlb_emerg is used by mmu_set_region_dcache_behaviour */
 	gd->arch.tlb_emerg = gd->arch.tlb_addr;
 
-	save_tlb();
-
 	/*
 	 * MMU is already enabled, just need to invalidate TLB to load the
 	 * new table. The new table is compatible with the current table, if
diff --git a/arch/arm/cpu/armv8/s32/lowlevel.S b/arch/arm/cpu/armv8/s32/lowlevel.S
index c7cd7cdfdb..16825c61f9 100644
--- a/arch/arm/cpu/armv8/s32/lowlevel.S
+++ b/arch/arm/cpu/armv8/s32/lowlevel.S
@@ -52,37 +52,6 @@ start_slave_cores:
 #endif
 	branch_if_master x0, x1, 2f
 
-	/*
-	 * Slave should wait for master clearing spin table and
-	 * the mmu page tables.
-	 * This sync prevent salves observing incorrect
-	 * value of spin table and jumping to wrong place.
-	 */
-
-	wfe
-	tlbi	alle3
-	dsb	sy
-	isb
-	isb
-
-	ldr	x0, =s32_tlb_addr
-	ldr	x0, [x0]
-	msr	ttbr0_el3, x0
-	msr	ttbr0_el2, x0
-
-	ldr	x0, =s32_tcr
-	ldr	x0, [x0]
-	msr	tcr_el3, x0
-	msr	tcr_el2, x0
-
-	ldr	x0,=MEMORY_ATTRIBUTES
-	msr	mair_el3, x0
-	msr	mair_el2, x0
-
-	ldr	x0, =__real_cntfrq
-	ldr     x0, [x0]
-	msr	cntfrq_el0, x0	/* set with real frequency */
-	dsb	sy
 	/*
 	 * All slaves will enter EL2 and optionally EL1.
 	 */
-- 
2.17.1

