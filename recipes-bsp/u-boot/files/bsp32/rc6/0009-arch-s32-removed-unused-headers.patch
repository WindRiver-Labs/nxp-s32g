From d336ee3171628ab2152e07133b1d706df332fda1 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Mon, 14 Feb 2022 16:07:43 +0200
Subject: [PATCH 9/9] arch: s32: removed unused headers

The necessary defines have been moved in their respective
header files.

Issue: ALB-8525, ALB-8345
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/s32-gen1/sgmii/sgmii.c |   3 +-
 arch/arm/include/asm/arch-s32/mc_cgm_regs.h   |  14 --
 arch/arm/include/asm/arch-s32/mc_me_regs.h    |  14 --
 arch/arm/include/asm/arch-s32/mc_rgm_regs.h   |  15 --
 .../asm/arch-s32/s32-gen1/mc_cgm_regs.h       | 225 ------------------
 .../asm/arch-s32/s32-gen1/mc_me_regs.h        |  83 -------
 .../asm/arch-s32/s32-gen1/mc_rgm_regs.h       |  48 ----
 7 files changed, 1 insertion(+), 401 deletions(-)
 delete mode 100644 arch/arm/include/asm/arch-s32/mc_cgm_regs.h
 delete mode 100644 arch/arm/include/asm/arch-s32/mc_me_regs.h
 delete mode 100644 arch/arm/include/asm/arch-s32/mc_rgm_regs.h
 delete mode 100644 arch/arm/include/asm/arch-s32/s32-gen1/mc_cgm_regs.h
 delete mode 100644 arch/arm/include/asm/arch-s32/s32-gen1/mc_me_regs.h
 delete mode 100644 arch/arm/include/asm/arch-s32/s32-gen1/mc_rgm_regs.h

diff --git a/arch/arm/cpu/armv8/s32/s32-gen1/sgmii/sgmii.c b/arch/arm/cpu/armv8/s32/s32-gen1/sgmii/sgmii.c
index f3d0ab894d..71a7c919bf 100644
--- a/arch/arm/cpu/armv8/s32/s32-gen1/sgmii/sgmii.c
+++ b/arch/arm/cpu/armv8/s32/s32-gen1/sgmii/sgmii.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 /*
- * Copyright 2019-2021 NXP
+ * Copyright 2019-2022 NXP
  *
  * The SerDes config code
  */
@@ -16,7 +16,6 @@
 #include <dm.h>
 
 #include <asm/arch-s32/siul.h>
-#include <asm/arch-s32/mc_rgm_regs.h>
 
 #include <serdes_regs.h>
 #include <serdes_xpcs_regs.h>
diff --git a/arch/arm/include/asm/arch-s32/mc_cgm_regs.h b/arch/arm/include/asm/arch-s32/mc_cgm_regs.h
deleted file mode 100644
index 446bcfc994..0000000000
--- a/arch/arm/include/asm/arch-s32/mc_cgm_regs.h
+++ /dev/null
@@ -1,14 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * (C) Copyright 2015 Freescale Semiconductor, Inc.
- * (C) Copyright 2017-2018,2021 NXP
- */
-
-#ifndef __ARCH_ARM_MACH_S32_MCCGM_REGS_H__
-#define __ARCH_ARM_MACH_S32_MCCGM_REGS_H__
-
-#include <config.h>
-
-#include "s32-gen1/mc_cgm_regs.h"
-
-#endif /*__ARCH_ARM_MACH_S32_MCCGM_REGS_H__ */
diff --git a/arch/arm/include/asm/arch-s32/mc_me_regs.h b/arch/arm/include/asm/arch-s32/mc_me_regs.h
deleted file mode 100644
index c0cef080b4..0000000000
--- a/arch/arm/include/asm/arch-s32/mc_me_regs.h
+++ /dev/null
@@ -1,14 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * (C) Copyright 2017,2021 NXP
- */
-
-#ifndef __ARCH_ARM_MACH_S32_MCME_REGS_H__
-#define __ARCH_ARM_MACH_S32_MCME_REGS_H__
-
-#include <config.h>
-
-#include "s32-gen1/mc_me_regs.h"
-
-#endif /*__ARCH_ARM_MACH_S32_MCME_REGS_H__ */
-
diff --git a/arch/arm/include/asm/arch-s32/mc_rgm_regs.h b/arch/arm/include/asm/arch-s32/mc_rgm_regs.h
deleted file mode 100644
index 11c1ae3fc2..0000000000
--- a/arch/arm/include/asm/arch-s32/mc_rgm_regs.h
+++ /dev/null
@@ -1,15 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * (C) Copyright 2015-2016 Freescale Semiconductor, Inc.
- * (C) Copyright 2016-2017,2021 NXP
- */
-
-#ifndef __ARCH_ARM_MACH_S32_MCRGM_REGS_H__
-#define __ARCH_ARM_MACH_S32_MCRGM_REGS_H__
-
-#include <config.h>
-
-#include "s32-gen1/mc_rgm_regs.h"
-
-#endif /*__ARCH_ARM_MACH_S32_MCRGM_REGS_H__ */
-
diff --git a/arch/arm/include/asm/arch-s32/s32-gen1/mc_cgm_regs.h b/arch/arm/include/asm/arch-s32/s32-gen1/mc_cgm_regs.h
deleted file mode 100644
index 486d3c0644..0000000000
--- a/arch/arm/include/asm/arch-s32/s32-gen1/mc_cgm_regs.h
+++ /dev/null
@@ -1,225 +0,0 @@
-/*
- * (C) Copyright 2018-2020 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef __ARCH_ARM_MACH_S32GEN1_MCCGM_REGS_H__
-#define __ARCH_ARM_MACH_S32GEN1_MCCGM_REGS_H__
-
-#include <config.h>
-#include "s32-gen1-regs.h"
-
-#ifndef __ASSEMBLY__
-
-/* FXOSC registers. */
-#define FXOSC_CTRL(FXOSC)		(UPTR(FXOSC) + 0x0)
-#define FXOSC_CTRL_OSC_BYP		(1 << 31)
-#define FXOSC_CTRL_COMP_EN		(1 << 24)
-
-#define FXOSC_CTRL_EOCV(val)		(FXOSC_CTRL_EOCV_MASK & ((val) << \
-					 FXOSC_CTRL_EOCV_OFFSET))
-#define FXOSC_CTRL_EOCV_MASK		(0x00FF0000)
-#define FXOSC_CTRL_EOCV_OFFSET		(16)
-
-#define FXOSC_CTRL_GM_SEL(val)		(FXOSC_CTRL_GM_SEL_MASK & ((val) << \
-					 FXOSC_CTRL_GM_SEL_OFFSET))
-#define FXOSC_CTRL_GM_SEL_MASK		(0x000000F0)
-#define FXOSC_CTRL_GM_SEL_OFFSET	(4)
-
-#define FXOSC_CTRL_OSCON		(1 << 0)
-
-#define FXOSC_STAT(FXOSC)		(UPTR(FXOSC) + 0x4)
-#define FXOSC_STAT_OSC_STAT		(1 << 31)
-
-/* MC_CGM registers definitions */
-/* MC_CGM_MUX_n_CSC */
-#define CGM_MUXn_CSC(cgm_addr, mux)	((UPTR(cgm_addr) + 0x300 + \
-					 (mux) * 0x40))
-#define MC_CGM_MUXn_CSC_SELCTL(val)	(MC_CGM_MUXn_CSC_SELCTL_MASK & ((val) \
-					 << MC_CGM_MUXn_CSC_SELCTL_OFFSET))
-#define MC_CGM_MUXn_CSC_SELCTL_MASK	(0x3F000000)
-#define MC_CGM_MUXn_CSC_SELCTL_OFFSET	(24)
-
-#define MC_CGM_MUXn_CSC_CLK_SW		(1 << 2)
-
-/* MC_CGM_MUX_n_CSS */
-#define CGM_MUXn_CSS(cgm_addr, mux)	((UPTR(cgm_addr) + 0x304 + \
-					 (mux) * 0x40))
-#define MC_CGM_MUXn_CSS_SELSTAT(css)	((MC_CGM_MUXn_CSS_SELSTAT_MASK & (css))\
-					 >> MC_CGM_MUXn_CSS_SELSTAT_OFFSET)
-#define MC_CGM_MUXn_CSS_SELSTAT_MASK	(0x3F000000)
-#define MC_CGM_MUXn_CSS_SELSTAT_OFFSET	(24)
-
-#define MC_CGM_MUXn_CSS_SWIP		(1 << 16)
-#define MC_CGM_MUXn_CSS_SWTRG(css)	((MC_CGM_MUXn_CSS_SWTRG_MASK & (css)) \
-					 >> MC_CGM_MUXn_CSS_SWTRG_OFFSET)
-#define MC_CGM_MUXn_CSS_SWTRG_MASK	(0x000E0000)
-#define MC_CGM_MUXn_CSS_SWTRG_OFFSET	(17)
-#define MC_CGM_MUXn_CSS_SWTRG_SUCCESS	(0x1)
-
-/* MC_CGM_SC_DCn */
-#define CGM_MUXn_DCm(cgm_addr, mux, dc)	((UPTR(cgm_addr) + 0x308) + \
-					 ((mux) * 0x40))
-#define MC_CGM_MUXn_DCm_DIV(val)	(MC_CGM_MUXn_DCm_DIV_MASK & ((val) \
-					 << MC_CGM_MUXn_DCm_DIV_OFFSET))
-#define MC_CGM_MUXn_DCm_DIV_VAL(val)	((MC_CGM_MUXn_DCm_DIV_MASK & (val)) \
-					 >> MC_CGM_MUXn_DCm_DIV_OFFSET)
-#define MC_CGM_MUXn_DCm_DIV_MASK	(0x00FF0000)
-#define MC_CGM_MUXn_DCm_DIV_OFFSET	(16)
-#define MC_CGM_MUXn_DCm_DE		(1 << 31)
-#define MC_CGM_MUXn_CSC_SEL_MASK	(0x0F000000)
-#define MC_CGM_MUXn_CSC_SEL_OFFSET	(24)
-
-/* DIV_UPD_STAT */
-#define CGM_MUXn_DIV_UPD_STAT(cgm_addr, mux)	((UPTR(cgm_addr) + 0x33C + \
-						 (mux) * 0x40))
-#define MC_CGM_MUXn_DIV_UPD_STAT_DIVSTAT(css)	((MC_CGM_MUXn_DIV_UPD_STAT_DIVSTAT_MASK \
-						  & (css)) \
-						  >> MC_CGM_MUXn_DIV_UPD_STAT_DIVSTAT_OFFSET)
-#define MC_CGM_MUXn_DIV_UPD_STAT_DIVSTAT_MASK	(0x00000001)
-#define MC_CGM_MUXn_DIV_UPD_STAT_DIVSTAT_OFFSET	(0)
-
-#define pll_addr(pll)			UPTR(pll)
-#define dfs_addr(pll)			UPTR(pll)
-
-/* PLLDIG PLL Control Register (PLLDIG_PLLCR) */
-#define PLLDIG_PLLCR(pll)		(pll_addr(pll))
-#define PLLDIG_PLLCR_PLLPD		(1 << 31)
-
-/* PLLDIG PLL Status Register (PLLDIG_PLLSR) */
-#define PLLDIG_PLLSR(pll)		((pll_addr(pll)) + 0x00000004)
-#define PLLDIG_PLLSR_LOCK		(1 << 2)
-
-/* PLLDIG PLL Divider Register (PLLDIG_PLLDV) */
-#define PLLDIG_PLLDV(pll)		((pll_addr(pll)) + 0x00000008)
-#define PLLDIG_PLLDV_MFI(div)		(PLLDIG_PLLDV_MFI_MASK & (div))
-#define PLLDIG_PLLDV_MFI_MASK		(0x000000FF)
-
-#define PLLDIG_PLLDV_ODIV1_SET(val)	(PLLDIG_PLLDV_ODIV_MASK & \
-					 (((val) & PLLDIG_PLLDV_ODIV_MAXVALUE) \
-					  << PLLDIG_PLLDV_ODIV_OFFSET))
-#define PLLDIG_PLLDV_ODIV1_MASK		(0x003F0000)
-#define PLLDIG_PLLDV_ODIV1_MAXVALUE	(0x3F)
-#define PLLDIG_PLLDV_ODIV1_OFFSET	(16)
-
-#define PLLDIG_PLLDV_ODIV2_SET(val)	(PLLDIG_PLLDV_ODIV1_MASK & \
-					 (((val) & PLLDIG_PLLDV_ODIV1_MAXVALUE)\
-					  << PLLDIG_PLLDV_ODIV1_OFFSET))
-#define PLLDIG_PLLDV_ODIV2_MASK		(0x7E000000)
-#define PLLDIG_PLLDV_ODIV2_MAXVALUE	(0x3F)
-#define PLLDIG_PLLDV_ODIV2_OFFSET	(25)
-
-#define PLLDIG_PLLDV_RDIV_SET(val)	(PLLDIG_PLLDV_RDIV_MASK & \
-					 (((val) & PLLDIG_PLLDV_RDIV_MAXVALUE) \
-					  << PLLDIG_PLLDV_RDIV_OFFSET))
-#define PLLDIG_PLLDV_RDIV_MASK		(0x00007000)
-#define PLLDIG_PLLDV_RDIV_MAXVALUE	(0x7)
-#define PLLDIG_PLLDV_RDIV_OFFSET	(12)
-#define PLLDIG_PLLDV_RDIV(val)		(((val) & PLLDIG_PLLDV_RDIV_MASK) >> \
-					 PLLDIG_PLLDV_RDIV_OFFSET)
-
-/* PLL Frequency Modulation (PLLFM) */
-#define PLLDIG_PLLFM(pll)		((pll_addr(pll)) + 0x0000000C)
-#define PLLDIG_PLLFM_SSCGBYP_OFFSET	(30)
-#define PLLDIG_PLLFM_SSCGBYP_MASK	(0x40000000)
-#define PLLDIG_PLLFM_SSCGBYP(val)	(((val) & PLLDIG_PLLFM_SSCGBYP_MASK) >>\
-					 PLLDIG_PLLFM_SSCGBYP_OFFSET)
-
-/* PLLDIG PLL Fractional  Divide Register (PLLDIG_PLLFD) */
-#define PLLDIG_PLLFD(pll)		((pll_addr(pll)) + 0x00000010)
-#define PLLDIG_PLLFD_MFN_SET(val)	(PLLDIG_PLLFD_MFN_MASK & (val))
-#define PLLDIG_PLLFD_MFN_MASK		(0x00007FFF)
-#define PLLDIG_PLLFD_SMDEN		(1 << 30)
-
-/* PLL Calibration Register 1 (PLLDIG_PLLCAL1) */
-#define PLLDIG_PLLCAL1(pll)		((pll_addr(pll)) + 0x00000014)
-#define PLLDIG_PLLCAL1_NDAC1_SET(val)	(PLLDIG_PLLCAL1_NDAC1_MASK & \
-					 ((val) << PLLDIG_PLLCAL1_NDAC1_OFFSET))
-#define PLLDIG_PLLCAL1_NDAC1_OFFSET	(24)
-#define PLLDIG_PLLCAL1_NDAC1_MASK	(0x7F000000)
-
-/* PLL Calibration Register 2 (PLLDIG_PLLCAL2) */
-#define PLLDIG_PLLCAL2(pll)		((pll_addr(pll)) + 0x00000018)
-
-/* PLL Clock Mux (PLLCLKMUX) */
-#define PLLDIG_PLLCLKMUX(pll)			(UPTR(pll) + 0x00000020)
-#define PLLDIG_PLLCLKMUX_REFCLKSEL_SET(val)	((val) & \
-						PLLDIG_PLLCLKMUX_REFCLKSEL_MASK)
-#define PLLDIG_PLLCLKMUX_REFCLKSEL_MASK		(0x3)
-
-#define PLLDIG_PLLCLKMUX_REFCLKSEL_SET_FIRC	(0x0)
-#define PLLDIG_PLLCLKMUX_REFCLKSEL_SET_XOSC	(0x1)
-
-/* PLL Output Divider (PLLODIV0 - PLLODIV7) */
-#define PLLDIG_PLLODIV(pll, n)		((pll_addr(pll)) + 0x00000080 + n * 0x4)
-#define PLLDIG_PLLODIV_DIV_SET(val)	(PLLDIG_PLLODIV_DIV_MASK & \
-					 ((val) << PLLDIG_PLLODIV_DIV_OFFSET))
-#define PLLDIG_PLLODIV_DIV_MASK		(0x00FF0000)
-#define PLLDIG_PLLODIV_DIV_OFFSET	(16)
-#define PLLDIG_PLLODIV_DIV(val)		(((val) & PLLDIG_PLLODIV_DIV_MASK) >> \
-					 PLLDIG_PLLODIV_DIV_OFFSET)
-
-#define PLLDIG_PLLODIV_DE		(1 << 31)
-
-/* Digital Frequency Synthesizer (DFS) */
-/* According to the manual there are DFS modules for ARM_PLL, PERIPH_PLL */
-
-/* DFS Control Register (DFS_CTL) */
-#define DFS_CTL(dfs)			((dfs_addr(dfs)) + 0x00000018)
-#define DFS_CTL_RESET			(1 << 1)
-
-#define PLL2DFS(pll)			(pll_addr(pll) + 0x1C000)
-
-/* DFS Port Status Register (DFS_PORTSR) */
-#define DFS_PORTSR(dfs)			((dfs_addr(dfs)) + 0x0000000C)
-/* DFS Port Reset Register (DFS_PORTRESET) */
-#define DFS_PORTRESET(dfs)			((dfs_addr(dfs)) + 0x00000014)
-#define DFS_PORTRESET_PORTRESET_SET(val)	\
-			(((val) & DFS_PORTRESET_PORTRESET_MASK) \
-			<< DFS_PORTRESET_PORTRESET_OFFSET)
-#define DFS_PORTRESET_PORTRESET_MAXVAL		(0x0000003F)
-#define DFS_PORTRESET_PORTRESET_MASK		(0x0000003F)
-#define DFS_PORTRESET_PORTRESET_OFFSET		(0)
-
-/* DFS Divide Register Portn (DFS_DVPORTn) */
-#define DFS_DVPORTn(dfs, n)			((dfs_addr(dfs)) + \
-						 (0x1C + ((n) * 0x4)))
-
-/* Port Loss of Lock Status (PORTLOLSR) */
-#define DFS_PORTOLSR(dfs)			((dfs_addr(dfs)) + 0x00000010)
-#define DFS_PORTOLSR_LOL(n)			(BIT(n) & 0x3FU)
-
-/*
- * The mathematical formula for fdfs_clockout is the following:
- * fdfs_clckout = fdfs_clkin / (2 * (DFS_DVPORTn[MFI] + (DFS_DVPORTn[MFN]/36)))
- */
-#define DFS_DVPORTn_MFI_SET(val)	(DFS_DVPORTn_MFI_MASK & \
-		(((val) & DFS_DVPORTn_MFI_MAXVAL) << DFS_DVPORTn_MFI_OFFSET))
-#define DFS_DVPORTn_MFN_SET(val)	(DFS_DVPORTn_MFN_MASK & \
-		(((val) & DFS_DVPORTn_MFN_MAXVAL) << DFS_DVPORTn_MFN_OFFSET))
-#define DFS_DVPORTn_MFI(val)		(((val) & DFS_DVPORTn_MFI_MASK) >> \
-					 DFS_DVPORTn_MFI_OFFSET)
-#define DFS_DVPORTn_MFN(val)		(((val) & DFS_DVPORTn_MFN_MASK) >> \
-					 DFS_DVPORTn_MFN_OFFSET)
-#define DFS_DVPORTn_MFI_MASK		(0x0000FF00)
-#define DFS_DVPORTn_MFN_MASK		(0x000000FF)
-#define DFS_DVPORTn_MFI_MAXVAL		(0xFF)
-#define DFS_DVPORTn_MFN_MAXVAL		(0xFF)
-#define DFS_DVPORTn_MFI_OFFSET		(8)
-#define DFS_DVPORTn_MFN_OFFSET		(0)
-#define DFS_MAXNUMBER			(6)
-
-#define DFS_PARAMS_Nr			(5)
-
-#define PHI_MAXNUMBER			(8)
-
-/* Frequencies are in Hz */
-#define FIRC_CLK_FREQ			(48000000)
-#define XOSC_CLK_FREQ			(40000000)
-
-#define PLL_MIN_FREQ			(1300000000)
-#define PLL_MAX_FREQ			(5000000000)
-#endif
-
-#endif /*__ARCH_ARM_MACH_S32GEN1_MCCGM_REGS_H__ */
diff --git a/arch/arm/include/asm/arch-s32/s32-gen1/mc_me_regs.h b/arch/arm/include/asm/arch-s32/s32-gen1/mc_me_regs.h
deleted file mode 100644
index 1fa14561dc..0000000000
--- a/arch/arm/include/asm/arch-s32/s32-gen1/mc_me_regs.h
+++ /dev/null
@@ -1,83 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause */
-/*
- * (C) Copyright 2015-2016 Freescale Semiconductor, Inc.
- * Copyright 2017-2022 NXP
- */
-
-#ifndef __ARCH_ARM_MACH_S32GEN1_MCME_REGS_H__
-#define __ARCH_ARM_MACH_S32GEN1_MCME_REGS_H__
-
-#ifndef __ASSEMBLY__
-#include <common.h>
-
-/* MC_ME registers. */
-#define MC_ME_CTL_KEY(MC_ME)		(UPTR(MC_ME) + 0x0)
-#define MC_ME_CTL_KEY_KEY		(0x00005AF0)
-#define MC_ME_CTL_KEY_INVERTEDKEY	(0x0000A50F)
-
-#define MC_ME_MODE_STAT(MC_ME)		(UPTR(MC_ME) + 0x0000000C)
-#define MC_ME_MODE_STAT_PREVMODE	(0x1 << 0)
-
-/* MC_ME partition definitions */
-#define MC_ME_PRTN_N(MC_ME, n)			(UPTR(MC_ME) + 0x100 + \
-						 (n) * 0x200)
-#define MC_ME_PRTN_N_PCONF(MC_ME, n)		(MC_ME_PRTN_N(MC_ME, n))
-#define MC_ME_PRTN_N_PUPD(MC_ME, n)		(MC_ME_PRTN_N(MC_ME, n) + 0x4)
-#define MC_ME_PRTN_N_STAT(MC_ME, n)		(MC_ME_PRTN_N(MC_ME, n) + 0x8)
-#define MC_ME_PRTN_N_COFB0_STAT(MC_ME, n)	(MC_ME_PRTN_N(MC_ME, n) + 0x10)
-#define MC_ME_PRTN_N_COFB0_CLKEN(MC_ME, n)	(MC_ME_PRTN_N(MC_ME, n) + 0x30)
-
-/* MC_ME_PRTN_N_* register fields */
-#define MC_ME_PRTN_N_PCE		(1 << 0)
-#define MC_ME_PRTN_N_PCUD		BIT(0)
-#define MC_ME_PRTN_N_PCS		BIT(0)
-#define MC_ME_PRTN_N_OSSE		BIT(2)
-#define MC_ME_PRTN_N_OSSUD		BIT(2)
-#define MC_ME_PRTN_N_OSSS		BIT(2)
-#define MC_ME_PRTN_N_BLOCK(n)		BIT(n)
-#define MC_ME_PRTN_N_REQ(n)		BIT(n)
-
-/* MC_ME partition 1 m M definitions. */
-#define MC_ME_PRTN_PART(PART, PRTN)	(MC_ME_BASE_ADDR + 0x140UL + \
-					 (PART) * 0x200UL + \
-					 (PRTN) * 0x20UL)
-#define MC_ME_PRTN_N_CORE_M(n, m)      \
-	MC_ME_PRTN_PART(n, m)
-
-#define MC_ME_PRTN_N_PCONF_OFF	0x0
-#define MC_ME_PRTN_N_PUPD_OFF	0x4
-#define MC_ME_PRTN_N_STAT_OFF	0x8
-#define MC_ME_PRTN_N_ADDR_OFF	0xC
-
-#define MC_ME_PRTN_N_CORE_M_PCONF(n, m)	(MC_ME_PRTN_N_CORE_M(n, m))
-#define MC_ME_PRTN_N_CORE_M_PUPD(n, m)	(MC_ME_PRTN_N_CORE_M(n, m) +\
-					 MC_ME_PRTN_N_PUPD_OFF)
-#define MC_ME_PRTN_N_CORE_M_STAT(n, m)	(MC_ME_PRTN_N_CORE_M(n, m) +\
-					 MC_ME_PRTN_N_STAT_OFF)
-#define MC_ME_PRTN_N_CORE_M_ADDR(n, m)	(MC_ME_PRTN_N_CORE_M(n, m) +\
-					 MC_ME_PRTN_N_ADDR_OFF)
-
-/* MC_ME_PRTN_N_CORE_M_* registers fields. */
-#define MC_ME_PRTN_N_CORE_M_PCONF_CCE		BIT(0)
-#define MC_ME_PRTN_N_CORE_M_PUPD_CCUPD		BIT(0)
-#define MC_ME_PRTN_N_CORE_M_STAT_CCS		BIT(0)
-
-#define MC_ME_CM7_PRTN		(0)
-#define MC_ME_CORES_PRTN	(1)
-
-/* Reset domain definitions */
-
-#define RDC_RD_N_CTRL(RDC, N)	(UPTR(RDC) + (0x4 * (N)))
-#define RDC_RD_N_STATUS(RDC, N)	(UPTR(RDC) + 0x80 + (0x4 * (N)))
-#define RD_CTRL_UNLOCK_MASK	(0x80000000)
-#define RD_XBAR_DISABLE_MASK	(0x00000008)
-#define RDC_RD_CTRL_UNLOCK	(1 << 31)
-#define RDC_RD_INTERCONNECT_DISABLE (1 << 3)
-#define RDC_RD_INTERCONNECT_DISABLE_REQ_STAT (1 << 3)
-#define RDC_RD_INTERCONNECT_DISABLE_STAT (1 << 4)
-
-#define RDC_RD_STAT_XBAR_DISABLE_MASK	BIT(4)
-
-#endif
-
-#endif /*__ARCH_ARM_MACH_S32GEN1_MCME_REGS_H__ */
diff --git a/arch/arm/include/asm/arch-s32/s32-gen1/mc_rgm_regs.h b/arch/arm/include/asm/arch-s32/s32-gen1/mc_rgm_regs.h
deleted file mode 100644
index 83b6244a7d..0000000000
--- a/arch/arm/include/asm/arch-s32/s32-gen1/mc_rgm_regs.h
+++ /dev/null
@@ -1,48 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * (C) Copyright 2015-2016 Freescale Semiconductor, Inc.
- * Copyright 2016-2020,2022 NXP
- */
-
-#ifndef __ARCH_ARM_MACH_S32GEN1_MCRGM_REGS_H__
-#define __ARCH_ARM_MACH_S32GEN1_MCRGM_REGS_H__
-#include "s32-gen1-regs.h"
-
-#define RGM_DES(MC_RGM)			(UPTR(MC_RGM) + 0x0)
-#define RGM_DES_POR			(0x00000001)
-
-#define RGM_FES(MC_RGM)			(UPTR(MC_RGM) + 0x8)
-#define RGM_FES_EXT			(0x00000001)
-
-#define RGM_PRST(MC_RGM, per)		(UPTR(MC_RGM) + 0x40 + \
-					 ((per) * 0x8))
-
-#define MC_RGM_PRST_CM7			(0)
-#define PRST_PERIPH_n_RST(n)		BIT(n)
-#define PRST_PERIPH_CM7n_RST(n)		PRST_PERIPH_n_RST(n)
-
-#define RGM_PSTAT(rgm, per)		(UPTR(rgm) + 0x140 + \
-					 ((per) * 0x8))
-#define MC_RGM_PSTAT_CM7		(0)
-#define PSTAT_PERIPH_n_STAT(n)		BIT(n)
-#define PSTAT_PERIPH_CM7n_STAT(n)	PSTAT_PERIPH_n_STAT(n)
-
-#define RGM_PERI_RESET_GROUP		0
-#define RGM_CORES_RESET_GROUP		1
-#define RGM_PFE_RESET_GROUP		2
-
-#define RGM_PERIPH_RST(num)		BIT(num)
-
-/* S32G */
-#define PRST_CM7_CLUSTER_0		0
-#define PRST_CM7_CLUSTER_1		1
-#define PRST_CM7_CLUSTER_2		2
-#define PRST_DDR			3
-#define PRST_PCIE_0_SERDES		4
-#define PRST_PCIE_0_FUNC		5
-#define PRST_PCIE_1_SERDES		16
-#define PRST_PCIE_1_FUNC		17
-#define PRST_PFE			128
-
-#endif /* __ARCH_ARM_MACH_S32GEN1_MCRGM_REGS_H__ */
-
-- 
2.17.1

