From 4111b3b6503f855dcb095b9f9f167e4403554670 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Wed, 9 Feb 2022 15:08:05 +0200
Subject: [PATCH 5/9] s32: remove lowlevel.S and use default armv8 version

Issue: ALB-8474
Upstream-Status: Pending 

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/Makefile   |  1 -
 arch/arm/cpu/armv8/s32/lowlevel.S | 81 -------------------------------
 2 files changed, 82 deletions(-)
 delete mode 100644 arch/arm/cpu/armv8/s32/lowlevel.S

diff --git a/arch/arm/cpu/armv8/s32/Makefile b/arch/arm/cpu/armv8/s32/Makefile
index e2eea21ac1..c7c709418e 100644
--- a/arch/arm/cpu/armv8/s32/Makefile
+++ b/arch/arm/cpu/armv8/s32/Makefile
@@ -9,7 +9,6 @@ ccflags-y += -Iarch/arm/cpu/armv8/s32/
 obj-$(CONFIG_S32_GEN1)		+= s32-gen1/
 obj-$(CONFIG_S32_GEN1)		+= scmi_reset_agent.o
 obj-y				+= cpu.o
-obj-y				+= lowlevel.o
 obj-$(CONFIG_GICSUPPORT)	+= gicsupport.o
 obj-$(CONFIG_MP)		+= mp.o
 obj-$(CONFIG_OF_LIBFDT)		+= fdt.o
diff --git a/arch/arm/cpu/armv8/s32/lowlevel.S b/arch/arm/cpu/armv8/s32/lowlevel.S
deleted file mode 100644
index 79208e8adb..0000000000
--- a/arch/arm/cpu/armv8/s32/lowlevel.S
+++ /dev/null
@@ -1,81 +0,0 @@
-/* SPDX-License-Identifier:     GPL-2.0+ */
-/*
- * (C) Copyright 2014 Freescale Semiconductor
- * Copyright 2017-2022 NXP
- *
- * Extracted from armv8/start.S
- */
-
-/* Allow inclusion assembly macros */
-#define __INCLUDE_ASSEMBLY_MACROS__
-
-#include <config.h>
-#include <linux/linkage.h>
-#include <asm/armv8/mmu.h>
-#include <asm/macro.h>
-#include <asm/gic.h>
-
-ENTRY(lowlevel_init)
-
-	mov	x29, lr			/* Save LR */
-
-#if defined(CONFIG_GICV2) || defined(CONFIG_GICV3)
-	branch_if_slave x0, 1f
-#endif
-
-/* turn on a53 slave cores from a53 master */
-/* deassert cores on reset */
-start_slave_cores:
-
-#if defined(CONFIG_GICV2) || defined(CONFIG_GICV3)
-	branch_if_slave x0, 1f
-	ldr	x0, =GICD_BASE
-	bl	gic_init_secure
-
-1:
-#if defined(CONFIG_GICV3)
-	ldr	x0, =GICR_BASE
-	bl	gic_init_secure_percpu
-#elif defined(CONFIG_GICV2)
-	ldr	x0, =GICD_BASE
-	ldr	x1, =GICC_BASE
-	bl	gic_init_secure_percpu
-#endif
-#endif
-
-#if defined(CONFIG_GICV2) || defined(CONFIG_GICV3)
-	mrs	x0, S3_1_c15_c2_1
-	orr	x0, x0, #(1 << 6)
-	msr	S3_1_c15_c2_1, x0
-	isb
-#endif
-	branch_if_master x0, x1, 2f
-
-	/*
-	 * All slaves will enter EL2 and optionally EL1.
-	 */
-	adr	x4, lowlevel_in_el2
-	ldr	x5, =ES_TO_AARCH64
-	bl	armv8_switch_to_el2
-
-lowlevel_in_el2:
-#ifdef CONFIG_ARMV8_SWITCH_TO_EL1
-	adr	x4, lowlevel_in_el1
-	ldr	x5, =ES_TO_AARCH64
-	bl	armv8_switch_to_el1
-
-lowlevel_in_el1:
-#endif
-
-2:
-	mov	lr, x29			/* Restore LR */
-	ret
-
-ENDPROC(lowlevel_init)
-
-	/* Keep literals not used by the secondary boot page outside it */
-	.ltorg
-
-	/* 64 bit alignment for elements accessed as data */
-	.align 4
-
-- 
2.17.1

