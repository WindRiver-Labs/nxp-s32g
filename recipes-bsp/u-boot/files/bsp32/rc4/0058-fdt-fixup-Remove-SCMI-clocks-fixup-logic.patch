From 4ff8a07258964261aab0f850f8e0b001ba7fd629 Mon Sep 17 00:00:00 2001
From: Ciprian Costea <ciprianmarian.costea@nxp.com>
Date: Mon, 7 Feb 2022 09:55:07 +0200
Subject: [PATCH 58/64] fdt: fixup: Remove SCMI clocks fixup logic

Linux dt will be updated to implement these removed DT changes.

Issue: ALB-8482
Upstream-Status: Pending 

Signed-off-by: Ciprian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/fdt.c | 169 -----------------------------------
 1 file changed, 169 deletions(-)

diff --git a/arch/arm/cpu/armv8/s32/fdt.c b/arch/arm/cpu/armv8/s32/fdt.c
index 0bf411c5d5..fc06820130 100644
--- a/arch/arm/cpu/armv8/s32/fdt.c
+++ b/arch/arm/cpu/armv8/s32/fdt.c
@@ -279,174 +279,6 @@ static void ft_fixup_memory(void *blob, bd_t *bd)
 }
 
 #ifdef CONFIG_S32_ATF_BOOT_FLOW
-static int disable_node_alias(void *blob, const char *alias, uint32_t *phandle)
-{
-	const char *alias_path;
-	int nodeoff, ret;
-
-	alias_path = fdt_get_alias(blob, alias);
-	if (!alias_path) {
-		pr_err("Failed to get path of '%s' alias\n", alias);
-		return -EIO;
-	}
-
-	nodeoff = fdt_path_offset(blob, alias_path);
-	if (nodeoff < 0) {
-		pr_err("Failed to get offset of '%s' node\n", alias_path);
-		return nodeoff;
-	}
-
-	*phandle = fdt_get_phandle(blob, nodeoff);
-	if (*phandle < 0) {
-		pr_err("Failed to get phandle of '%s' node\n", alias_path);
-		return *phandle;
-	}
-
-	ret = fdt_set_node_status(blob, nodeoff, FDT_STATUS_DISABLED, 0);
-	if (ret) {
-		pr_err("Failed to disable '%s' node\n", alias_path);
-		return ret;
-	}
-
-	ret = fdt_delprop(blob, nodeoff, "phandle");
-	if (ret) {
-		pr_err("Failed to remove phandle property of '%s' node: %s\n",
-		       alias_path, fdt_strerror(ret));
-		return ret;
-	}
-
-	return 0;
-}
-
-static int disable_clk_node(void *blob, uint32_t *phandle)
-{
-	return disable_node_alias(blob, "clks", phandle);
-}
-
-static int disable_reset_node(void *blob, uint32_t *phandle)
-{
-	return disable_node_alias(blob, "reset", phandle);
-}
-
-static int enable_scmi_protocol(void *blob, const char *path, uint32_t phandle)
-{
-	int nodeoff, ret;
-
-	nodeoff = fdt_path_offset(blob, path);
-	if (nodeoff < 0) {
-		pr_err("Failed to get offset of '%s' node\n", path);
-		return nodeoff;
-	}
-
-	ret = fdt_set_phandle(blob, nodeoff, phandle);
-	if (ret) {
-		pr_err("Failed to set phandle property of '%s' node\n", path);
-		return ret;
-	}
-
-	return 0;
-}
-
-static int enable_scmi_clk_node(void *blob, uint32_t phandle)
-{
-	const char *path = "/firmware/scmi/protocol@14";
-
-	return enable_scmi_protocol(blob, path, phandle);
-}
-
-static int enable_scmi_reset_node(void *blob, uint32_t phandle)
-{
-	const char *path = "/firmware/scmi/protocol@16";
-
-	return enable_scmi_protocol(blob, path, phandle);
-}
-
-static int enable_scmi_mbox(void *blob)
-{
-	int nodeoff, ret;
-
-	nodeoff = fdt_node_offset_by_compatible(blob, -1, "arm,smc-mbox");
-	if (nodeoff < 0) {
-		pr_debug("Failed to get offset of 'arm,smc-mbox' node\n");
-		return -ENODEV;
-	}
-
-	ret = fdt_set_node_status(blob, nodeoff, FDT_STATUS_OKAY, 0);
-	if (ret) {
-		pr_err("Failed to enable 'arm,smc-mbox' node\n");
-		return -ENXIO;
-	}
-
-	return 0;
-}
-
-static int enable_scmi_smc(void *blob)
-{
-	int nodeoff, ret;
-
-	nodeoff = fdt_node_offset_by_compatible(blob, -1, "arm,scmi-smc");
-	if (nodeoff < 0) {
-		pr_debug("Failed to get offset of 'arm,scmi-smc' node\n");
-		return -ENODEV;
-	}
-
-	ret = fdt_set_node_status(blob, nodeoff, FDT_STATUS_OKAY, 0);
-	if (ret) {
-		pr_err("Failed to enable 'arm,scmi-smc' node\n");
-		return -ENXIO;
-	}
-
-	return 0;
-}
-
-static int enable_scmi_clks(void *blob)
-{
-	u32 phandle;
-	int ret;
-
-	ret = disable_clk_node(blob, &phandle);
-	if (ret)
-		return ret;
-
-	ret = enable_scmi_clk_node(blob, phandle);
-	if (ret)
-		return ret;
-
-	return 0;
-}
-
-static int enable_scmi_reset(void *blob)
-{
-	u32 phandle;
-	int ret;
-
-	ret = disable_reset_node(blob, &phandle);
-	if (ret)
-		return ret;
-
-	ret = enable_scmi_reset_node(blob, phandle);
-	if (ret)
-		return ret;
-
-	return 0;
-}
-
-static void ft_fixup_scmi(void *blob)
-{
-	if (enable_scmi_clks(blob))
-		return;
-
-	if (enable_scmi_reset(blob))
-		return;
-
-	/* As of Linux Kernel version 5.10, the 'arm,smc-mbox'
-	 * dts node is no longer used
-	 */
-	if (enable_scmi_mbox(blob) == -ENODEV)
-		if (enable_scmi_smc(blob))
-			pr_err("Failed to enable 'arm,smc-mbox' or 'arm,scmi-smc' node\n");
-}
-
 static int add_atf_reserved_memory(const void *old_blob, void *new_blob)
 {
 	int ret, off;
@@ -906,7 +738,6 @@ void ft_cpu_setup(void *blob, bd_t *bd)
 	ft_fixup_memory(blob, bd);
 	ft_fixup_ddr_polling(gd->fdt_blob, blob);
 #ifdef CONFIG_S32_ATF_BOOT_FLOW
-	ft_fixup_scmi(blob);
 	ft_fixup_atf(gd->fdt_blob, blob);
 #endif
 #ifdef CONFIG_PCIE_S32GEN1
-- 
2.17.1

