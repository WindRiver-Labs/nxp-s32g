From 7cc85e188554fb38b6bd39a98b6149b033ebd53e Mon Sep 17 00:00:00 2001
From: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Date: Fri, 18 Mar 2022 15:15:08 +0200
Subject: [PATCH 7/7] s32:serdes:hwconfig: Add 'skip' option to hwconfig

This option allows skipping SERDES/PCIe controller configuration in u-boot,
thus allowing full config to be performed from Linux directly.
Some PCIe devices (e.g. PCIe switches) cannot be configured twice, as the
PHY does not link and remains dangling in POLL_ACTIVE (0x2) state.

Issue: ALB-7415

Upstream-Status: Pending 

Signed-off-by: Ionut Vicovan <Ionut.Vicovan@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../asm/arch-s32/s32-gen1/serdes_hwconfig.h   |  3 +-
 drivers/pci/serdes_s32gen1.c                  | 31 ++++++++++++++-----
 2 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/arch/arm/include/asm/arch-s32/s32-gen1/serdes_hwconfig.h b/arch/arm/include/asm/arch-s32/s32-gen1/serdes_hwconfig.h
index 20e9a6e570..a7c7cd2b8a 100644
--- a/arch/arm/include/asm/arch-s32/s32-gen1/serdes_hwconfig.h
+++ b/arch/arm/include/asm/arch-s32/s32-gen1/serdes_hwconfig.h
@@ -1,5 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
-/* Copyright 2021 NXP */
+/* Copyright 2021,2022 NXP */
 
 #ifndef SERDES_HWCONFIG_H
 #define SERDES_HWCONFIG_H
@@ -35,6 +35,7 @@ enum serdes_dev_type {
 	/* TODO: If both PCIe/SGMII bifurcation modes are used, we may
 	 * need to use 2 SGMII modes - SGMII0 and SGMII1
 	 */
+	SERDES_SKIP = 0x20
 };
 
 /* New enum */
diff --git a/drivers/pci/serdes_s32gen1.c b/drivers/pci/serdes_s32gen1.c
index 46092592e2..01e275ee0b 100644
--- a/drivers/pci/serdes_s32gen1.c
+++ b/drivers/pci/serdes_s32gen1.c
@@ -461,6 +461,11 @@ enum serdes_dev_type s32_serdes_get_mode_from_hwconfig(int id)
 	if (hwconfig_subarg_cmp(pcie_name, "mode", "ep&sgmii"))
 		devtype = PCIE_EP | SGMII;
 
+	if (devtype != SERDES_INVALID &&
+	    (hwconfig_subarg_cmp(pcie_name, "skip", "true") ||
+	    hwconfig_subarg_cmp(pcie_name, "skip", "1")))
+		devtype |= SERDES_SKIP;
+
 	return devtype;
 }
 
@@ -534,8 +539,12 @@ enum serdes_mode s32_serdes_get_op_mode_from_hwconfig(int id)
 	enum serdes_dev_type mod;
 	enum serdes_xpcs_mode xpcs_mode;
 
-	/* Mode 3 */
 	mod = s32_serdes_get_mode_from_hwconfig(id);
+
+	/* Skip the 'skip' flag */
+	mod &= ~(uint32_t)(SERDES_SKIP);
+
+	/* Mode 3 */
 	if (mod == SGMII)
 		return SERDES_MODE_SGMII_SGMII;
 
@@ -659,12 +668,6 @@ static int s32_serdes_probe(struct udevice *dev)
 	if (ret)
 		return ret;
 
-	ret = enable_serdes_clocks(dev);
-	if (ret) {
-		dev_err(dev, "Failed to enable SERDES clocks\n");
-		return ret;
-	}
-
 	pcie->devtype = s32_serdes_get_mode_from_hwconfig(pcie->id);
 	if (pcie->devtype == SERDES_INVALID) {
 		printf("Not configuring SerDes%d,", pcie->id);
@@ -672,6 +675,20 @@ static int s32_serdes_probe(struct udevice *dev)
 		return ret;
 	}
 
+	if (pcie->devtype & SERDES_SKIP) {
+		printf("Skipping configuration for SerDes%d,", pcie->id);
+
+		/* Skip the 'skip' flag for other settings */
+		pcie->devtype &= ~(uint32_t)(SERDES_SKIP);
+		return ret;
+	}
+
+	ret = enable_serdes_clocks(dev);
+	if (ret) {
+		dev_err(dev, "Failed to enable SERDES clocks\n");
+		return ret;
+	}
+
 	pcie->clktype = s32_serdes_get_clock_from_hwconfig(pcie->id);
 	/* Get XPCS configuration */
 	pcie->xpcs_mode = s32_serdes_get_xpcs_cfg_from_hwconfig(pcie->id);
-- 
2.17.1

