From 5029751aab3dde09bbd3ef99fa11f8dc6c44cc25 Mon Sep 17 00:00:00 2001
From: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Date: Fri, 9 Jul 2021 11:16:08 +0300
Subject: [PATCH 26/29] s32gen1: pcie: Fix display of PCIE EP devices

Each bus is being displayed multiple times.
We fix this by keeping track of parsed PCIE buses.

Upstream-Status: Pending

Issue: ALB-7019
Signed-off-by: Ciprian Marian Costea <ciprianmarian.costea@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/pci/pcie_s32gen1.c | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/pci/pcie_s32gen1.c b/drivers/pci/pcie_s32gen1.c
index 5ff4017d48..70045b23db 100644
--- a/drivers/pci/pcie_s32gen1.c
+++ b/drivers/pci/pcie_s32gen1.c
@@ -48,6 +48,8 @@
 #define PCIE_MIN_SOC_REV_SUPPORTED 0x1
 #endif
 
+#define PCI_MAX_BUS_NUM	256
+
 DECLARE_GLOBAL_DATA_PTR;
 
 LIST_HEAD(s32_pcie_list);
@@ -926,7 +928,7 @@ static int s32_pcie_probe(struct udevice *dev)
 }
 
 static void show_pci_devices(struct udevice *bus, struct udevice *dev,
-		int depth, int last_flag)
+		int depth, int last_flag, bool *parsed_bus)
 {
 	int i, is_last;
 	struct udevice *child;
@@ -950,6 +952,7 @@ static void show_pci_devices(struct udevice *bus, struct udevice *dev,
 	pplat = dev_get_parent_platdata(dev);
 	printf("%02x:%02x.%02x", bus->seq,
 	       PCI_DEV(pplat->devfn), PCI_FUNC(pplat->devfn));
+	parsed_bus[bus->seq] = true;
 
 	for (i = (PCIE_ALIGNMENT - depth); i > 0; i--)
 		printf("    ");
@@ -958,7 +961,7 @@ static void show_pci_devices(struct udevice *bus, struct udevice *dev,
 	list_for_each_entry(child, &dev->child_head, sibling_node) {
 		is_last = list_is_last(&child->sibling_node, &dev->child_head);
 		show_pci_devices(dev, child, depth + 1,
-			(last_flag << 1) | is_last);
+			(last_flag << 1) | is_last, parsed_bus);
 	}
 }
 
@@ -974,6 +977,9 @@ void show_pcie_devices(void)
 {
 	struct udevice *bus;
 	bool show_header = true;
+	bool parsed_bus[PCI_MAX_BUS_NUM];
+
+	memset(parsed_bus, false, sizeof(bool) * PCI_MAX_BUS_NUM);
 
 	for (uclass_find_first_device(UCLASS_PCI, &bus);
 		     bus;
@@ -981,6 +987,9 @@ void show_pcie_devices(void)
 		struct udevice *dev;
 		struct s32_pcie *pcie = dev_get_priv(bus);
 
+		if (parsed_bus[bus->seq])
+			continue;
+
 		if (pcie && pcie->enabled) {
 			if (show_header) {
 				printf(PCIE_TABLE_HEADER);
@@ -997,7 +1006,8 @@ void show_pcie_devices(void)
 					&bus->child_head);
 			if (dev->seq < 0)
 				continue;
-			show_pci_devices(bus, dev, depth - 3, is_last);
+			show_pci_devices(bus, dev, depth - 3,
+					is_last, parsed_bus);
 		}
 	}
 }
-- 
2.17.1

