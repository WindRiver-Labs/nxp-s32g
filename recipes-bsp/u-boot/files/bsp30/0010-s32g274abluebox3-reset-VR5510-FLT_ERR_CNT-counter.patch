From 86f4426701a7b50935726dc16004dcb986750794 Mon Sep 17 00:00:00 2001
From: Andrei Botila <andrei.botila@nxp.com>
Date: Fri, 4 Jun 2021 15:22:17 +0300
Subject: [PATCH 10/14] s32g274abluebox3: reset VR5510 FLT_ERR_CNT counter

S32G can not be resetted more times than the FLT_ERR_CNT_LIMIT times.
In order to bypass this we reset FLT_ERR_CNT once it reaches
its intermediate value.

Upstream-Status: Pending

Issue: ALB-7068

Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 arch/arm/cpu/armv8/s32/cpu.c | 54 ++++++++++++++++++++++++++++++++++++
 include/power/vr5510.h       | 13 ++++++++-
 2 files changed, 66 insertions(+), 1 deletion(-)

diff --git a/arch/arm/cpu/armv8/s32/cpu.c b/arch/arm/cpu/armv8/s32/cpu.c
index 867583e464..211669559a 100644
--- a/arch/arm/cpu/armv8/s32/cpu.c
+++ b/arch/arm/cpu/armv8/s32/cpu.c
@@ -416,6 +416,54 @@ static int disable_vr5510_wdg(void)
 
 	return watchdog_refresh(pmic);
 }
+
+static int vr5510_reset_flt_err_cnt(void)
+{
+	struct udevice *pmic;
+	uint fs_i_fssm, flt_err_cnt, flt_err_cnt_lmt;
+	int ret;
+
+	ret = pmic_get(VR5510_FSU_NAME, &pmic);
+	if (ret)
+		return ret;
+
+	fs_i_fssm = pmic_reg_read(pmic, VR5510_FS_I_FSSM);
+	flt_err_cnt_lmt = VR5510_ERR_CNT_LMT(fs_i_fssm);
+	flt_err_cnt = VR5510_ERR_CNT(fs_i_fssm);
+
+	switch (flt_err_cnt_lmt) {
+	case ERR_CNT_LIMIT_00:
+		flt_err_cnt_lmt = 2;
+		break;
+	case ERR_CNT_LIMIT_10:
+		flt_err_cnt_lmt = 8;
+		break;
+	case ERR_CNT_LIMIT_11:
+		flt_err_cnt_lmt = 12;
+		break;
+	case ERR_CNT_LIMIT_01:
+	default:
+		flt_err_cnt_lmt = 6;
+		break;
+	}
+
+	/* Reset FLT_ERR_CNT only for its intermediate value. */
+	if (!flt_err_cnt || flt_err_cnt < (flt_err_cnt_lmt / 2) - 1)
+		return 0;
+
+	pr_warn("VR5510 FLT_ERR_CNT counter at %d, resetting to 0\n",
+		flt_err_cnt);
+	while (flt_err_cnt) {
+		ret = watchdog_refresh(pmic);
+		if (ret)
+			return ret;
+
+		fs_i_fssm = pmic_reg_read(pmic, VR5510_FS_I_FSSM);
+		flt_err_cnt = VR5510_ERR_CNT(fs_i_fssm);
+	}
+
+	return 0;
+}
 #endif
 
 int arch_cpu_init(void)
@@ -485,6 +533,12 @@ int arch_early_init_r(void)
 	int rv = 0;
 
 #if defined(CONFIG_DM_PMIC_VR5510) && !defined(CONFIG_S32_ATF_BOOT_FLOW)
+#if defined(CONFIG_TARGET_S32G274ABLUEBOX3)
+	rv = vr5510_reset_flt_err_cnt();
+	if (rv)
+		return rv;
+#endif
+
 	rv = disable_vr5510_wdg();
 	if (rv)
 		return rv;
diff --git a/include/power/vr5510.h b/include/power/vr5510.h
index bc126e305d..f9924a89f9 100644
--- a/include/power/vr5510.h
+++ b/include/power/vr5510.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
 /*
- * Copyright 2020 NXP
+ * Copyright 2020-2021 NXP
  */
 #ifndef VR5510_PMIC_H
 #define VR5510_PMIC_H
@@ -83,6 +83,10 @@
 #define VR5510_FS_I_ABIST2_CTRL			5
 #define VR5510_FS_I_NOT_ABIST2_CTRL		6
 #define VR5510_FS_I_WD_CFG			7
+#define VR5510_ERR_CNT_LMT_OFFSET		14
+#define VR5510_ERR_CNT_LMT_MASK			(3 << VR5510_ERR_CNT_LMT_OFFSET)
+#define VR5510_ERR_CNT_LMT(V)		(((V) & VR5510_ERR_CNT_LMT_MASK) \
+					 >> VR5510_ERR_CNT_LMT_OFFSET)
 #define VR5510_ERR_CNT_MASK			0xF
 #define VR5510_ERR_CNT(V)			((V) & VR5510_ERR_CNT_MASK)
 #define VR5510_FS_I_NOT_WD_CFG			8
@@ -146,4 +150,11 @@ enum fs_states {
 
 };
 
+enum flt_err_cnt_limit {
+	ERR_CNT_LIMIT_00 = 0,
+	ERR_CNT_LIMIT_01,
+	ERR_CNT_LIMIT_10,
+	ERR_CNT_LIMIT_11,
+};
+
 #endif
-- 
2.17.1

