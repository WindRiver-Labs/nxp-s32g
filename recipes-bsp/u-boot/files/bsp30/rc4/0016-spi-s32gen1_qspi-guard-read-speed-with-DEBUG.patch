From 70c532a06a1d1bd6b462acac2bd7579f5ea94695 Mon Sep 17 00:00:00 2001
From: "Radu Pirea (NXP OSS)" <radu-nicolae.pirea@oss.nxp.com>
Date: Tue, 27 Jul 2021 15:32:35 +0300
Subject: [PATCH 16/16] spi: s32gen1_qspi: guard read speed with DEBUG

Print information about read speed only if DEBUG is defined.

Issue: ALB-7448

Upstream-Status: Pending

Signed-off-by: Radu Pirea (NXP OSS) <radu-nicolae.pirea@oss.nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/spi/s32gen1_qspi.c | 41 ++++++++++++++++++++++++++++----------
 1 file changed, 30 insertions(+), 11 deletions(-)

diff --git a/drivers/spi/s32gen1_qspi.c b/drivers/spi/s32gen1_qspi.c
index 196c8bb3aa..25dd1e6196 100644
--- a/drivers/spi/s32gen1_qspi.c
+++ b/drivers/spi/s32gen1_qspi.c
@@ -769,10 +769,37 @@ int s32gen1_enable_spi(struct fsl_qspi_priv *priv, bool force)
 	return 0;
 }
 
+static inline void s32gen1_qspi_print_read_speed(const struct spi_mem_op *op,
+						 unsigned long us_before)
+{
+#ifdef DEBUG
+	unsigned long us_after, us;
+
+	us_after = timer_get_boot_us();
+	us = us_after - us_before;
+	printf("%u bytes read in %lu us", op->data.nbytes, us);
+	if (us > 0) {
+		puts(" (");
+		print_size((double)op->data.nbytes / us * 1000000, "/s");
+		puts(")");
+	}
+	puts("\n");
+#endif
+}
+
+static inline unsigned long s32gen1_get_initial_ts(void)
+{
+#ifdef DEBUG
+	return timer_get_boot_us();
+#else
+	return 0;
+#endif
+}
+
 static int qspi_read_mem(struct fsl_qspi_priv *priv,
 			 const struct spi_mem_op *op, u8 lut_cfg)
 {
-	unsigned long us_before, us_after, us;
+	unsigned long us_before;
 	struct fsl_qspi_regs *regs = priv->regs;
 	u32 mcr_reg;
 
@@ -785,18 +812,10 @@ static int qspi_read_mem(struct fsl_qspi_priv *priv,
 	invalidate_dcache_range(op->addr.val, op->addr.val + op->data.nbytes);
 
 	/* Read out the data directly from the AHB buffer. */
-	us_before = timer_get_boot_us();
+	us_before = s32gen1_get_initial_ts();
 	memcpy_fromio(op->data.buf.in, (void *)(uintptr_t)op->addr.val,
 		      op->data.nbytes);
-	us_after = timer_get_boot_us();
-	us = us_after - us_before;
-	printf("%u bytes read in %lu us", op->data.nbytes, us);
-	if (us > 0) {
-		puts(" (");
-		print_size((double)op->data.nbytes / us * 1000000, "/s");
-		puts(")");
-	}
-	puts("\n");
+	s32gen1_qspi_print_read_speed(op, us_before);
 
 	qspi_write32(priv->flags, &regs->mcr, mcr_reg);
 	return 0;
-- 
2.17.1

