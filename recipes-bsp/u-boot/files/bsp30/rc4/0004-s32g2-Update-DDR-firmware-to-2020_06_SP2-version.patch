From 64997cda42e1d8fd0f5ec95782ef4606a2f0d0f4 Mon Sep 17 00:00:00 2001
From: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Date: Mon, 26 Jul 2021 12:23:10 +0300
Subject: [PATCH 04/16] s32g2: Update DDR firmware to 2020_06_SP2 version

This updated DDR driver to firmware 2020_06_SP2 for S32G2
revision 2 and removes support for revision 1.

Upstream-Status: Pending

Issue: ALB-7328
Signed-off-by: Ghennadi Procopciuc <ghennadi.procopciuc@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 board/freescale/s32-gen1/Makefile             |    4 -
 board/freescale/s32-gen1/ddr_init.c           |   34 +-
 board/freescale/s32-gen1/ddr_init.h           |   83 +-
 board/freescale/s32-gen1/ddr_utils.c          |  227 +-
 board/freescale/s32-gen1/ddr_utils.h          |  186 +-
 board/freescale/s32-gen1/ddrss_cfg.c          |   52 +-
 board/freescale/s32-gen1/imem_cfg.c           | 7426 ++++++++---------
 board/freescale/s32-gen1/s32g274a/ddrc_cfg.c  |  260 +-
 board/freescale/s32-gen1/s32g274a/dmem_cfg.c  |   34 +-
 .../freescale/s32-gen1/s32g274a/dq_swap_cfg.c |    2 +-
 board/freescale/s32-gen1/s32g274a/phy_cfg.c   |   10 +-
 board/freescale/s32-gen1/s32g274a/pie_cfg.c   |   10 +-
 .../s32-gen1/s32g274a/rev2/ddrc_cfg_rev2.c    |  181 -
 .../s32-gen1/s32g274a/rev2/dmem_cfg_rev2.c    | 1574 ----
 .../s32-gen1/s32g274a/rev2/phy_cfg_rev2.c     |  123 -
 .../s32-gen1/s32g274a/rev2/pie_cfg_rev2.c     |  595 --
 16 files changed, 4184 insertions(+), 6617 deletions(-)
 delete mode 100644 board/freescale/s32-gen1/s32g274a/rev2/ddrc_cfg_rev2.c
 delete mode 100644 board/freescale/s32-gen1/s32g274a/rev2/dmem_cfg_rev2.c
 delete mode 100644 board/freescale/s32-gen1/s32g274a/rev2/phy_cfg_rev2.c
 delete mode 100644 board/freescale/s32-gen1/s32g274a/rev2/pie_cfg_rev2.c

diff --git a/board/freescale/s32-gen1/Makefile b/board/freescale/s32-gen1/Makefile
index ee649f8061..71de05663b 100644
--- a/board/freescale/s32-gen1/Makefile
+++ b/board/freescale/s32-gen1/Makefile
@@ -42,10 +42,6 @@ obj-$(CONFIG_SYS_FSL_DDRSS) +=	ddr_density.o \
 				s32g274a/dq_swap_cfg.o \
 				s32g274a/phy_cfg.o \
 				s32g274a/pie_cfg.o \
-				s32g274a/rev2/ddrc_cfg_rev2.o \
-				s32g274a/rev2/dmem_cfg_rev2.o \
-				s32g274a/rev2/phy_cfg_rev2.o \
-				s32g274a/rev2/pie_cfg_rev2.o \
 
 endif
 
diff --git a/board/freescale/s32-gen1/ddr_init.c b/board/freescale/s32-gen1/ddr_init.c
index 30cafeed7d..49071cde67 100644
--- a/board/freescale/s32-gen1/ddr_init.c
+++ b/board/freescale/s32-gen1/ddr_init.c
@@ -33,11 +33,8 @@
 
 static u32 ddrc_init_cfg(struct ddrss_config *config);
 static u32 execute_training(struct ddrss_config *config);
-static u32 load_register_cfg(size_t size, struct regconf cfg[]);
-static u32 load_dq_cfg(size_t size, struct dqconf cfg[]);
-static void set_optimal_pll(void);
 static u32 load_phy_image(u32 start_addr, size_t size,
-			  u16 image[]);
+			       u16 image[]);
 
 /* Main method needed to initialize ddr subsystem. */
 u32 ddr_init(void)
@@ -64,7 +61,7 @@ u32 ddr_init(void)
 			return ret;
 
 		/* Execute post training setup */
-		ret = post_train_setup();
+		ret = post_train_setup(STORE_CSR_MASK | INIT_MEM_MASK);
 		if (ret != NO_ERR)
 			return ret;
 	}
@@ -90,7 +87,7 @@ static u32 execute_training(struct ddrss_config *config)
 		return ret;
 
 	/* Initialize phy module */
-	ret = load_register_cfg(config->phy_cfg_size, config->phy_cfg);
+	ret = load_register_cfg_16(config->phy_cfg_size, config->phy_cfg);
 	if (ret != NO_ERR)
 		return ret;
 
@@ -159,34 +156,47 @@ static u32 execute_training(struct ddrss_config *config)
 
 	writel(UNLOCK_CSR_ACCESS, MICROCONT_MUX_SEL);
 	/*  Load pie image after training has executed */
-	ret = load_register_cfg(config->pie_cfg_size, config->pie_cfg);
+	ret = load_register_cfg_16(config->pie_cfg_size, config->pie_cfg);
 	writel(LOCK_CSR_ACCESS, MICROCONT_MUX_SEL);
 	return ret;
 }
 
 /* Load register array into memory. */
-static u32 load_register_cfg(size_t size, struct regconf cfg[])
+u32 load_register_cfg_16(size_t size, struct regconf_16 cfg[])
+{
+	size_t i;
+
+	for (i = 0; i < size; i++)
+		writew(cfg[i].data, (uintptr_t)cfg[i].addr);
+
+	return NO_ERR;
+}
+
+/* Load register array into memory. */
+u32 load_register_cfg(size_t size, struct regconf cfg[])
 {
 	size_t i;
 
 	for (i = 0; i < size; i++)
 		writel(cfg[i].data, (uintptr_t)cfg[i].addr);
+
 	return NO_ERR;
 }
 
 /* Load dq config array into memory. */
-static u32 load_dq_cfg(size_t size, struct dqconf cfg[])
+u32 load_dq_cfg(size_t size, struct dqconf cfg[])
 {
 	size_t i;
 
 	for (i = 0; i < size; i++)
 		writel(cfg[i].data, (uintptr_t)cfg[i].addr);
+
 	return NO_ERR;
 }
 
 /* Load image into memory at consecutive addresses */
 static u32 load_phy_image(u32 start_addr, size_t size,
-			  u16 image[])
+			       u16 image[])
 {
 	size_t i;
 
@@ -198,9 +208,9 @@ static u32 load_phy_image(u32 start_addr, size_t size,
 }
 
 /* Ensure optimal phy pll settings. */
-static void set_optimal_pll(void)
+void set_optimal_pll(void)
 {
-	/* Configure phy pll for 2667MTS data rate */
+	/* Configure phy pll for 3200MTS data rate */
 	writel(0x00000021, MASTER_PLLCTRL1);
 	writel(0x00000024, MASTER_PLLTESTMODE);
 	writel(0x0000017f, MASTER_PLLCTRL4);
diff --git a/board/freescale/s32-gen1/ddr_init.h b/board/freescale/s32-gen1/ddr_init.h
index 132ae24805..691a61f0ae 100644
--- a/board/freescale/s32-gen1/ddr_init.h
+++ b/board/freescale/s32-gen1/ddr_init.h
@@ -45,13 +45,12 @@
 #define LOCK_CSR_ACCESS   0x00000001
 #define UNLOCK_CSR_ACCESS 0x00000000
 
+#define FIRMWARE_VERSION "2020_06_SP2"
+
 /* Enum for DRAM Type */
 enum dram_type {
-	DDR4,
-	DDR3,
-	LPDDR4,
-	LPDDR3,
-	DDR5
+	DDR3L = 1,
+	LPDDR4
 };
 
 struct regconf {
@@ -59,18 +58,23 @@ struct regconf {
 	u32 data;
 };
 
+struct regconf_16 {
+	u32 addr;
+	u16 data;
+};
+
 struct dqconf {
 	u32 addr;
 	u8 data;
 };
 
 struct ddrss_config {
-	uint8_t memory_type;
+	u8 memory_type;
 	struct regconf *ddrc_cfg;
 	size_t ddrc_cfg_size;
 	struct dqconf *dq_swap_cfg;
 	size_t dq_swap_cfg_size;
-	struct regconf *phy_cfg;
+	struct regconf_16 *phy_cfg;
 	size_t phy_cfg_size;
 	u16 *imem_1d;
 	size_t imem_1d_size;
@@ -80,7 +84,7 @@ struct ddrss_config {
 	size_t imem_2d_size;
 	u16 *dmem_2d;
 	size_t dmem_2d_size;
-	struct regconf *pie_cfg;
+	struct regconf_16 *pie_cfg;
 	size_t pie_cfg_size;
 };
 
@@ -88,7 +92,7 @@ extern struct regconf ddrc_cfg[];
 extern size_t ddrc_cfg_size;
 extern struct dqconf dq_swap_cfg[];
 extern size_t dq_swap_cfg_size;
-extern struct regconf phy_cfg[];
+extern struct regconf_16 phy_cfg[];
 extern size_t phy_cfg_size;
 extern u16 imem_1d[];
 extern size_t imem_1d_size;
@@ -98,31 +102,52 @@ extern u16 imem_2d[];
 extern size_t imem_2d_size;
 extern u16 dmem_2d[];
 extern size_t dmem_2d_size;
-extern struct regconf pie_cfg[];
+extern struct regconf_16 pie_cfg[];
 extern size_t pie_cfg_size;
 extern struct ddrss_config configs[];
 extern size_t ddrss_config_size;
 
-extern struct regconf ddrc_cfg_rev2[];
-extern size_t ddrc_cfg_size_rev2;
-extern struct dqconf dq_swap_cfg_rev2[];
-extern size_t dq_swap_cfg_size_rev2;
-extern struct regconf phy_cfg_rev2[];
-extern size_t phy_cfg_size_rev2;
-extern u16 imem_1d_rev2[];
-extern size_t imem_1d_size_rev2;
-extern u16 dmem_1d_rev2[];
-extern size_t dmem_1d_size_rev2;
-extern u16 imem_2d_rev2[];
-extern size_t imem_2d_size_rev2;
-extern u16 dmem_2d_rev2[];
-extern size_t dmem_2d_size_rev2;
-extern struct regconf pie_cfg_rev2[];
-extern size_t pie_cfg_size_rev2;
-extern struct ddrss_config configs_rev2[];
-extern size_t ddrss_config_size_rev2;
-
+/*
+ * Full initialization of DDR SubSystem.
+ * @return - error code, 0 if init succeeds, non-zero on error.
+ */
 u32 ddr_init(void);
+
+/* Set initial sizes for all configuration images. */
 void init_image_sizes(void);
 
+/*
+ * Writes the data associated for each address.
+ *
+ * @param size - size of the array, number of elements
+ * @param cfg - array of configuration elements
+ * @return - error code, 0 if init succeeds, non-zero on error.
+ */
+u32 load_register_cfg(size_t size, struct regconf cfg[]);
+
+/*
+ * Writes the data associated for each address. Similar to
+ * @load_register_cfg but uses 16bit data elements for memory
+ * usage optimization.
+ *
+ * @param size - size of the array, number of elements
+ * @param cfg - array of configuration elements
+ * @return - error code, 0 if init succeeds, non-zero on error.
+ */
+u32 load_register_cfg_16(size_t size, struct regconf_16 cfg[]);
+
+/*
+ * Writes the data associated for each address. Similar to
+ * @load_register_cfg but uses 8bit data elements for memory
+ * usage optimization.
+ *
+ * @param size - size of the array, number of elements
+ * @param cfg - array of configuration elements
+ * @return - error code, 0 if init succeeds, non-zero on error.
+ */
+u32 load_dq_cfg(size_t size, struct dqconf cfg[]);
+
+/* Updates PHY internal PLL settings. */
+void set_optimal_pll(void);
+
 #endif /* DDR_INIT_H */
diff --git a/board/freescale/s32-gen1/ddr_utils.c b/board/freescale/s32-gen1/ddr_utils.c
index 2fd3d9b0b9..64f0f8c2ca 100644
--- a/board/freescale/s32-gen1/ddr_utils.c
+++ b/board/freescale/s32-gen1/ddr_utils.c
@@ -35,23 +35,14 @@ static u32 enable_axi_ports(void);
 static u32 get_mail(u32 *mail);
 static u32 ack_mail(void);
 
-/*
- * Do not deinitialize this variable.
- * We want this variable to be stored in .data section.
- * If left un-initialized, or if initialized with value 0,
- * it will be stored in .bss section and therefore not be
- * available after u-boot is relocated into DRAM, when its
- * value will be used.
- */
 u8 polling_needed = 2;
 
 /* Modify bitfield value with delta, given bitfield position and mask */
-static inline bool update_bf(u32 *v, u8 pos, u32 mask,
-			     int delta)
+bool update_bf(u32 *v, u8 pos, u32 mask, int32_t delta)
 {
 	if (mask >= (((*v >> pos) & mask) + delta)) {
 		*v = (*v & ~(mask << pos)) | ((((*v >> pos)
-						& mask) + delta) << pos);
+			& mask) + delta) << pos);
 		return true;
 	} else {
 		return false;
@@ -69,37 +60,37 @@ bool sel_clk_src(u32 clk_src)
 
 	/* Check if the clock source is already set to clk_src*/
 	tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
-	if (((tmp32 & 0x3fffffff) >> 24) == clk_src)
+	if (((tmp32 & 0x3fffffffU) >> 24) == clk_src)
 		return false;
 
 	/* To wait till clock switching is completed */
 	do {
 		tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
-	} while (((tmp32 >> 16) & 0x1) != 0x0);
+	} while (((tmp32 >> 16) & 0x1U) != 0x0);
 
 	/* Set DDR_CLK source on src_clk */
 	tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSC);
-	writel((0xc0ffffff & tmp32) | (clk_src << 24),
+	writel((0xc0ffffffU & tmp32) | (clk_src << 24),
 	       MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSC);
 
 	/* Request clock switch */
 	tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSC);
-	writel((0x1 << 2) | tmp32, MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSC);
+	writel((0x1u << 2) | tmp32, MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSC);
 
 	/* To wait till clock switching is completed */
 	do {
 		tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
-	} while (((tmp32 >> 16) & 0x1) != 0x0);
+	} while (((tmp32 >> 16) & 0x1U) != 0x0);
 
 	/* To wait till Switch after request is succeeded */
 	do {
 		tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
-	} while (((tmp32 >> 17) & 0x1) != 0x1);
+	} while (((tmp32 >> 17) & 0x1U) != 0x1);
 
 	/* Make sure correct clock source is selected */
 	do {
 		tmp32 = readl(MC_CGM5_BASE_ADDR + OFFSET_MUX_0_CSS);
-	} while (((tmp32 & 0x3fffffff) >> 24) != clk_src);
+	} while (((tmp32 & 0x3fffffffU) >> 24) != clk_src);
 
 	return true;
 }
@@ -111,13 +102,19 @@ u32 set_axi_parity(void)
 	bool switched_to_firc;
 
 	/* Enable Parity For All AXI Interfaces */
-	writel(readl(DDR_SS_REG) | 0x1ff0, DDR_SS_REG);
+	tmp32 = readl(DDR_SS_REG);
+	writel(tmp32 | 0x1ff0U, DDR_SS_REG);
 
 	/* Set AXI_PARITY_TYPE to 0x1ff;   0-even, 1-odd */
-	writel(readl(DDR_SS_REG) | 0x1ff0000, DDR_SS_REG);
-
-	/* Set DFI1_ENABLED to 0x1 */
-	writel(readl(DDR_SS_REG) | 0x1, DDR_SS_REG);
+	tmp32 = readl(DDR_SS_REG);
+	writel(tmp32 | 0x1ff0000U, DDR_SS_REG);
+
+	/* For LPDDR4 Set DFI1_ENABLED to 0x1 */
+	tmp32 = readl(DDRC_BASE_ADDR);
+	if ((tmp32 & MSTR_LPDDR4_MASK) == MSTR_LPDDR4_VAL) {
+		tmp32 = readl(DDR_SS_REG);
+		writel(tmp32 | 0x1U, DDR_SS_REG);
+	}
 
 	/*
 	 * Set ddr clock source on FIRC_CLK.
@@ -127,33 +124,33 @@ u32 set_axi_parity(void)
 
 	/* De-assert Reset To Controller and AXI Ports */
 	tmp32 = readl(MC_RGM_PRST_0);
-	writel(~(0x1 << 3) & tmp32, MC_RGM_PRST_0);
+	writel(~(0x1U << 3) & tmp32, MC_RGM_PRST_0);
 
 	/* Check if the initial clock source was not on FIRC */
 	if (switched_to_firc)
-		sel_clk_src(DDR_PHI0_PLL);
+		switched_to_firc = sel_clk_src(DDR_PHI0_PLL);
 
 	/* Enable HIF, CAM Queueing */
 	writel(0x0, DDRC_BASE_ADDR + OFFSET_DDRC_DBG1);
 
 	/* Disable auto-refresh: RFSHCTL3.dis_auto_refresh = 1 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
-	writel((1 | tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
+	writel((0x1U | tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
 
 	/* Disable power down: PWRCTL.powerdown_en = 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(((~0x00000002) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(((~0x00000002U) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/* Disable self-refresh: PWRCTL.selfref_en = 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(((~0x00000001) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(((~0x00000001U) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/*
 	 * Disable assertion of dfi_dram_clk_disable:
 	 * PWRTL.en_dfi_dram_clk_disable = 0
 	 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(((~0x00000008) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(((~0x00000008U) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/* Enable Quasi-Dynamic Programming */
 	writel(DDRC_SWCTL_SWDONE_ENABLE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -165,7 +162,7 @@ u32 set_axi_parity(void)
 
 	/* DFI_INIT_COMPLETE_EN set to 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
-	writel((~0x1) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
+	writel((~0x1U) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
 
 	/* Set SWCTL.sw_done to 1 */
 	writel(DDRC_SWCTL_SWDONE_DONE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -193,8 +190,10 @@ static u32 enable_axi_ports(void)
 /*
  * Post PHY training setup - complementary settings that need to be
  * performed after running the firmware.
+ * @param options - various flags controlling post training actions
+ * (whether to init memory with ECC scrubber / whether to store CSR)
  */
-u32 post_train_setup(void)
+u32 post_train_setup(u8 options)
 {
 	u32 ret = NO_ERR;
 	u32 tmp32;
@@ -205,7 +204,7 @@ u32 post_train_setup(void)
 	 */
 	do {
 		tmp32 = readl(DDR_PHYA_MASTER0_CALBUSY);
-	} while ((tmp32 & 0x1) != 0);
+	} while ((tmp32 & 0x1U) != 0);
 
 	/* Set SWCTL.sw_done to 0 */
 	writel(DDRC_SWCTL_SWDONE_ENABLE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -215,7 +214,7 @@ u32 post_train_setup(void)
 
 	/* Set DFIMISC.dfi_init_start to 1*/
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
-	writel((0x00000020 | tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
+	writel((0x00000020U | tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
 
 	/* Set SWCTL.sw_done to 1 */
 	writel(DDRC_SWCTL_SWDONE_DONE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -227,7 +226,7 @@ u32 post_train_setup(void)
 	/* Wait DFISTAT.dfi_init_complete to 1 */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_DFISTAT);
-	} while ((tmp32 & 0x1) == 0);
+	} while ((tmp32 & 0x1U) == 0);
 
 	/* Set SWCTL.sw_done to 0 */
 	writel(DDRC_SWCTL_SWDONE_ENABLE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -237,15 +236,15 @@ u32 post_train_setup(void)
 
 	/* Set dfi_init_start to 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
-	writel((~0x00000020) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
+	writel((~0x00000020U) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
 
 	/* Set dfi_complete_en to 1 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
-	writel(0x00000001 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
+	writel(0x00000001U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DFIMISC);
 
 	/* Set PWRCTL.selfref_sw to 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(((~0x00000020) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(((~0x00000020U) & tmp32), DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/* Set SWCTL.sw_done to 1 */
 	writel(DDRC_SWCTL_SWDONE_DONE, DDRC_BASE_ADDR + OFFSET_DDRC_SWCTL);
@@ -256,17 +255,18 @@ u32 post_train_setup(void)
 	/* Wait for DWC_ddr_umctl2 to move to normal operating mode */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_STAT);
-	} while ((tmp32 & 0x7) == 0);
+	} while ((tmp32 & 0x7U) == 0);
 
 	/* Enable auto-refresh: RFSHCTL3.dis_auto_refresh = 0 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
-	writel((~0x00000001) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
+	writel((~0x00000001U) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
 
 	/*
 	 * If ECC feature is enabled (ECCCFG0[ecc_mode] > 0)
 	 * initialize memory with the ecc scrubber
 	 */
-	if ((readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG0) & 0x7) > 0) {
+	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG0);
+	if (((tmp32 & 0x7U) > 0) && ((options & INIT_MEM_MASK) != 0)) {
 		ret = init_memory_ecc_scrubber();
 		if (ret != NO_ERR)
 			return ret;
@@ -274,18 +274,18 @@ u32 post_train_setup(void)
 
 	/* Enable power down: PWRCTL.powerdown_en = 1 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(0x00000002 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(0x00000002U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/* Enable self-refresh: PWRCTL.selfref_en = 1*/
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(0x00000001 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(0x00000001U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	/*
 	 * Enable assertion of dfi_dram_clk_disable:
 	 * PWRTL.en_dfi_dram_clk_disable = 1
 	 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
-	writel(0x00000008 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
+	writel(0x00000008U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_PWRCTL);
 
 	ret |= enable_derating_temp_errata();
 
@@ -301,25 +301,27 @@ u32 post_train_setup(void)
 u32 wait_firmware_execution(void)
 {
 	u32 mail = 0;
+	u32 ret;
 
-	while (mail == 0) {
+	while (true) {
 		/* Obtain message from PHY (major message) */
-		u32 ret = get_mail(&mail);
+		ret = get_mail(&mail);
 
 		if (ret != NO_ERR)
-			return ret;
+			break;
 
 		/* 0x07 means OK, 0xFF means failure */
 		if (mail == 0x07)
-			return NO_ERR;
-		if (mail == 0xff)
-			/* Training stage failed */
-			return TRAINING_FAILED;
+			break;
 
-		/* No error. Keep querying for mails */
-		mail = 0;
+		if (mail == 0xff) {
+			/* Training stage failed */
+			ret = TRAINING_FAILED;
+			break;
+		}
 	}
-	return TIMEOUT_ERR;
+
+	return ret;
 }
 
 /* Acknowledge received message */
@@ -328,13 +330,14 @@ static u32 ack_mail(void)
 	u32 timeout = DEFAULT_TIMEOUT;
 	/* ACK message */
 	writel(0, DDR_PHYA_APBONLY_DCTWRITEPROT);
+	u32 tmp32 = readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS);
 
 	/* Wait firmware to respond to ACK (UctWriteProtShadow to be set) */
-	while (--timeout && !(readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS) &
-			      UCT_WRITE_PROT_SHADOW_MASK))
-		;
+	while ((--timeout != 0) &&
+	       ((tmp32 & UCT_WRITE_PROT_SHADOW_MASK) == 0))
+		tmp32 = readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS);
 
-	if (!timeout)
+	if (timeout == 0)
 		return TIMEOUT_ERR;
 
 	writel(1, DDR_PHYA_APBONLY_DCTWRITEPROT);
@@ -346,12 +349,13 @@ static u32 ack_mail(void)
 static u32 get_mail(u32 *mail)
 {
 	u32 timeout = DEFAULT_TIMEOUT;
+	u32 tmp32 = readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS);
 
-	while (--timeout && (readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS) &
-			     UCT_WRITE_PROT_SHADOW_MASK))
-		;
+	while ((--timeout != 0) &&
+	       ((tmp32 & UCT_WRITE_PROT_SHADOW_MASK) != 0))
+		tmp32 = readl(DDR_PHYA_APBONLY_UCTSHSADOWREGS);
 
-	if (!timeout)
+	if (timeout == 0)
 		return TIMEOUT_ERR;
 
 	*mail = readl(DDR_PHYA_APBONLY_UCTWRITEONLYSHADOW);
@@ -364,33 +368,34 @@ static u32 get_mail(u32 *mail)
 u32 init_memory_ecc_scrubber(void)
 {
 	u8 region_lock;
-	u32 tmp32, pattern = 0x00000000;
+	u32 tmp32, pattern = 0x00000000U;
 
 	/* Save previous ecc region parity locked state. */
-	region_lock = readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1) & (0x1 << 4);
+	region_lock = readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1) &
+				  (0x1UL << 4);
 
 	/* Enable ecc region lock. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1);
-	writel((0x1 << 4) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1);
+	writel((0x01U << 4) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1);
 
 	/* Set SBRCTL.scrub_mode = 1. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel((0x1 << 2) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel((0x1U << 2) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Set SBRCTL.scrub_during_lowpower = 1. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel((0x1 << 1) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel((0x1U << 1) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Set SBRCTL.scrub_interval = 0. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel(~(0x1fff << 8) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel(~(0x1fffU << 8) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Set the desired pattern through SBRWDATA0 register. */
 	writel(pattern, DDRC_BASE_ADDR + OFFSET_DDRC_SBRWDATA0);
 
 	/* Enable the SBR by programming SBRCTL.scrub_en = 1. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel(0x1 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel(0x1U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/*
 	 * Poll until SBRSTAT.scrub_done = 1
@@ -398,7 +403,7 @@ u32 init_memory_ecc_scrubber(void)
 	 */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRSTAT);
-	} while ((tmp32 & 0x2) == 0);
+	} while ((tmp32 & 0x2U) == 0);
 
 	/*
 	 * Poll until SBRSTAT.scrub_busy = 0
@@ -406,28 +411,28 @@ u32 init_memory_ecc_scrubber(void)
 	 */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRSTAT);
-	} while (tmp32 & 0x1);
+	} while ((tmp32 & 0x1U) != 0);
 
 	/* Disable SBR by programming SBRCTL.scrub_en = 0. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel(~(0x1) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel(~(0x1U) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Enter normal scrub operation (Reads): SBRCTL.scrub_mode = 0. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel(~(0x1 << 2) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel(~(0x1U << 2) & tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Set SBRCTL.scrub_interval = 1. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	tmp32 = ~(0x1fff << 8) & tmp32;
-	writel((0x1 << 8) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	tmp32 = ~(0x1fffU << 8) & tmp32;
+	writel((0x1UL << 8) | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Enable the SBR by programming SBRCTL.scrub_en = 1. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
-	writel(0x1 | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
+	writel(0x1U | tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_SBRCTL);
 
 	/* Restore locked state of ecc region. */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1);
-	tmp32 = (tmp32 & ~(0x1 << 4)) | (region_lock << 4);
+	tmp32 = (tmp32 & ~(0x1UL << 4)) | (region_lock << 4);
 	writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_ECCCFG1);
 
 	return NO_ERR;
@@ -437,10 +442,11 @@ u32 init_memory_ecc_scrubber(void)
 u32 read_lpddr4_mr(u8 mr_index)
 {
 	u32 tmp32;
+	u8 succesive_reads = 0;
 
 	/* Set MRR_DDR_SEL_REG to 0x1 to enable LPDDR4 mode */
 	tmp32 = readl(PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
-	writel((tmp32 | 0x1), PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
+	writel((tmp32 | 0x1U), PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
 
 	/*
 	 * Ensure no MR transaction is in progress:
@@ -448,29 +454,38 @@ u32 read_lpddr4_mr(u8 mr_index)
 	 */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRSTAT);
-	} while ((tmp32 & 0x1) != 0);
+		if ((tmp32 & 0x1U) == 0)
+			succesive_reads++;
+		else
+			succesive_reads = 0;
+	} while (succesive_reads != REQUIRED_MRSTAT_READS);
 
 	/* Set MR_TYPE = 0x1 (Read) and MR_RANK = 0x1 (Rank 0) */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
-	tmp32 |= 0x1;
-	tmp32 = (tmp32 & ~(0xf << 4)) | (0x1 << 4);
+	tmp32 |= 0x1U;
+	tmp32 = (tmp32 & ~(0xfUL << 4)) | (0x1UL << 4);
 	writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
 
 	/* Configure MR address: MRCTRL1[8:15] */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL1);
-	tmp32 = (tmp32 & ~(0xff << 8)) | (mr_index << 8);
+	tmp32 = (tmp32 & ~(0xffUL << 8)) | ((u16)mr_index << 8);
 	writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL1);
 
-	__asm__("DSB SY");
+	dsb();
 
 	/* Initiate MR transaction: MR_WR = 0x1 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
-	writel(tmp32 | (0x1u << 31), DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
+	writel(tmp32 | (0x1UL << 31), DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
 
 	/* Wait until MR transaction completed */
+	succesive_reads = 0;
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRSTAT);
-	} while ((tmp32 & 0x1) != 0);
+		if ((tmp32 & 0x1U) == 0)
+			succesive_reads++;
+		else
+			succesive_reads = 0;
+	} while (succesive_reads != REQUIRED_MRSTAT_READS);
 
 	return readl(PERF_BASE_ADDR + OFFSET_MRR_1_DATA_REG_ADDR);
 }
@@ -479,10 +494,11 @@ u32 read_lpddr4_mr(u8 mr_index)
 u32 write_lpddr4_mr(u8 mr_index, u8 mr_data)
 {
 	u32 tmp32;
+	u8 succesive_reads = 0;
 
 	/* Set MRR_DDR_SEL_REG to 0x1 to enable LPDDR4 mode */
 	tmp32 = readl(PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
-	writel(tmp32 | 0x1, PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
+	writel(tmp32 | 0x1U, PERF_BASE_ADDR + OFFSET_MRR_0_DATA_REG_ADDR);
 
 	/*
 	 * Ensure no MR transaction is in progress:
@@ -490,29 +506,39 @@ u32 write_lpddr4_mr(u8 mr_index, u8 mr_data)
 	 */
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRSTAT);
-	} while ((tmp32 & 0x1) != 0);
+		if ((tmp32 & 0x1U) == 0)
+			succesive_reads++;
+		else
+			succesive_reads = 0;
+	} while (succesive_reads != REQUIRED_MRSTAT_READS);
 
 	/* Set MR_TYPE = 0x0 (Write) and MR_RANK = 0x1 (Rank 0) */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
-	tmp32 &= ~(0x1);
-	tmp32 = (tmp32 & ~(0xf << 4)) | (0x1 << 4);
+	tmp32 &= ~(0x1U);
+	tmp32 = (tmp32 & ~(0xfUL << 4)) | (0x1UL << 4);
 	writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
 
 	/* Configure MR address: MRCTRL1[8:15] and MR data: MRCTRL1[0:7]*/
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL1);
-	tmp32 = (tmp32 & (0xffffu << 16)) | (mr_index << 8) | mr_data;
+	tmp32 = (tmp32 & (0xffffUL << 16)) | ((u16)mr_index << 8) |
+		mr_data;
 	writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL1);
 
-	__asm__("DSB SY");
+	dsb();
 
 	/* Initiate MR transaction: MR_WR = 0x1 */
 	tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
-	writel(tmp32 | (0x1u << 31), DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
+	writel(tmp32 | (0x1UL << 31), DDRC_BASE_ADDR + OFFSET_DDRC_MRCTRL0);
 
 	/* Wait until MR transaction completed */
+	succesive_reads = 0;
 	do {
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_MRSTAT);
-	} while ((tmp32 & 0x1) != 0);
+		if ((tmp32 & 0x1U) == 0)
+			succesive_reads++;
+		else
+			succesive_reads = 0;
+	} while (succesive_reads != REQUIRED_MRSTAT_READS);
 
 	return NO_ERR;
 }
@@ -523,11 +549,11 @@ u8 read_tuf(void)
 	u32 mr4_val;
 	u8 mr4_die_1, mr4_die_2;
 
-	mr4_val = read_lpddr4_mr(MR4);
-	mr4_die_1 = mr4_val & 0x7;
-	mr4_die_2 = (mr4_val >> 16) & 0x7;
+	mr4_val = read_lpddr4_mr(MR4_IDX);
+	mr4_die_1 = mr4_val & 0x7U;
+	mr4_die_2 = (mr4_val >> 16) & 0x7U;
 
-	return mr4_die_1 > mr4_die_2 ? mr4_die_1 : mr4_die_2;
+	return (mr4_die_1 > mr4_die_2) ? mr4_die_1 : mr4_die_2;
 }
 
 /*
@@ -565,8 +591,8 @@ u32 enable_derating_temp_errata(void)
 		 */
 		tmp32 = readl(DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
 		bf_val = (tmp32 >> DDRC_RFSHCTL3_UPDATE_SHIFT) &
-			DDRC_RFSHCTL3_AUTO_REFRESH_VAL;
-		bf_val = bf_val ^ 1;
+			 DDRC_RFSHCTL3_AUTO_REFRESH_VAL;
+		bf_val = bf_val ^ 0x1U;
 		tmp32 = (tmp32 & ~DDRC_RFSHCTL3_MASK) |
 			(bf_val << DDRC_RFSHCTL3_UPDATE_SHIFT);
 		writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_RFSHCTL3);
@@ -586,6 +612,7 @@ u32 enable_derating_temp_errata(void)
 		if (!update_bf(&tmp32, DDRC_DRAMTMG4_TRCD_POS,
 			       DDRC_DRAMTMG5_TRCD_MASK, 2))
 			return BITFIELD_EXCEEDED;
+
 		/*
 		 * Set minimum time between activates from bank "a" to bank "b"
 		 * DRAMTMG4.T_RRD += 2
@@ -593,6 +620,7 @@ u32 enable_derating_temp_errata(void)
 		if (!update_bf(&tmp32, DDRC_DRAMTMG4_TRRD_POS,
 			       DDRC_DRAMTMG5_TRRD_MASK, 2))
 			return BITFIELD_EXCEEDED;
+
 		writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DRAMTMG4);
 
 		/*
@@ -603,6 +631,7 @@ u32 enable_derating_temp_errata(void)
 		if (!update_bf(&tmp32, DDRC_DRAMTMG0_TRAS_POS,
 			       DDRC_DRAMTMG0_TRAS_MASK, 2))
 			return BITFIELD_EXCEEDED;
+
 		writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DRAMTMG0);
 
 		/*
@@ -613,6 +642,7 @@ u32 enable_derating_temp_errata(void)
 		if (!update_bf(&tmp32, DDRC_DRAMTMG4_TRP_POS,
 			       DDRC_DRAMTMG4_TRP_MASK, 2))
 			return BITFIELD_EXCEEDED;
+
 		writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DRAMTMG4);
 
 		/*
@@ -623,6 +653,7 @@ u32 enable_derating_temp_errata(void)
 		if (!update_bf(&tmp32, DDRC_DRAMTMG1_TRC_POS,
 			       DDRC_DRAMTMG1_TRC_MASK, 3))
 			return BITFIELD_EXCEEDED;
+
 		writel(tmp32, DDRC_BASE_ADDR + OFFSET_DDRC_DRAMTMG1);
 
 		/* Set SWCTL.sw_done to 1 */
diff --git a/board/freescale/s32-gen1/ddr_utils.h b/board/freescale/s32-gen1/ddr_utils.h
index 57a9b39764..7c10acdcf0 100644
--- a/board/freescale/s32-gen1/ddr_utils.h
+++ b/board/freescale/s32-gen1/ddr_utils.h
@@ -42,93 +42,115 @@
 
 /* Possible errors */
 #define NO_ERR              0x00000000
-#define UNSUPPORTED_ERR     0x00000001
 #define TIMEOUT_ERR         0x00000002
 #define TRAINING_FAILED     0x00000003
 #define BITFIELD_EXCEEDED   0x00000004
 
 /* DDRC related */
-#define    DDRC_BASE_ADDR                   0x403C0000
-#define    OFFSET_DDRC_SWCTL                0x320
-#define    OFFSET_DDRC_DFIMISC              0x1b0
-#define    OFFSET_DDRC_DFISTAT              0x1bc
-#define    OFFSET_DDRC_PWRCTL               0x30
-#define    OFFSET_DDRC_SWSTAT               0x324
-#define    OFFSET_DDRC_STAT                 0x04
-#define    OFFSET_DDRC_DBG1                 0x304
-#define    OFFSET_DDRC_ECCCFG0              0x70
-#define    OFFSET_DDRC_ECCCFG1              0x74
-#define    OFFSET_DDRC_SBRCTL               0xf24
-#define    OFFSET_DDRC_SBRSTAT              0xf28
-#define    OFFSET_DDRC_SBRWDATA0            0xf2c
-#define    OFFSET_DDRC_MRSTAT               0x18
-#define    OFFSET_DDRC_MRCTRL0              0x10
-#define    OFFSET_DDRC_MRCTRL1              0x14
-#define    OFFSET_DDRC_DERATEEN             0x20
-#define    OFFSET_DDRC_RFSHTMG              0x64
-#define    OFFSET_DDRC_DRAMTMG0             0x100
-#define    OFFSET_DDRC_DRAMTMG1             0x104
-#define    OFFSET_DDRC_DRAMTMG4             0x110
+#define DDRC_BASE_ADDR                   0x403C0000
+#define OFFSET_DDRC_SWCTL                0x320
+#define OFFSET_DDRC_DFIMISC              0x1b0
+#define OFFSET_DDRC_DFISTAT              0x1bc
+#define OFFSET_DDRC_PWRCTL               0x30
+#define OFFSET_DDRC_SWSTAT               0x324
+#define OFFSET_DDRC_STAT                 0x04
+#define OFFSET_DDRC_DBG1                 0x304
+#define OFFSET_DDRC_ECCCFG0              0x70
+#define OFFSET_DDRC_ECCCFG1              0x74
+#define OFFSET_DDRC_SBRCTL               0xf24
+#define OFFSET_DDRC_SBRSTAT              0xf28
+#define OFFSET_DDRC_SBRWDATA0            0xf2c
+#define OFFSET_DDRC_MRSTAT               0x18
+#define OFFSET_DDRC_MRCTRL0              0x10
+#define OFFSET_DDRC_MRCTRL1              0x14
+#define OFFSET_DDRC_DERATEEN             0x20
+#define OFFSET_DDRC_RFSHTMG              0x64
+#define OFFSET_DDRC_DRAMTMG0             0x100
+#define OFFSET_DDRC_DRAMTMG1             0x104
+#define OFFSET_DDRC_DRAMTMG4             0x110
 
 /* DDRC masks and values */
-#define    DDRC_RFSHTMG_VAL_SHIFT           16
-#define    DDRC_RFSHTMG_VAL                 0xfff
-#define    DDRC_RFSHTMG_MASK                (DDRC_RFSHTMG_VAL << \
-					     DDRC_RFSHTMG_VAL_SHIFT)
-#define    DDRC_RFSHCTL3_UPDATE_SHIFT       1
-#define    DDRC_RFSHCTL3_AUTO_REFRESH_VAL   0x1
-#define    DDRC_RFSHCTL3_MASK               (DDRC_RFSHCTL3_AUTO_REFRESH_VAL \
-					     << DDRC_RFSHCTL3_UPDATE_SHIFT)
-#define    DDRC_DERATEEN_ENABLE             0x1
-#define    DDRC_SWCTL_SWDONE_ENABLE         0x0
-#define    DDRC_SWSTAT_SWDONE_ACK_MASK      0x1
-#define    DDRC_DRAMTMG4_TRCD_POS           24
-#define    DDRC_DRAMTMG5_TRCD_MASK          0x1f
-#define    DDRC_DRAMTMG4_TRRD_POS           8
-#define    DDRC_DRAMTMG5_TRRD_MASK          0xf
-#define    DDRC_DRAMTMG0_TRAS_POS           0
-#define    DDRC_DRAMTMG0_TRAS_MASK          0x3f
-#define    DDRC_DRAMTMG4_TRP_POS            0
-#define    DDRC_DRAMTMG4_TRP_MASK           0x1f
-#define    DDRC_DRAMTMG1_TRC_POS            0
-#define    DDRC_DRAMTMG1_TRC_MASK           0x7f
-#define    DDRC_SWCTL_SWDONE_DONE           0x1
-#define    SUCCESSIVE_READ                  2
-#define    DDRC_DERATEEN_MASK_DISABLE       0x1
+#define DDRC_RFSHTMG_VAL_SHIFT           16
+#define DDRC_RFSHTMG_VAL                 0xfffU
+#define DDRC_RFSHTMG_MASK                (DDRC_RFSHTMG_VAL << \
+	DDRC_RFSHTMG_VAL_SHIFT)
+#define DDRC_RFSHCTL3_UPDATE_SHIFT       1
+#define DDRC_RFSHCTL3_AUTO_REFRESH_VAL   0x1U
+#define DDRC_RFSHCTL3_MASK               (DDRC_RFSHCTL3_AUTO_REFRESH_VAL \
+	<< DDRC_RFSHCTL3_UPDATE_SHIFT)
+#define DDRC_DERATEEN_ENABLE             0x1U
+#define DDRC_SWCTL_SWDONE_ENABLE         0x0
+#define DDRC_SWSTAT_SWDONE_ACK_MASK      0x1U
+#define DDRC_DRAMTMG4_TRCD_POS           24
+#define DDRC_DRAMTMG5_TRCD_MASK          0x1f
+#define DDRC_DRAMTMG4_TRRD_POS           8
+#define DDRC_DRAMTMG5_TRRD_MASK          0xf
+#define DDRC_DRAMTMG0_TRAS_POS           0
+#define DDRC_DRAMTMG0_TRAS_MASK          0x3f
+#define DDRC_DRAMTMG4_TRP_POS            0
+#define DDRC_DRAMTMG4_TRP_MASK           0x1f
+#define DDRC_DRAMTMG1_TRC_POS            0
+#define DDRC_DRAMTMG1_TRC_MASK           0x7f
+#define DDRC_SWCTL_SWDONE_DONE           0x1
+#define SUCCESSIVE_READ                  2
+#define DDRC_DERATEEN_MASK_DISABLE       0x1U
+#define MSTR_LPDDR4_MASK                 0x20U
+#define MSTR_LPDDR4_VAL                  0x20U
 
 /* Performance monitoring registers */
-#define    PERF_BASE_ADDR                   0x403E0000
-#define    OFFSET_MRR_0_DATA_REG_ADDR       0x40
-#define    OFFSET_MRR_1_DATA_REG_ADDR       0x44
+#define PERF_BASE_ADDR                   0x403E0000
+#define OFFSET_MRR_0_DATA_REG_ADDR       0x40
+#define OFFSET_MRR_1_DATA_REG_ADDR       0x44
 
 /* uMCTL2 Multi-Port Registers */
-#define	   DDRC_UMCTL2_MP_BASE_ADDR         0x403C03F8
-#define    OFFSET_DDRC_PCTRL_0              0x98
-#define    OFFSET_DDRC_PCTRL_1              0x148
-#define    OFFSET_DDRC_PCTRL_2              0x1f8
+#define DDRC_UMCTL2_MP_BASE_ADDR         0x403C03F8
+#define OFFSET_DDRC_PCTRL_0              0x98
+#define OFFSET_DDRC_PCTRL_1              0x148
+#define OFFSET_DDRC_PCTRL_2              0x1f8
 
 /* PHY related */
-#define    DDR_PHYA_MASTER0_CALBUSY                 0x4038165C
-#define    DDR_PHYA_APBONLY_UCTSHSADOWREGS          0x40380404
-#define    DDR_PHYA_MASTER_PUBMODE                  0x403815d0
-#define    UCT_WRITE_PROT_SHADOW_MASK               0x1
-#define    DDR_PHYA_APBONLY_DCTWRITEPROT            0x4038040C
-#define    DDR_PHYA_APBONLY_UCTWRITEONLYSHADOW      0x40380410
-#define    OFFSET_DDRC_RFSHCTL3                     0x60
+#define DDR_PHYA_MASTER0_CALBUSY                 0x4038165C
+#define DDR_PHYA_APBONLY_UCTSHSADOWREGS          0x40380404U
+#define UCT_WRITE_PROT_SHADOW_MASK               0x1U
+#define DDR_PHYA_APBONLY_DCTWRITEPROT            0x4038040C
+#define DDR_PHYA_APBONLY_UCTWRITEONLYSHADOW      0x40380410
+#define OFFSET_DDRC_RFSHCTL3                     0x60
+#define DDR_PHYA_UCCLKHCLKENABLES                0x40380BEC
+
+#define SHIFT_BIT(nr)             ((1UL) << (nr))
+#define UCCLKEN_MASK              SHIFT_BIT(0)
+#define HCLKEN_MASK               SHIFT_BIT(1)
+#define OFFSET_DDRC_INIT0         0xd0
+
+#define STORE_CSR_MASK            SHIFT_BIT(0)
+#define INIT_MEM_MASK             SHIFT_BIT(1)
+#define SCRUB_EN_MASK             SHIFT_BIT(0)
+#define SCRUB_BUSY_MASK           SHIFT_BIT(0)
+#define SELFREF_SW_MASK           SHIFT_BIT(5)
+#define SELFREF_TYPE_MASK         (SHIFT_BIT(4) | SHIFT_BIT(5))
+#define OPERATING_MODE_MASK       (SHIFT_BIT(0) | SHIFT_BIT(1) | SHIFT_BIT(2))
+#define DFI_INIT_COMPLETE_MASK    SHIFT_BIT(0)
+#define DFI_INIT_START_MASK       SHIFT_BIT(5)
+#define SW_DONE_ACK_MASK          SHIFT_BIT(0)
+#define SW_DONE_MASK              SHIFT_BIT(0)
+#define SKIP_DRAM_INIT_MASK       (SHIFT_BIT(30) | SHIFT_BIT(31))
+
+/* Standby SRAM */
+#define STNDBY_RAM_BASE           0x24000000
+#define RETENTION_ADDR            STNDBY_RAM_BASE
 
 /* DDR Subsystem */
-#define    DDR_SS_REG                    0x403D0000
+#define DDR_SS_REG                0x403D0000
 
 /* Reset Generation Module */
-#define    MC_RGM_PRST_0                 0x40078040
+#define MC_RGM_PRST_0             0x40078040
 #ifndef MC_CGM5_BASE_ADDR
-#define    MC_CGM5_BASE_ADDR             0x40068000
+#define MC_CGM5_BASE_ADDR         0x40068000
 #endif
-#define    OFFSET_MUX_0_CSS              0x304
-#define    OFFSET_MUX_0_CSC              0x300
-#define    MC_CGM_MUX_0_DIV_UPD_STAT     0x33C
-#define    FIRC_CLK_SRC                  0x0
-#define    DDR_PHI0_PLL                  0x24
+#define OFFSET_MUX_0_CSS          0x304
+#define OFFSET_MUX_0_CSC          0x300
+#define FIRC_CLK_SRC              0x0
+#define DDR_PHI0_PLL              0x24
 
 /* Default timeout for DDR PHY operations */
 #define DEFAULT_TIMEOUT 1000000
@@ -138,26 +160,29 @@
 #define DMEM_START_ADDR 0x403B0000
 
 /* ERR050543 related defines */
-#define MR4 4
+#define MR4_IDX 4
 #define TUF_THRESHOLD 3
 #define REQUIRED_OK_CHECKS 3
 
-/**
- * @brief Set default AXI parity.
- */
+/* ERR050760 related defines */
+#define REQUIRED_MRSTAT_READS 2
+
+extern u8 polling_needed;
+
+/* Set default AXI parity. */
 u32 set_axi_parity(void);
 
-/**
- * @brief Post PHY train setup - complementary settings
+/*
+ * Post PHY train setup - complementary settings
  * that needs to be performed after running the firmware.
+ * @param options - various flags controlling post training actions
+ * (whether to init memory with ECC scrubber / whether to store CSR)
  */
-u32 post_train_setup(void);
+u32 post_train_setup(u8 options);
 
+/* Wait until firmware finishes execution and return training result */
 u32 wait_firmware_execution(void);
 
-u32 load_register_array(u32 reg_writes,
-			u32 array[][2]);
-
 /* Initialize memory with the ecc scrubber */
 u32 init_memory_ecc_scrubber(void);
 
@@ -200,6 +225,9 @@ u32 enable_derating_temp_errata(void);
  * parameters
  * @return - Returns 1, if the errata changes are reverted, 0 otherwise
  */
-int poll_derating_temp_errata(bool traffic_halted);
+u32 poll_derating_temp_errata(bool traffic_halted);
+
+/* Modify bitfield value with delta, given bitfield position and mask */
+bool update_bf(u32 *v, u8 pos, u32 mask, int32_t delta);
 
 #endif /* DDR_UTILS_H_ */
diff --git a/board/freescale/s32-gen1/ddrss_cfg.c b/board/freescale/s32-gen1/ddrss_cfg.c
index 42024193ec..e4ec89b7d6 100644
--- a/board/freescale/s32-gen1/ddrss_cfg.c
+++ b/board/freescale/s32-gen1/ddrss_cfg.c
@@ -29,12 +29,11 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
-#include <asm/arch/siul.h>
 #include "ddr_init.h"
 
 struct ddrss_config configs[] = {
 	{
-		.memory_type = 2,
+		.memory_type = LPDDR4,
 		.ddrc_cfg = &ddrc_cfg[0],
 		.ddrc_cfg_size = 0,
 		.dq_swap_cfg = &dq_swap_cfg[0],
@@ -54,59 +53,10 @@ struct ddrss_config configs[] = {
 	}
 };
 
-#ifdef CONFIG_NXP_S32G2XX
-struct ddrss_config configs_rev2[] = {
-	{
-		.memory_type = 2,
-		.ddrc_cfg = &ddrc_cfg_rev2[0],
-		.ddrc_cfg_size = 0,
-		.dq_swap_cfg = &dq_swap_cfg[0],
-		.dq_swap_cfg_size = 0,
-		.phy_cfg = &phy_cfg_rev2[0],
-		.phy_cfg_size = 0,
-		.imem_1d = &imem_1d[0],
-		.imem_1d_size = 0,
-		.dmem_1d = &dmem_1d_rev2[0],
-		.dmem_1d_size = 0,
-		.imem_2d = &imem_2d[0],
-		.imem_2d_size = 0,
-		.dmem_2d = &dmem_2d_rev2[0],
-		.dmem_2d_size = 0,
-		.pie_cfg = &pie_cfg_rev2[0],
-		.pie_cfg_size = 0,
-	}
-};
-
-void init_image_sizes_rev2(void)
-{
-	size_t i;
-
-	memcpy(&configs, &configs_rev2, sizeof(configs));
-
-	for (i = 0; i < ddrss_config_size; i++) {
-		configs[i].ddrc_cfg_size = ddrc_cfg_size_rev2;
-		configs[i].dq_swap_cfg_size = dq_swap_cfg_size;
-		configs[i].phy_cfg_size = phy_cfg_size_rev2;
-		configs[i].imem_1d_size = imem_1d_size;
-		configs[i].dmem_1d_size = dmem_1d_size_rev2;
-		configs[i].imem_2d_size = imem_2d_size;
-		configs[i].dmem_2d_size = dmem_2d_size_rev2;
-		configs[i].pie_cfg_size = pie_cfg_size_rev2;
-	}
-}
-#endif
-
 void init_image_sizes(void)
 {
 	size_t i;
 
-#ifdef CONFIG_NXP_S32G2XX
-	if (!is_s32gen1_soc_rev1()) {
-		init_image_sizes_rev2();
-		return;
-	}
-#endif
-
 	for (i = 0; i < ddrss_config_size; i++) {
 		configs[i].ddrc_cfg_size = ddrc_cfg_size;
 		configs[i].dq_swap_cfg_size = dq_swap_cfg_size;
diff --git a/board/freescale/s32-gen1/imem_cfg.c b/board/freescale/s32-gen1/imem_cfg.c
index 597d84a056..4c2dc73333 100644
--- a/board/freescale/s32-gen1/imem_cfg.c
+++ b/board/freescale/s32-gen1/imem_cfg.c
@@ -195,7 +195,7 @@ u16 imem_1d[] = {
 	0x2022,
 	0x0f80,
 	0x0000,
-	0x3294,
+	0x3594,
 	0x2069,
 	0x0040,
 	0x78e0,
@@ -228,21 +228,21 @@ u16 imem_1d[] = {
 	0xc085,
 	0xc040,
 	0x4020,
-	0x0872,
+	0x0846,
 	0x0360,
 	0xc185,
 	0x41c3,
 	0x0402,
 	0x0000,
-	0x0d2a,
+	0x0ffa,
 	0x0060,
 	0xd8ff,
 	0x70ad,
-	0x0c86,
+	0x0c5e,
 	0x02e0,
 	0x1a09,
 	0x3003,
-	0x0fb6,
+	0x0f8a,
 	0x0320,
 	0xd8ff,
 	0x25ab,
@@ -294,13 +294,13 @@ u16 imem_1d[] = {
 	0xf004,
 	0xc200,
 	0x4300,
-	0x0b42,
+	0x0b82,
 	0x0380,
 	0x40c3,
 	0x0000,
 	0x4e20,
-	0x0eca,
-	0x01a0,
+	0x097e,
+	0x01e0,
 	0x702c,
 	0x70ed,
 	0xf026,
@@ -320,7 +320,7 @@ u16 imem_1d[] = {
 	0x9002,
 	0x0054,
 	0x9000,
-	0x0cc2,
+	0x0f92,
 	0x0060,
 	0x780f,
 	0xc100,
@@ -378,8 +378,8 @@ u16 imem_1d[] = {
 	0x0000,
 	0x0334,
 	0xc047,
-	0x0e5a,
-	0x0160,
+	0x095a,
+	0x01a0,
 	0x710c,
 	0xc09c,
 	0xc040,
@@ -390,8 +390,8 @@ u16 imem_1d[] = {
 	0x3f82,
 	0x0000,
 	0x019c,
-	0x0ece,
-	0x00a0,
+	0x099e,
+	0x00e0,
 	0x2440,
 	0x3fc3,
 	0x706c,
@@ -427,15 +427,15 @@ u16 imem_1d[] = {
 	0x0010,
 	0x0000,
 	0xb887,
-	0x0dd6,
-	0x00a0,
+	0x08a6,
+	0x00e0,
 	0xc045,
-	0x0e12,
-	0x00a0,
+	0x08e2,
+	0x00e0,
 	0xc029,
 	0xc048,
-	0x0e0a,
-	0x00a0,
+	0x08da,
+	0x00e0,
 	0xc02b,
 	0x033f,
 	0x0020,
@@ -459,7 +459,7 @@ u16 imem_1d[] = {
 	0x702c,
 	0xb8c0,
 	0x7e07,
-	0x0c8e,
+	0x0f5e,
 	0x00e0,
 	0x40c1,
 	0x4318,
@@ -493,7 +493,7 @@ u16 imem_1d[] = {
 	0x712c,
 	0xb8c0,
 	0x7e07,
-	0x0c4a,
+	0x0f1a,
 	0x00e0,
 	0x40c1,
 	0x4318,
@@ -526,23 +526,23 @@ u16 imem_1d[] = {
 	0x208c,
 	0x8003,
 	0xf7b6,
-	0x0f3a,
-	0x0060,
+	0x0a0a,
+	0x00a0,
 	0x40a1,
-	0x0f36,
-	0x0060,
+	0x0a06,
+	0x00a0,
 	0x40a1,
 	0x1e00,
 	0x7043,
 	0x8000,
 	0x06e0,
-	0x0f26,
-	0x0060,
+	0x09f6,
+	0x00a0,
 	0x40a1,
 	0x78ef,
 	0x4163,
-	0x0fee,
-	0x0060,
+	0x0abe,
+	0x00a0,
 	0xc042,
 	0xc002,
 	0x70ed,
@@ -552,8 +552,8 @@ u16 imem_1d[] = {
 	0x06e0,
 	0x0d86,
 	0x0000,
-	0x0f06,
-	0x0060,
+	0x09d6,
+	0x00a0,
 	0x40a1,
 	0x43f9,
 	0xf04e,
@@ -582,7 +582,7 @@ u16 imem_1d[] = {
 	0x80a4,
 	0x2456,
 	0x3d40,
-	0x0c9e,
+	0x0f6e,
 	0x0080,
 	0x40c1,
 	0xc190,
@@ -645,17 +645,17 @@ u16 imem_1d[] = {
 	0x7043,
 	0x8000,
 	0x06e0,
-	0x0c22,
+	0x0ef2,
 	0x00a0,
 	0xb0e0,
-	0x0a5a,
+	0x0d2a,
 	0x00a0,
 	0xc002,
 	0x750c,
 	0x41c3,
 	0x0094,
 	0x0001,
-	0x09e2,
+	0x0cb2,
 	0x0060,
 	0x42c1,
 	0xf0ba,
@@ -679,7 +679,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0095,
 	0x0001,
-	0x09b2,
+	0x0c82,
 	0x0060,
 	0x42e1,
 	0x706f,
@@ -734,14 +734,14 @@ u16 imem_1d[] = {
 	0x8840,
 	0x7a25,
 	0xa840,
-	0x0caa,
+	0x0c82,
 	0x02a0,
 	0x782f,
 	0x4200,
 	0x41c3,
 	0x0096,
 	0x0001,
-	0x0936,
+	0x0c06,
 	0x0060,
 	0x750c,
 	0x2340,
@@ -754,7 +754,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0097,
 	0x0000,
-	0x091a,
+	0x0bea,
 	0x0060,
 	0x750c,
 	0x0daf,
@@ -763,7 +763,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0098,
 	0x0001,
-	0x090a,
+	0x0bda,
 	0x0060,
 	0x42e1,
 	0x70cd,
@@ -821,14 +821,14 @@ u16 imem_1d[] = {
 	0x8840,
 	0x7a25,
 	0xa840,
-	0x0bfe,
+	0x0bd6,
 	0x02a0,
 	0x782f,
 	0x4200,
 	0x41c3,
 	0x0099,
 	0x0001,
-	0x0886,
+	0x0b56,
 	0x0060,
 	0x750c,
 	0xe608,
@@ -840,7 +840,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x009a,
 	0x0000,
-	0x086e,
+	0x0b3e,
 	0x0060,
 	0x750c,
 	0x71e5,
@@ -859,7 +859,7 @@ u16 imem_1d[] = {
 	0xc044,
 	0xc003,
 	0x702c,
-	0x0a76,
+	0x0d46,
 	0x00a0,
 	0xb020,
 	0x264a,
@@ -979,11 +979,11 @@ u16 imem_1d[] = {
 	0xde5f,
 	0x78af,
 	0x792f,
-	0x0b16,
+	0x0e16,
 	0x0160,
 	0x7a4f,
 	0x4308,
-	0x0b0e,
+	0x0e0e,
 	0x0160,
 	0x78cf,
 	0x2580,
@@ -1105,22 +1105,22 @@ u16 imem_1d[] = {
 	0xffef,
 	0x2078,
 	0x0000,
-	0x088a,
+	0x0b5a,
 	0x0080,
-	0x09f6,
+	0x09ce,
 	0x0280,
 	0x1600,
 	0x7080,
 	0x8000,
 	0x001b,
 	0xb8e0,
-	0x0f9c,
-	0x00c2,
+	0x0a9c,
+	0x0102,
 	0x2400,
 	0x3f81,
 	0x0000,
 	0x0334,
-	0x088e,
+	0x0b8e,
 	0x0160,
 	0x700c,
 	0x2480,
@@ -1190,8 +1190,8 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00ee,
 	0x0001,
-	0x0db2,
-	0x0020,
+	0x0882,
+	0x0060,
 	0x750c,
 	0x706f,
 	0xf035,
@@ -1243,8 +1243,8 @@ u16 imem_1d[] = {
 	0x3780,
 	0x1c00,
 	0x37c0,
-	0x0d4a,
-	0x0020,
+	0x081a,
+	0x0060,
 	0x4261,
 	0x7167,
 	0x232f,
@@ -1354,8 +1354,8 @@ u16 imem_1d[] = {
 	0xb220,
 	0x0ceb,
 	0x9005,
-	0x0806,
-	0x0280,
+	0x0fde,
+	0x0240,
 	0x208a,
 	0x021a,
 	0x41c3,
@@ -1388,8 +1388,8 @@ u16 imem_1d[] = {
 	0x7ee0,
 	0xc2e2,
 	0x4328,
-	0x0e52,
-	0x0060,
+	0x0922,
+	0x00a0,
 	0x260a,
 	0x3000,
 	0x45cb,
@@ -1403,8 +1403,8 @@ u16 imem_1d[] = {
 	0x7784,
 	0x9008,
 	0x01e2,
-	0x0dd2,
-	0x0160,
+	0x0886,
+	0x01a0,
 	0x760c,
 	0x0b17,
 	0x1030,
@@ -1814,74 +1814,434 @@ u16 imem_1d[] = {
 	0x7fe0,
 	0x2884,
 	0x0001,
-	0x40c3,
-	0x8000,
-	0x07c9,
-	0x8821,
-	0x8800,
-	0x215f,
-	0x0641,
-	0x205f,
-	0x0c80,
-	0x6038,
-	0x2000,
-	0x0f80,
+	0xc2e6,
+	0x1cfc,
+	0xb6c8,
+	0x2482,
+	0x360a,
+	0x0b46,
+	0x0020,
+	0x712c,
+	0x1600,
+	0x709b,
 	0x8000,
-	0x067c,
-	0x8803,
-	0x781d,
-	0x781d,
-	0x781d,
-	0x781d,
-	0x781d,
-	0x781d,
-	0x7fe0,
-	0xb8c0,
-	0x78e0,
-	0x0917,
-	0x03f0,
-	0x228a,
-	0x0fc7,
-	0x714c,
-	0xb9c4,
-	0xe905,
-	0xb961,
-	0x09ff,
-	0x8031,
-	0x7a5b,
-	0x201a,
+	0x0004,
+	0x0aba,
+	0x0020,
+	0xc043,
+	0xc042,
+	0x2400,
+	0x3f80,
+	0x0000,
+	0x023c,
+	0x702c,
+	0x087a,
+	0x01a0,
+	0xda5a,
+	0x2456,
+	0x3c40,
+	0x086e,
+	0x01a0,
+	0xdab4,
+	0x0fde,
+	0x0120,
+	0x208a,
+	0x0b04,
+	0x0f76,
+	0x0120,
+	0xc041,
+	0x704c,
+	0x1e00,
+	0x7084,
+	0x9003,
+	0xfec4,
+	0xc002,
+	0x2079,
+	0x0000,
+	0xe008,
+	0xc040,
+	0xf012,
+	0x4300,
+	0x2244,
+	0x07c0,
+	0x6a21,
+	0x229a,
+	0x0008,
+	0xe806,
+	0xb861,
+	0x0801,
+	0x0031,
+	0x7b7b,
+	0x2205,
 	0x0f80,
+	0x9003,
+	0xe0c4,
+	0xb060,
+	0x4220,
+	0xc000,
+	0x0adf,
+	0x8024,
+	0x710c,
+	0xd880,
+	0xb88e,
+	0x1e00,
+	0x7004,
+	0x9003,
+	0xe004,
+	0x231a,
+	0x3f80,
+	0x0020,
 	0x0000,
-	0x2000,
 	0x2005,
 	0x0f81,
+	0x9003,
+	0xfe86,
+	0x2005,
+	0x0f80,
 	0x9002,
-	0x016a,
-	0x224f,
-	0x0240,
-	0x1900,
-	0x0005,
-	0xb140,
+	0x0086,
+	0x9000,
+	0xb8a0,
+	0x095e,
+	0x00a0,
 	0xb100,
-	0xb140,
-	0x7fe0,
-	0x1900,
-	0x0005,
-	0x78e0,
-	0x080d,
-	0x0072,
-	0x702c,
-	0x48ff,
-	0x2984,
-	0x0001,
-	0x7fe0,
-	0x782e,
-	0xc0f1,
-	0x4200,
-	0x0e9a,
-	0x0060,
-	0x4020,
-	0x795b,
+	0x208c,
+	0x8f03,
+	0xd93f,
+	0xf643,
+	0x2844,
+	0x0101,
+	0x231a,
+	0x3f9b,
+	0x0010,
+	0x0000,
+	0x1c10,
+	0x36c0,
+	0x43db,
+	0x8000,
+	0x07cd,
+	0x1300,
+	0x308e,
+	0x1301,
+	0x309e,
+	0x42c1,
+	0xf012,
+	0x7844,
+	0x201a,
+	0x0f83,
+	0x0000,
+	0x1000,
+	0xc003,
+	0x7144,
+	0x2054,
+	0x0d00,
+	0x7865,
+	0x781b,
+	0x2005,
+	0x0f80,
+	0x9002,
+	0x1e00,
+	0xb020,
+	0x784f,
+	0x0ee1,
+	0xb025,
+	0xd8ef,
+	0x218a,
+	0x07c4,
+	0x40c3,
+	0x9003,
+	0xe024,
+	0xb020,
+	0x218a,
+	0x03c4,
+	0x70ad,
+	0x180c,
+	0x0045,
+	0x18fe,
+	0x8044,
+	0xf099,
+	0xc003,
+	0x2055,
+	0x08c1,
+	0xc004,
+	0x7905,
+	0xd8ef,
+	0x78c4,
+	0x201a,
+	0x0f80,
+	0x0000,
+	0x1000,
+	0x71c5,
+	0x7825,
+	0x781b,
+	0x2005,
+	0x0f80,
+	0x9002,
+	0x1e00,
+	0xb0a0,
+	0x78cf,
+	0x0ed9,
+	0xb005,
+	0xd80f,
+	0x09b2,
+	0x0020,
+	0xd90f,
+	0x46cb,
+	0x9003,
+	0xfe64,
+	0x0d2e,
+	0x01a0,
+	0x1e00,
+	0x1005,
+	0x0d26,
+	0x0180,
+	0x0be6,
+	0x0160,
+	0xc001,
+	0x710c,
+	0x081a,
+	0x02a0,
+	0x218a,
+	0x0fc7,
+	0xd820,
+	0x0b2e,
+	0xffef,
+	0x712c,
+	0xc088,
+	0x702c,
+	0x09aa,
+	0x0260,
+	0x714c,
+	0xd80f,
+	0x0976,
+	0x0020,
+	0xd90f,
+	0xd87f,
+	0x0cf6,
+	0x01a0,
+	0xb600,
+	0x0cee,
+	0x0180,
+	0x0bae,
+	0x0160,
+	0xc001,
+	0x730c,
+	0x0fe2,
+	0x0260,
+	0x218a,
+	0x0fc7,
+	0xd820,
+	0x0afa,
+	0xffef,
+	0x712c,
+	0x2455,
+	0x3d40,
+	0x702c,
+	0x0972,
+	0x0260,
+	0x714c,
+	0x1300,
+	0x308b,
+	0x235f,
+	0x1243,
+	0xf03a,
+	0xc085,
+	0x702c,
+	0x0ed2,
+	0x0160,
+	0xda09,
+	0x70cd,
+	0xf02c,
+	0x787b,
+	0x2084,
+	0x0f87,
+	0xc188,
+	0x2135,
+	0x001f,
+	0x2455,
+	0x3d41,
+	0x2135,
+	0x001e,
+	0x275f,
+	0x1241,
+	0x2602,
+	0x37c0,
+	0x2048,
+	0x0002,
+	0xc085,
+	0x60d8,
+	0xa840,
+	0x2400,
+	0x3f80,
+	0x0000,
+	0x023c,
+	0x6038,
+	0x60d8,
+	0x8820,
+	0x7c4f,
+	0x091d,
+	0x0305,
+	0x275f,
+	0x1481,
+	0xa840,
+	0x2456,
+	0x3c40,
+	0x6038,
+	0x2700,
+	0x3781,
+	0x78d4,
+	0x793d,
+	0xb020,
+	0x71c5,
+	0x7164,
+	0xc000,
+	0x0ead,
+	0x9004,
+	0xc002,
+	0x7165,
+	0x7014,
+	0x23c0,
+	0x0061,
+	0x1301,
+	0x309e,
+	0x272f,
+	0x12c7,
+	0x0e87,
+	0xb3c5,
+	0x1300,
+	0x308e,
+	0x74a5,
+	0xe59e,
+	0x06f6,
+	0xffce,
+	0xf032,
+	0x255f,
+	0x1241,
+	0x2400,
+	0x3f80,
+	0x0000,
+	0x023c,
+	0x43e1,
+	0x6038,
+	0x41c3,
+	0x003e,
+	0x0002,
+	0x08f6,
+	0xffaf,
+	0x60e8,
+	0x42e1,
+	0x251a,
+	0x1f80,
+	0x0000,
+	0x2000,
+	0x229a,
+	0x0008,
+	0x255f,
+	0x148c,
+	0x43c3,
+	0x9002,
+	0x0080,
+	0x7a05,
+	0x2456,
+	0x3c40,
+	0x641c,
+	0x24f4,
+	0x13c0,
+	0x2205,
+	0x00c1,
+	0xb100,
+	0x2342,
+	0x0800,
+	0x7a05,
+	0x24f4,
+	0x13c0,
+	0x71e5,
+	0xb200,
+	0xc000,
+	0x0fab,
+	0x9024,
+	0x42a1,
+	0x1301,
+	0x309e,
+	0x71c5,
+	0x7dcf,
+	0x0ef3,
+	0xb365,
+	0x70ed,
+	0x2480,
+	0x360a,
+	0x1404,
+	0x341b,
+	0xc6c6,
+	0x78e0,
+	0x40c3,
+	0x8000,
+	0x07c9,
+	0x8821,
+	0x8800,
+	0x215f,
+	0x0641,
+	0x205f,
+	0x0c80,
+	0x6038,
+	0x2000,
+	0x0f80,
+	0x8000,
+	0x067c,
+	0x8803,
+	0x781d,
+	0x781d,
+	0x781d,
+	0x781d,
+	0x781d,
+	0x781d,
+	0x7fe0,
+	0xb8c0,
+	0x78e0,
+	0x0917,
+	0x03f0,
+	0x228a,
+	0x0fc7,
+	0x714c,
+	0xb9c4,
+	0xe905,
+	0xb961,
+	0x09ff,
+	0x8031,
+	0x7a5b,
+	0x201a,
+	0x0f80,
+	0x0000,
+	0x2000,
+	0x2005,
+	0x0f81,
+	0x9002,
+	0x016a,
+	0x224f,
+	0x0240,
+	0x1900,
+	0x0005,
+	0xb140,
+	0xb100,
+	0xb140,
+	0x7fe0,
+	0x1900,
+	0x0005,
+	0x78e0,
+	0x080d,
+	0x0072,
+	0x702c,
+	0x48ff,
+	0x2984,
+	0x0001,
+	0x7fe0,
+	0x782e,
+	0xc0f1,
+	0x4200,
+	0x0e9a,
+	0x0060,
+	0x4020,
+	0x795b,
 	0x2144,
 	0x0181,
 	0xb9c4,
@@ -1897,7 +2257,7 @@ u16 imem_1d[] = {
 	0xc0f1,
 	0xc1a4,
 	0x700c,
-	0x0b6e,
+	0x089e,
 	0xffef,
 	0xd9ff,
 	0x700c,
@@ -1908,11 +2268,11 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0xd990,
 	0x754c,
-	0x0c2e,
+	0x095e,
 	0xffef,
 	0xdb40,
 	0x700c,
-	0x0be6,
+	0x0916,
 	0xffef,
 	0x712c,
 	0xc0a4,
@@ -1934,7 +2294,7 @@ u16 imem_1d[] = {
 	0x080f,
 	0x0064,
 	0x4040,
-	0x0b1e,
+	0x0822,
 	0x02e0,
 	0xc100,
 	0x7487,
@@ -1987,7 +2347,7 @@ u16 imem_1d[] = {
 	0x47cb,
 	0x8000,
 	0x067c,
-	0x0b0e,
+	0x0b02,
 	0x00a0,
 	0x40e1,
 	0x70ad,
@@ -1998,7 +2358,7 @@ u16 imem_1d[] = {
 	0x235a,
 	0x1c80,
 	0x6038,
-	0x0dda,
+	0x0ae2,
 	0x0260,
 	0x60f8,
 	0x7164,
@@ -2024,7 +2384,7 @@ u16 imem_1d[] = {
 	0x00a0,
 	0x4508,
 	0x4100,
-	0x0ec2,
+	0x0bca,
 	0x0260,
 	0x40a1,
 	0x236f,
@@ -2052,7 +2412,7 @@ u16 imem_1d[] = {
 	0x40c1,
 	0x20ca,
 	0x0041,
-	0x0916,
+	0x08fa,
 	0x0160,
 	0x702c,
 	0x70b5,
@@ -2066,7 +2426,7 @@ u16 imem_1d[] = {
 	0x70c5,
 	0x9004,
 	0x00c0,
-	0x08fa,
+	0x08de,
 	0x0160,
 	0x702c,
 	0x1600,
@@ -2094,8 +2454,8 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0a00,
-	0x09e2,
-	0xffef,
+	0x0f12,
+	0xffaf,
 	0xd9ff,
 	0x70ad,
 	0xd8ff,
@@ -2105,8 +2465,8 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0aa6,
-	0xffef,
+	0x0fd6,
+	0xffaf,
 	0xc540,
 	0x8e01,
 	0x0825,
@@ -2122,8 +2482,8 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0a82,
-	0xffef,
+	0x0fb2,
+	0xffaf,
 	0xc540,
 	0x8e01,
 	0xc043,
@@ -2133,8 +2493,8 @@ u16 imem_1d[] = {
 	0xdb0c,
 	0xc542,
 	0xc541,
-	0x0a6e,
-	0xffef,
+	0x0f9e,
+	0xffaf,
 	0xc540,
 	0x8e01,
 	0xd908,
@@ -2144,10 +2504,10 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0a56,
-	0xffef,
+	0x0f86,
+	0xffaf,
 	0xc540,
-	0x0c9e,
+	0x09ce,
 	0xffef,
 	0xd8ff,
 	0x8e01,
@@ -2158,28 +2518,28 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0a3a,
-	0xffef,
+	0x0f6a,
+	0xffaf,
 	0xc540,
-	0x0c66,
+	0x0996,
 	0xffef,
 	0xd8ff,
-	0x0922,
-	0x0280,
+	0x0e2a,
+	0x0240,
 	0xd896,
-	0x09ea,
-	0xffef,
+	0x0f1a,
+	0xffaf,
 	0x712c,
 	0x0f3e,
 	0x0000,
 	0xf009,
-	0x0cfa,
+	0x0a2a,
 	0xffcf,
 	0x40c3,
 	0x000f,
 	0x4240,
-	0x081a,
-	0x0160,
+	0x0ffe,
+	0x0120,
 	0x702c,
 	0x1300,
 	0x3080,
@@ -2219,14 +2579,14 @@ u16 imem_1d[] = {
 	0x228a,
 	0x0dff,
 	0x776c,
-	0x0b06,
+	0x0876,
 	0x0320,
 	0xc540,
 	0x774c,
 	0x40e1,
 	0x712c,
 	0x4340,
-	0x0af6,
+	0x0866,
 	0x0320,
 	0xc540,
 	0xc0a4,
@@ -2270,14 +2630,14 @@ u16 imem_1d[] = {
 	0xffef,
 	0x1a09,
 	0x3003,
-	0x0ca6,
+	0x09ae,
 	0x0240,
 	0x254f,
 	0x1401,
 	0x0d3a,
 	0xffef,
 	0xd8ff,
-	0x0fd2,
+	0x0cd6,
 	0x02a0,
 	0xd8ff,
 	0x26ab,
@@ -2289,7 +2649,7 @@ u16 imem_1d[] = {
 	0x4300,
 	0xc080,
 	0x702c,
-	0x0a3a,
+	0x0a1e,
 	0x0160,
 	0xda14,
 	0x231a,
@@ -2298,7 +2658,7 @@ u16 imem_1d[] = {
 	0x0000,
 	0xc180,
 	0x714c,
-	0x0e3a,
+	0x0b42,
 	0x0220,
 	0xb885,
 	0x41c3,
@@ -2309,7 +2669,7 @@ u16 imem_1d[] = {
 	0x750c,
 	0x700c,
 	0x712c,
-	0x0f32,
+	0x0c62,
 	0xffaf,
 	0xc280,
 	0xc0a5,
@@ -2326,7 +2686,7 @@ u16 imem_1d[] = {
 	0x4308,
 	0xc080,
 	0x702c,
-	0x09ee,
+	0x09d2,
 	0x0160,
 	0xdab4,
 	0x0b25,
@@ -2340,7 +2700,7 @@ u16 imem_1d[] = {
 	0x4260,
 	0xc080,
 	0x702c,
-	0x0f3a,
+	0x0c42,
 	0x0220,
 	0x714c,
 	0x700c,
@@ -2376,29 +2736,29 @@ u16 imem_1d[] = {
 	0x2005,
 	0x06c0,
 	0xc180,
-	0x0d9e,
+	0x0aa6,
 	0x0220,
 	0x724c,
 	0x700c,
 	0x722c,
-	0x0ea2,
+	0x0bd2,
 	0xffaf,
 	0xc280,
 	0xc080,
 	0x702c,
-	0x0976,
+	0x095a,
 	0x0160,
 	0xdab4,
 	0x66fe,
 	0x2605,
 	0x16c0,
 	0xc180,
-	0x0d7e,
+	0x0a86,
 	0x0220,
 	0x42a1,
 	0x710c,
 	0x41a1,
-	0x0e7e,
+	0x0bae,
 	0xffaf,
 	0xc280,
 	0x2480,
@@ -2413,13 +2773,13 @@ u16 imem_1d[] = {
 	0x4300,
 	0xc080,
 	0x702c,
-	0x0942,
+	0x0926,
 	0x0160,
 	0xdab4,
 	0x2354,
 	0x0d00,
 	0xc180,
-	0x0d4a,
+	0x0a52,
 	0x0220,
 	0xda09,
 	0x750c,
@@ -2431,7 +2791,7 @@ u16 imem_1d[] = {
 	0x42a1,
 	0x700c,
 	0xd909,
-	0x0e3e,
+	0x0b6e,
 	0xffaf,
 	0xc280,
 	0xc7c2,
@@ -2441,7 +2801,7 @@ u16 imem_1d[] = {
 	0x3d02,
 	0xc080,
 	0x702c,
-	0x090a,
+	0x08ee,
 	0x0160,
 	0xdab4,
 	0x41c3,
@@ -2452,12 +2812,12 @@ u16 imem_1d[] = {
 	0x750c,
 	0xd840,
 	0xc180,
-	0x0d06,
+	0x0a0e,
 	0x0220,
 	0xda09,
 	0x700c,
 	0xd909,
-	0x0e0a,
+	0x0b3a,
 	0xffaf,
 	0xc280,
 	0x2480,
@@ -2594,7 +2954,7 @@ u16 imem_1d[] = {
 	0xc042,
 	0xc144,
 	0xc102,
-	0x0cde,
+	0x0d0e,
 	0x00e0,
 	0x40c1,
 	0x45cb,
@@ -2602,18 +2962,18 @@ u16 imem_1d[] = {
 	0x067c,
 	0xc043,
 	0x40a1,
-	0x09d6,
-	0x0260,
+	0x0ede,
+	0x0220,
 	0xd90d,
 	0x40a1,
 	0xd90d,
-	0x0f8e,
+	0x0fbe,
 	0x00e0,
 	0xda40,
 	0x40a1,
 	0xd90d,
-	0x095e,
-	0xffef,
+	0x0e8e,
+	0xffaf,
 	0xda7f,
 	0x275f,
 	0x1100,
@@ -2638,7 +2998,7 @@ u16 imem_1d[] = {
 	0x3fc1,
 	0x6159,
 	0x61b9,
-	0x0d2a,
+	0x0a9a,
 	0x02e0,
 	0x704c,
 	0xf00b,
@@ -2648,7 +3008,7 @@ u16 imem_1d[] = {
 	0x3fc1,
 	0x6159,
 	0x61b9,
-	0x0bce,
+	0x093e,
 	0x02e0,
 	0x704c,
 	0x40c3,
@@ -2675,7 +3035,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x07a8,
 	0xc004,
-	0x0e06,
+	0x0b0e,
 	0x0260,
 	0x210a,
 	0x0780,
@@ -2706,12 +3066,12 @@ u16 imem_1d[] = {
 	0x9004,
 	0x40a1,
 	0xd90d,
-	0x08a2,
-	0xffef,
+	0x0dd2,
+	0xffaf,
 	0xda7f,
 	0x40a1,
 	0xd90d,
-	0x0ebe,
+	0x0eee,
 	0x00e0,
 	0xda49,
 	0x1300,
@@ -2731,7 +3091,7 @@ u16 imem_1d[] = {
 	0x3fc1,
 	0x6159,
 	0x61b9,
-	0x0c72,
+	0x09e2,
 	0x02e0,
 	0x704c,
 	0xf018,
@@ -2741,13 +3101,13 @@ u16 imem_1d[] = {
 	0x3fc1,
 	0x6159,
 	0x61b9,
-	0x0b16,
+	0x0886,
 	0x02e0,
 	0x704c,
 	0x40c3,
 	0x0000,
 	0x2710,
-	0x0baa,
+	0x0b8e,
 	0x0120,
 	0x702c,
 	0x0952,
@@ -2755,17 +3115,17 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x1d4c,
-	0x0b9a,
+	0x0b7e,
 	0x0120,
 	0x732c,
 	0x40c3,
 	0x0003,
 	0xf7a0,
-	0x0b8e,
+	0x0b72,
 	0x0120,
 	0x702c,
 	0x40a1,
-	0x0c92,
+	0x099a,
 	0x0220,
 	0xd90d,
 	0xc003,
@@ -2782,7 +3142,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x07a8,
 	0xc004,
-	0x0d2e,
+	0x0a36,
 	0x0260,
 	0x4328,
 	0x702c,
@@ -2872,7 +3232,7 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x2af8,
-	0x0aae,
+	0x0a92,
 	0x0120,
 	0x1efa,
 	0x9485,
@@ -2928,7 +3288,7 @@ u16 imem_1d[] = {
 	0x0190,
 	0x71ad,
 	0x700c,
-	0x0a3e,
+	0x0a22,
 	0x0120,
 	0xd940,
 	0x46cb,
@@ -2954,7 +3314,7 @@ u16 imem_1d[] = {
 	0xb88f,
 	0xb600,
 	0x700c,
-	0x0a0a,
+	0x09ee,
 	0x0120,
 	0x1ef6,
 	0x9205,
@@ -2962,7 +3322,7 @@ u16 imem_1d[] = {
 	0x000f,
 	0x4240,
 	0x702c,
-	0x09fa,
+	0x09de,
 	0x0120,
 	0x1ef6,
 	0x9245,
@@ -3010,17 +3370,17 @@ u16 imem_1d[] = {
 	0x8000,
 	0x067c,
 	0x40a1,
-	0x0ea6,
+	0x0bae,
 	0x0220,
 	0xd90d,
 	0x40a1,
 	0xd90d,
-	0x0e3a,
+	0x0b6a,
 	0xffaf,
 	0xda7f,
 	0x40a1,
 	0xd90d,
-	0x0e2e,
+	0x0b5e,
 	0xffaf,
 	0xdafe,
 	0x40c3,
@@ -3051,12 +3411,12 @@ u16 imem_1d[] = {
 	0x6159,
 	0x61b9,
 	0x704c,
-	0x09f2,
-	0x02e0,
+	0x0f62,
+	0x02a0,
 	0x1c00,
 	0x3fc1,
 	0xf018,
-	0x0e12,
+	0x0b42,
 	0xff8f,
 	0x2778,
 	0x1080,
@@ -3075,18 +3435,18 @@ u16 imem_1d[] = {
 	0x78c5,
 	0x61b9,
 	0x780f,
-	0x087a,
-	0x02e0,
+	0x0dea,
+	0x02a0,
 	0x704c,
 	0x40c3,
 	0x0000,
 	0x36b0,
-	0x090e,
+	0x08f2,
 	0x0120,
 	0xd90a,
 	0x40a1,
-	0x0a12,
-	0x0220,
+	0x0f1a,
+	0x01e0,
 	0xd90d,
 	0x1e00,
 	0x7005,
@@ -3128,7 +3488,7 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x2af8,
-	0x08ae,
+	0x0892,
 	0x0120,
 	0x702c,
 	0x1e00,
@@ -3225,7 +3585,7 @@ u16 imem_1d[] = {
 	0x9004,
 	0x0006,
 	0xd820,
-	0x0f96,
+	0x0f7a,
 	0x00e0,
 	0x1d00,
 	0x1045,
@@ -3246,7 +3606,7 @@ u16 imem_1d[] = {
 	0x0c00,
 	0xb5e0,
 	0xb500,
-	0x0f6a,
+	0x0f4e,
 	0x00e0,
 	0xd80a,
 	0xb5e0,
@@ -3304,7 +3664,7 @@ u16 imem_1d[] = {
 	0x785d,
 	0xc5c2,
 	0x78e0,
-	0x0701,
+	0x0431,
 	0xff6f,
 	0x4040,
 	0x78e0,
@@ -3776,7 +4136,7 @@ u16 imem_1d[] = {
 	0xbdc9,
 	0x254f,
 	0x12ce,
-	0x0b46,
+	0x0b2a,
 	0x00e0,
 	0xb7c0,
 	0x2505,
@@ -3784,11 +4144,11 @@ u16 imem_1d[] = {
 	0x0000,
 	0x0c00,
 	0xb700,
-	0x0b36,
+	0x0b1a,
 	0x00e0,
 	0xd80a,
 	0xd80a,
-	0x0b2e,
+	0x0b12,
 	0x00e0,
 	0xb7c0,
 	0x1600,
@@ -3815,11 +4175,11 @@ u16 imem_1d[] = {
 	0x07d8,
 	0x8020,
 	0x4063,
-	0x0a92,
+	0x0ac2,
 	0x00a0,
 	0x706c,
 	0x700c,
-	0x0c6a,
+	0x099a,
 	0xff6f,
 	0xd9ff,
 	0x710c,
@@ -3842,7 +4202,7 @@ u16 imem_1d[] = {
 	0xdbff,
 	0xc643,
 	0xc641,
-	0x0d12,
+	0x0a42,
 	0xff6f,
 	0xc640,
 	0x255a,
@@ -3858,7 +4218,7 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0xc643,
 	0xc542,
-	0x0cf2,
+	0x0a22,
 	0xff6f,
 	0x1c04,
 	0x35c1,
@@ -3870,27 +4230,27 @@ u16 imem_1d[] = {
 	0x746c,
 	0xc643,
 	0xc542,
-	0x0cda,
+	0x0a0a,
 	0xff6f,
 	0xc641,
 	0x700c,
-	0x0c92,
+	0x09c2,
 	0xff6f,
 	0x712c,
-	0x0c52,
+	0x095a,
 	0x01c0,
-	0x0a7a,
+	0x0a5e,
 	0x00e0,
 	0x208a,
 	0x0010,
 	0x40c3,
 	0x0000,
 	0x9c40,
-	0x0ac2,
+	0x0aa6,
 	0x00e0,
 	0xd908,
 	0x700c,
-	0x0bda,
+	0x090a,
 	0xff6f,
 	0xd9ff,
 	0x47cb,
@@ -3903,7 +4263,7 @@ u16 imem_1d[] = {
 	0xc643,
 	0xc542,
 	0xc641,
-	0x0c9a,
+	0x09ca,
 	0xff6f,
 	0xc740,
 	0x2756,
@@ -3915,11 +4275,11 @@ u16 imem_1d[] = {
 	0xdb08,
 	0xc643,
 	0xc542,
-	0x0c82,
+	0x09b2,
 	0xff6f,
 	0xc641,
 	0x700c,
-	0x0c3a,
+	0x096a,
 	0xff6f,
 	0x712c,
 	0x46cb,
@@ -3933,8 +4293,8 @@ u16 imem_1d[] = {
 	0x41e1,
 	0xe809,
 	0x40e1,
-	0x09c6,
-	0x01e0,
+	0x0ece,
+	0x01a0,
 	0x702c,
 	0xc104,
 	0x79b4,
@@ -3952,8 +4312,8 @@ u16 imem_1d[] = {
 	0x41a1,
 	0xe834,
 	0x40a1,
-	0x099e,
-	0x01e0,
+	0x0ea6,
+	0x01a0,
 	0xd910,
 	0xc504,
 	0x209a,
@@ -3967,8 +4327,8 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00e0,
 	0x0001,
-	0x0a96,
-	0xff2f,
+	0x0fc6,
+	0xfeef,
 	0x2079,
 	0x0000,
 	0x1600,
@@ -4054,8 +4414,8 @@ u16 imem_1d[] = {
 	0x80e5,
 	0x7077,
 	0x700c,
-	0x0a92,
-	0xff6f,
+	0x0fc2,
+	0xff2f,
 	0xd9ff,
 	0xc005,
 	0x702c,
@@ -4066,7 +4426,7 @@ u16 imem_1d[] = {
 	0x4528,
 	0xc143,
 	0xc141,
-	0x0b52,
+	0x0882,
 	0xff6f,
 	0xc140,
 	0xd8ff,
@@ -4077,7 +4437,7 @@ u16 imem_1d[] = {
 	0xc043,
 	0xc542,
 	0xc541,
-	0x0b3e,
+	0x086e,
 	0xff6f,
 	0xc540,
 	0xc005,
@@ -4088,7 +4448,7 @@ u16 imem_1d[] = {
 	0x746c,
 	0xc543,
 	0xc541,
-	0x0b26,
+	0x0856,
 	0xff6f,
 	0xc540,
 	0xd8ff,
@@ -4098,15 +4458,15 @@ u16 imem_1d[] = {
 	0xc643,
 	0xc542,
 	0xc541,
-	0x0b12,
+	0x0842,
 	0xff6f,
 	0xc540,
 	0x700c,
-	0x0aca,
-	0xff6f,
+	0x0ffa,
+	0xff2f,
 	0x712c,
-	0x0a8a,
-	0x01c0,
+	0x0f92,
+	0x0180,
 	0xc0a7,
 	0x1404,
 	0x341b,
@@ -4171,7 +4531,7 @@ u16 imem_1d[] = {
 	0x793b,
 	0x2805,
 	0x0041,
-	0x0f96,
+	0x0fc6,
 	0x0020,
 	0x7830,
 	0xc0d1,
@@ -4251,7 +4611,7 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x8000,
 	0x07d8,
-	0x07bd,
+	0x04ed,
 	0xff2f,
 	0x8000,
 	0x40c3,
@@ -4367,7 +4727,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x07d0,
 	0x8800,
-	0x0f06,
+	0x0f36,
 	0x0060,
 	0x203c,
 	0x00c0,
@@ -4412,18 +4772,12 @@ u16 imem_1d[] = {
 	0x700c,
 	0xc6c4,
 	0xc6c4,
-	0x219a,
-	0x0010,
-	0x781b,
-	0x2005,
-	0x0f80,
+	0x1e00,
+	0x77c5,
 	0x9003,
-	0xe064,
-	0x2145,
-	0x07c1,
-	0x0779,
-	0x00e0,
-	0xb020,
+	0xfe64,
+	0x0765,
+	0x00c0,
 	0xc2e6,
 	0x1cfc,
 	0xb6c8,
@@ -4682,12 +5036,12 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x8000,
 	0x0650,
-	0x0c2e,
+	0x096a,
 	0xfeef,
 	0xda2a,
 	0xc080,
-	0x092e,
-	0x02a0,
+	0x0eaa,
+	0x0260,
 	0xd92a,
 	0xdd25,
 	0xbd9f,
@@ -4708,7 +5062,7 @@ u16 imem_1d[] = {
 	0xe154,
 	0x1e42,
 	0x905d,
-	0x0bda,
+	0x0be6,
 	0xffcf,
 	0x2053,
 	0x00c1,
@@ -4727,14 +5081,14 @@ u16 imem_1d[] = {
 	0x0031,
 	0x781d,
 	0xb8c1,
-	0x0dea,
+	0x0afe,
 	0x01e0,
 	0x1a06,
 	0x3002,
-	0x09ce,
+	0x0a0a,
 	0x0000,
-	0x08b2,
-	0x01c0,
+	0x0dc6,
+	0x0180,
 	0x164c,
 	0x9100,
 	0x080d,
@@ -4751,12 +5105,12 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x8000,
 	0x04ad,
-	0x0ba6,
+	0x08e2,
 	0xfeef,
 	0xda72,
 	0xc080,
-	0x08a6,
-	0x02a0,
+	0x0e22,
+	0x0260,
 	0xd972,
 	0xed07,
 	0x208a,
@@ -4770,25 +5124,25 @@ u16 imem_1d[] = {
 	0x1cfc,
 	0xb6c8,
 	0xc1a7,
-	0x0bfa,
+	0x0c06,
 	0xffef,
-	0x4708,
-	0x0b72,
+	0x4608,
+	0x0b7e,
 	0xffef,
 	0xc046,
-	0x0be2,
+	0x0bee,
 	0xffef,
 	0xc044,
 	0xc045,
 	0x40c3,
 	0x0000,
 	0x2710,
-	0x0be2,
+	0x0bd2,
 	0x00a0,
 	0x742c,
-	0x4608,
+	0x4708,
 	0x700c,
-	0x0cd6,
+	0x0a12,
 	0xff2f,
 	0xd91f,
 	0xca00,
@@ -4800,70 +5154,91 @@ u16 imem_1d[] = {
 	0xb98e,
 	0x754c,
 	0xc543,
-	0xc742,
+	0xc642,
 	0xc541,
-	0x0d92,
+	0x0ace,
 	0xff2f,
 	0xc540,
-	0x7bcf,
+	0x7bef,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xc543,
+	0xc642,
+	0xc541,
+	0xc540,
+	0x0aba,
+	0xff2f,
+	0x4378,
+	0x71ed,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xdb7c,
+	0xc543,
+	0xc642,
+	0xc741,
+	0x0aa2,
+	0xff2f,
+	0xc540,
+	0x0cea,
+	0xff2f,
+	0xd8ff,
 	0xd8ff,
 	0x702c,
 	0x704c,
+	0x4363,
 	0xc543,
-	0xc742,
+	0xc642,
 	0xc541,
-	0x0d7e,
+	0x0a8a,
 	0xff2f,
 	0xc540,
-	0x71cd,
 	0xd8ff,
 	0x702c,
 	0x704c,
 	0xdb7c,
 	0xc543,
-	0xc742,
-	0xc641,
-	0x0d6a,
+	0xc642,
+	0xc741,
+	0x0a76,
 	0xff2f,
 	0xc540,
-	0x0fae,
-	0xff2f,
-	0xd8ff,
 	0xd8ff,
 	0x41c3,
 	0x0001,
 	0x0000,
 	0x724c,
 	0xdb08,
-	0xc643,
-	0xc742,
-	0xc641,
+	0xc743,
+	0xc642,
+	0xc741,
 	0xc540,
-	0x0d4a,
+	0x0a5a,
 	0xff2f,
 	0x4338,
-	0xf838,
+	0xf83d,
 	0xc543,
-	0xc742,
+	0xc642,
 	0xc541,
-	0x0d3a,
+	0x0a4e,
 	0xff2f,
 	0xc540,
-	0xf835,
+	0xf839,
 	0xc543,
-	0xc742,
-	0xc641,
-	0x0d2e,
+	0xc642,
+	0xc741,
+	0x0a3e,
 	0xff2f,
 	0xc540,
 	0xd8ff,
 	0x4163,
 	0x724c,
 	0xdb08,
-	0xc643,
-	0xc742,
-	0xc641,
-	0x0d1a,
+	0xc743,
+	0xc642,
+	0xc741,
+	0x0a2a,
 	0xff2f,
 	0xc540,
 	0xc006,
@@ -4878,7 +5253,7 @@ u16 imem_1d[] = {
 	0x702c,
 	0xc542,
 	0xc541,
-	0x0cfa,
+	0x0a0e,
 	0xff2f,
 	0xc540,
 	0xd8ff,
@@ -4887,9 +5262,9 @@ u16 imem_1d[] = {
 	0x714c,
 	0xdb08,
 	0xc543,
-	0xc742,
+	0xc642,
 	0xc541,
-	0x0ce6,
+	0x09f6,
 	0xff2f,
 	0xc540,
 	0xc105,
@@ -4907,9 +5282,9 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0x218a,
 	0x0010,
-	0xc742,
-	0xc641,
-	0x0cbe,
+	0xc642,
+	0xc741,
+	0x09ce,
 	0xff2f,
 	0xc540,
 	0x700c,
@@ -4922,7 +5297,7 @@ u16 imem_1d[] = {
 	0x30c1,
 	0xc542,
 	0xc541,
-	0x0ca2,
+	0x09b6,
 	0xff2f,
 	0xc540,
 	0xd8ff,
@@ -4932,28 +5307,37 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0c8e,
+	0x09a2,
 	0xff2f,
 	0xc540,
-	0x0eba,
+	0xbec1,
+	0xd8ff,
+	0x702c,
+	0x764c,
+	0xdb2e,
+	0xc543,
+	0xc642,
+	0xc541,
+	0x098a,
+	0xff2f,
+	0xc740,
+	0x0bb6,
 	0xff2f,
 	0xd8ff,
-	0xbfc1,
 	0xd8ff,
 	0xd980,
-	0x764c,
+	0x754c,
 	0x746c,
 	0xc543,
-	0xc742,
+	0xc542,
 	0xc541,
-	0x0c72,
+	0x0972,
 	0xff2f,
-	0xc640,
+	0xc540,
 	0xc0a7,
 	0x1404,
 	0x341b,
 	0xc6c6,
-	0x78e0,
 	0xd8ff,
 	0x218a,
 	0x0010,
@@ -5008,7 +5392,7 @@ u16 imem_1d[] = {
 	0x4328,
 	0x1ef2,
 	0x9044,
-	0x09fe,
+	0x09b2,
 	0x00a0,
 	0x1e66,
 	0x1044,
@@ -5034,7 +5418,7 @@ u16 imem_1d[] = {
 	0x9344,
 	0x1e72,
 	0x90dd,
-	0x0972,
+	0x0926,
 	0x00a0,
 	0x1ed0,
 	0x92c4,
@@ -5069,14 +5453,14 @@ u16 imem_1d[] = {
 	0x1044,
 	0x1d6c,
 	0x13c4,
-	0x0986,
+	0x093a,
 	0x00a0,
 	0x4318,
 	0xbf70,
 	0x202f,
 	0x06c2,
 	0x702c,
-	0x0976,
+	0x092a,
 	0x00a0,
 	0x1d6c,
 	0x13c4,
@@ -5084,7 +5468,7 @@ u16 imem_1d[] = {
 	0x0098,
 	0x9680,
 	0x702c,
-	0x0966,
+	0x091a,
 	0x00a0,
 	0x1d6c,
 	0x12c4,
@@ -5104,7 +5488,7 @@ u16 imem_1d[] = {
 	0x9384,
 	0x1d72,
 	0x90dd,
-	0x08e6,
+	0x089a,
 	0x00a0,
 	0x1dd0,
 	0x9784,
@@ -5113,24 +5497,24 @@ u16 imem_1d[] = {
 	0x1d72,
 	0x979c,
 	0x700c,
-	0x092e,
+	0x08e2,
 	0x00a0,
 	0xd920,
 	0x45cb,
 	0x9004,
 	0x01f0,
 	0xd820,
-	0x08c6,
+	0x087a,
 	0x00a0,
 	0x1d00,
 	0x1005,
 	0xd820,
-	0x08be,
+	0x0872,
 	0x00a0,
 	0x1d00,
 	0x1045,
 	0x740c,
-	0x08b2,
+	0x0866,
 	0x00a0,
 	0x1d00,
 	0x1005,
@@ -5182,7 +5566,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0089,
 	0x0000,
-	0x0e82,
+	0x0e52,
 	0xff2f,
 	0xd80a,
 	0x023b,
@@ -5222,7 +5606,7 @@ u16 imem_1d[] = {
 	0xb000,
 	0x13f0,
 	0xb001,
-	0x0c62,
+	0x0c32,
 	0xffaf,
 	0x4040,
 	0x4508,
@@ -5253,7 +5637,7 @@ u16 imem_1d[] = {
 	0x0aff,
 	0x8031,
 	0x781b,
-	0x0a4e,
+	0x0a1e,
 	0xff6f,
 	0x780f,
 	0x13e4,
@@ -5264,7 +5648,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x06e0,
 	0x780f,
-	0x0b06,
+	0x0ad6,
 	0xff6f,
 	0x1be8,
 	0xb000,
@@ -5281,7 +5665,7 @@ u16 imem_1d[] = {
 	0x2402,
 	0x301c,
 	0xc082,
-	0x0f9a,
+	0x0c9a,
 	0xfeaf,
 	0x1bec,
 	0xb000,
@@ -5313,19 +5697,19 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0003,
 	0xd090,
-	0x0f9e,
+	0x0f52,
 	0x0060,
 	0x702c,
-	0x084a,
-	0xff2f,
+	0x0d4a,
+	0xfeef,
 	0x13e8,
 	0xb000,
 	0x13f0,
 	0xb000,
 	0x2342,
 	0x3201,
-	0x085e,
-	0xfeef,
+	0x0d5e,
+	0xfeaf,
 	0x724c,
 	0x13f8,
 	0xb000,
@@ -5347,7 +5731,7 @@ u16 imem_1d[] = {
 	0xc040,
 	0x13f4,
 	0xb002,
-	0x0d3a,
+	0x0d0a,
 	0xff2f,
 	0x740c,
 	0xef06,
@@ -5425,7 +5809,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x008c,
 	0x0002,
-	0x0f32,
+	0x0c32,
 	0xfeaf,
 	0x42c1,
 	0x67b8,
@@ -5449,7 +5833,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x07c9,
 	0xa90a,
-	0x0cda,
+	0x0caa,
 	0xff6f,
 	0x13e8,
 	0xb000,
@@ -5564,7 +5948,7 @@ u16 imem_1d[] = {
 	0x0001,
 	0xb8e3,
 	0xf4f0,
-	0x0ab6,
+	0x0a86,
 	0xff4f,
 	0x70ed,
 	0x700c,
@@ -5582,9 +5966,9 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0a00,
-	0x0ea2,
+	0x0ba2,
 	0xfecf,
-	0x0ec2,
+	0x0b9a,
 	0x0180,
 	0x8e01,
 	0x71ad,
@@ -5607,7 +5991,7 @@ u16 imem_1d[] = {
 	0x2045,
 	0x0180,
 	0xc040,
-	0x0f4a,
+	0x0c4a,
 	0xfeef,
 	0xd8ff,
 	0x8e01,
@@ -5624,7 +6008,7 @@ u16 imem_1d[] = {
 	0x0448,
 	0xb8c5,
 	0xc040,
-	0x0f26,
+	0x0c26,
 	0xfeef,
 	0xd8ff,
 	0x8e01,
@@ -5642,7 +6026,7 @@ u16 imem_1d[] = {
 	0x2045,
 	0x0580,
 	0xc040,
-	0x0f02,
+	0x0c02,
 	0xfeef,
 	0xd8ff,
 	0x8e01,
@@ -5655,13 +6039,13 @@ u16 imem_1d[] = {
 	0xb8c5,
 	0xc040,
 	0xd8ff,
-	0x0eea,
+	0x0bea,
 	0xfeef,
 	0xc541,
 	0x40c3,
 	0x0000,
 	0x2710,
-	0x0d06,
+	0x0cba,
 	0x0060,
 	0xd90a,
 	0x781d,
@@ -5672,24 +6056,24 @@ u16 imem_1d[] = {
 	0xc742,
 	0xc741,
 	0xc740,
-	0x0ec6,
+	0x0bc6,
 	0xfeef,
 	0xc543,
 	0xf8da,
 	0xc543,
 	0xc742,
 	0xc741,
-	0x0eba,
+	0x0bba,
 	0xfeef,
 	0xc740,
 	0xc004,
 	0xb863,
 	0x0811,
 	0x0095,
-	0x0d9e,
+	0x0a76,
 	0x0180,
 	0x700c,
-	0x0e66,
+	0x0b66,
 	0xfeef,
 	0x712c,
 	0xc004,
@@ -5703,9 +6087,9 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0a00,
-	0x0db2,
+	0x0ab2,
 	0xfecf,
-	0x0dd2,
+	0x0aaa,
 	0x0180,
 	0x8e01,
 	0x702c,
@@ -5717,11 +6101,11 @@ u16 imem_1d[] = {
 	0x4528,
 	0xc142,
 	0xc741,
-	0x0e6e,
+	0x0b6e,
 	0xfeef,
 	0xc140,
-	0x08b2,
-	0xff2f,
+	0x0db2,
+	0xfeef,
 	0xd8ff,
 	0x8e01,
 	0x702c,
@@ -5735,7 +6119,7 @@ u16 imem_1d[] = {
 	0xc042,
 	0xd820,
 	0xc040,
-	0x0e4a,
+	0x0b4a,
 	0xfeef,
 	0xd8ff,
 	0x8e01,
@@ -5746,7 +6130,7 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc741,
-	0x0e32,
+	0x0b32,
 	0xfeef,
 	0x1c00,
 	0x30c1,
@@ -5759,7 +6143,7 @@ u16 imem_1d[] = {
 	0xc741,
 	0xc042,
 	0xd8ff,
-	0x0e1a,
+	0x0b1a,
 	0xfeef,
 	0x1c00,
 	0x3481,
@@ -5771,7 +6155,7 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc741,
-	0x0e02,
+	0x0b02,
 	0xfeef,
 	0xc540,
 	0x8e01,
@@ -5782,11 +6166,11 @@ u16 imem_1d[] = {
 	0xdb08,
 	0xc542,
 	0xc741,
-	0x0dea,
+	0x0aea,
 	0xfeef,
 	0xc540,
-	0x0816,
-	0xff2f,
+	0x0d16,
+	0xfeef,
 	0xd8ff,
 	0x8e01,
 	0x702c,
@@ -5796,14 +6180,14 @@ u16 imem_1d[] = {
 	0xdb18,
 	0xc542,
 	0xc741,
-	0x0dce,
+	0x0ace,
 	0xfeef,
 	0xc540,
-	0x0cbe,
+	0x0996,
 	0x0180,
 	0xf07f,
 	0x700c,
-	0x0cea,
+	0x09ea,
 	0xfeef,
 	0xd9ff,
 	0xc007,
@@ -5820,7 +6204,7 @@ u16 imem_1d[] = {
 	0xc041,
 	0xd8ff,
 	0x702c,
-	0x0fae,
+	0x0cae,
 	0xfeef,
 	0xc642,
 	0xd828,
@@ -5828,7 +6212,7 @@ u16 imem_1d[] = {
 	0xf88c,
 	0xc543,
 	0xc642,
-	0x0f9e,
+	0x0c9e,
 	0xfeef,
 	0xc540,
 	0xf889,
@@ -5836,7 +6220,7 @@ u16 imem_1d[] = {
 	0xc642,
 	0x1c04,
 	0x33c1,
-	0x0f8e,
+	0x0c8e,
 	0xfeef,
 	0xc040,
 	0xf885,
@@ -5844,7 +6228,7 @@ u16 imem_1d[] = {
 	0xc642,
 	0x1c04,
 	0x3501,
-	0x0f7e,
+	0x0c7e,
 	0xfeef,
 	0xc540,
 	0xd8ff,
@@ -5855,11 +6239,11 @@ u16 imem_1d[] = {
 	0xc642,
 	0x1c04,
 	0x3081,
-	0x0f6a,
+	0x0c6a,
 	0xfeef,
 	0xc540,
 	0x700c,
-	0x0d12,
+	0x0a12,
 	0xfeef,
 	0x712c,
 	0x1600,
@@ -5882,10 +6266,10 @@ u16 imem_1d[] = {
 	0x1800,
 	0x0485,
 	0x700c,
-	0x0c4a,
+	0x094a,
 	0xfeef,
 	0xd9ff,
-	0x0f6a,
+	0x0c6a,
 	0xfeef,
 	0xd8ff,
 	0xc007,
@@ -5898,7 +6282,7 @@ u16 imem_1d[] = {
 	0x746c,
 	0xc543,
 	0xc541,
-	0x0d02,
+	0x0a02,
 	0xfeef,
 	0xc540,
 	0xd90c,
@@ -5909,10 +6293,10 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc642,
 	0xc541,
-	0x0cee,
+	0x09ee,
 	0xfeef,
 	0xc540,
-	0x0f16,
+	0x0c16,
 	0xfeef,
 	0xd8ff,
 	0xd8ff,
@@ -5922,7 +6306,7 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0cd2,
+	0x09d2,
 	0xfeef,
 	0xc540,
 	0xd850,
@@ -5944,11 +6328,11 @@ u16 imem_1d[] = {
 	0xf264,
 	0xc009,
 	0x702c,
-	0x0c66,
+	0x0966,
 	0xfeef,
 	0x7810,
 	0x700c,
-	0x0aa6,
+	0x0a5a,
 	0x0060,
 	0xd91e,
 	0x2440,
@@ -6036,9 +6420,9 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x09c4,
-	0x0b96,
+	0x0896,
 	0xfecf,
-	0x0b06,
+	0x0806,
 	0xfecf,
 	0x7167,
 	0x7277,
@@ -6090,7 +6474,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0001,
 	0xb8e3,
-	0x089c,
+	0x086c,
 	0xff41,
 	0x700c,
 	0x1e00,
@@ -6135,8 +6519,8 @@ u16 imem_1d[] = {
 	0x8000,
 	0x07a8,
 	0x40c1,
-	0x0afe,
-	0x01a0,
+	0x0fd6,
+	0x0160,
 	0x4328,
 	0x4508,
 	0x231a,
@@ -6157,7 +6541,7 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0bb8,
-	0x0906,
+	0x08ba,
 	0x0060,
 	0x702c,
 	0x700c,
@@ -6199,7 +6583,7 @@ u16 imem_1d[] = {
 	0x4020,
 	0x732c,
 	0xc341,
-	0x0dbe,
+	0x0a96,
 	0x0160,
 	0x4358,
 	0x710c,
@@ -6217,7 +6601,7 @@ u16 imem_1d[] = {
 	0x110d,
 	0x40e1,
 	0x732c,
-	0x0d36,
+	0x0a36,
 	0xfeef,
 	0xdabf,
 	0xc001,
@@ -6226,7 +6610,7 @@ u16 imem_1d[] = {
 	0xe887,
 	0x40e1,
 	0x732c,
-	0x0d22,
+	0x0a22,
 	0xfeef,
 	0xda7f,
 	0x1600,
@@ -6244,17 +6628,17 @@ u16 imem_1d[] = {
 	0x3fc1,
 	0x60f8,
 	0x60b9,
-	0x0fb6,
+	0x0cf6,
 	0x01e0,
 	0x202f,
 	0x06c7,
-	0x0862,
+	0x0832,
 	0xff8f,
-	0x086a,
+	0x083a,
 	0xffaf,
 	0x4300,
 	0x4100,
-	0x0db6,
+	0x0a8e,
 	0x0160,
 	0x4060,
 	0x1600,
@@ -6281,8 +6665,8 @@ u16 imem_1d[] = {
 	0x900e,
 	0x0022,
 	0x40e1,
-	0x091a,
-	0x0160,
+	0x0df2,
+	0x0120,
 	0x732c,
 	0xc0a2,
 	0x1404,
@@ -6471,12 +6855,12 @@ u16 imem_1d[] = {
 	0x790b,
 	0x700c,
 	0xf212,
-	0x0c42,
+	0x0c12,
 	0xfecf,
-	0x08c6,
+	0x0896,
 	0xff2f,
 	0x40a1,
-	0x0b5a,
+	0x085a,
 	0xfecf,
 	0x40c3,
 	0x8000,
@@ -6507,7 +6891,7 @@ u16 imem_1d[] = {
 	0x780f,
 	0x78e0,
 	0xc0f1,
-	0x0956,
+	0x090a,
 	0x0040,
 	0xc0d1,
 	0x7fe0,
@@ -6671,7 +7055,7 @@ u16 imem_1d[] = {
 	0xb6c8,
 	0x2482,
 	0x3a0d,
-	0x0e76,
+	0x0e3a,
 	0xff6f,
 	0xc083,
 	0xc083,
@@ -6765,14 +7149,14 @@ u16 imem_1d[] = {
 	0x42c3,
 	0x0040,
 	0x5800,
-	0x0f82,
+	0x0cc2,
 	0x01e0,
 	0x706c,
-	0x0c4e,
+	0x0c02,
 	0x0000,
-	0x09ea,
+	0x09ba,
 	0xfecf,
-	0x0c96,
+	0x0c4a,
 	0x0040,
 	0x700c,
 	0x1e00,
@@ -6808,7 +7192,7 @@ u16 imem_1d[] = {
 	0x0021,
 	0x702c,
 	0x7104,
-	0x0e26,
+	0x0df6,
 	0xfeef,
 	0x780f,
 	0x216f,
@@ -6822,24 +7206,24 @@ u16 imem_1d[] = {
 	0x3f80,
 	0x0000,
 	0x02c8,
-	0x0ece,
+	0x0e82,
 	0x0020,
 	0xdaa0,
 	0x2400,
 	0x3f80,
 	0x0000,
 	0x0228,
-	0x0ec2,
+	0x0e76,
 	0x0020,
 	0xdaa0,
 	0x2456,
 	0x3c40,
-	0x0eb6,
+	0x0e6a,
 	0x0020,
 	0xdaa0,
 	0x2455,
 	0x3e80,
-	0x0eae,
+	0x0e62,
 	0x0020,
 	0xdaa0,
 	0x261a,
@@ -6849,16 +7233,16 @@ u16 imem_1d[] = {
 	0x4338,
 	0xf064,
 	0x702c,
-	0x0e9a,
+	0x0e4e,
 	0x0020,
 	0xda28,
 	0x2455,
 	0x3980,
-	0x0e8e,
+	0x0e42,
 	0x0020,
 	0xda28,
 	0xc09c,
-	0x0e86,
+	0x0e3a,
 	0x0020,
 	0xda28,
 	0x2355,
@@ -6866,21 +7250,21 @@ u16 imem_1d[] = {
 	0x78c5,
 	0x2455,
 	0x3c01,
-	0x0a8a,
-	0x0120,
+	0x0f62,
+	0x00e0,
 	0x724c,
 	0x2355,
 	0x38c0,
 	0x78c5,
-	0x0a7e,
-	0x0120,
+	0x0f56,
+	0x00e0,
 	0x2455,
 	0x3981,
 	0x2355,
 	0x3d00,
 	0x78c5,
-	0x0a72,
-	0x0120,
+	0x0f4a,
+	0x00e0,
 	0xc19c,
 	0x40c3,
 	0x8000,
@@ -6896,7 +7280,7 @@ u16 imem_1d[] = {
 	0x3c00,
 	0x20f4,
 	0x00de,
-	0x094e,
+	0x091e,
 	0xfeef,
 	0x200a,
 	0x0780,
@@ -6909,7 +7293,7 @@ u16 imem_1d[] = {
 	0x20f4,
 	0x00c0,
 	0xbdc5,
-	0x0936,
+	0x0906,
 	0xfeef,
 	0x65fd,
 	0x235a,
@@ -7039,15 +7423,15 @@ u16 imem_1d[] = {
 	0x0032,
 	0x200a,
 	0x0780,
-	0x0f9e,
+	0x0f6e,
 	0xfe8f,
 	0xf006,
-	0x0f1e,
+	0x0c1e,
 	0xfeaf,
 	0x200a,
 	0x0780,
 	0x4100,
-	0x0f16,
+	0x0c16,
 	0xfeaf,
 	0x202f,
 	0x06c6,
@@ -7128,10 +7512,10 @@ u16 imem_1d[] = {
 	0x0ec7,
 	0xb0a5,
 	0x7b2e,
-	0x0e72,
+	0x0b72,
 	0xfe8f,
 	0x4200,
-	0x0e6e,
+	0x0b6e,
 	0xfeaf,
 	0x4060,
 	0xc101,
@@ -7163,7 +7547,7 @@ u16 imem_1d[] = {
 	0x07c9,
 	0x051a,
 	0xffce,
-	0x0b62,
+	0x0b32,
 	0xfeef,
 	0x730c,
 	0x41c3,
@@ -7180,14 +7564,14 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0019,
 	0x7014,
-	0x085c,
-	0x0141,
+	0x0d34,
+	0x0101,
 	0x40c3,
 	0x9003,
 	0xe174,
 	0x702c,
 	0xb020,
-	0x0e82,
+	0x0e52,
 	0xfeef,
 	0xb021,
 	0x2480,
@@ -7198,52 +7582,14 @@ u16 imem_1d[] = {
 	0x78e0,
 	0xc2e4,
 	0xc1a4,
-	0x4608,
-	0x700c,
-	0x09fe,
-	0xfeaf,
-	0xd9ff,
-	0x1200,
-	0x3083,
-	0x702c,
-	0xd8ff,
-	0x754c,
-	0x4528,
-	0xc143,
-	0xc142,
-	0xc141,
-	0x0abe,
-	0xfeaf,
-	0xc140,
-	0xbec1,
-	0xd8ff,
-	0xd980,
-	0x764c,
-	0xdb20,
-	0xc543,
-	0xc642,
-	0xc541,
-	0x0aaa,
-	0xfeaf,
-	0x1c00,
-	0x3041,
-	0x700c,
-	0x0a5e,
-	0xfeaf,
-	0x712c,
-	0xc0a4,
-	0xc6c4,
-	0x78e0,
-	0xc2e4,
-	0xc1a4,
 	0xd858,
 	0xb89f,
 	0x88c0,
 	0x10cd,
 	0x808d,
 	0x700c,
-	0x09aa,
-	0xfeaf,
+	0x0ef6,
+	0xfe6f,
 	0xd9ff,
 	0x2605,
 	0x1341,
@@ -7256,12 +7602,12 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0xd980,
 	0xda09,
-	0x0a66,
-	0xfeaf,
+	0x0fb2,
+	0xfe6f,
 	0xdb20,
 	0x700c,
-	0x0a1e,
-	0xfeaf,
+	0x0f6a,
+	0xfe6f,
 	0x712c,
 	0xc0a4,
 	0xc6c4,
@@ -7403,7 +7749,7 @@ u16 imem_1d[] = {
 	0x20ca,
 	0x008d,
 	0xc2e6,
-	0x0ece,
+	0x0eea,
 	0xff2f,
 	0xc1a4,
 	0x781d,
@@ -7431,7 +7777,7 @@ u16 imem_1d[] = {
 	0x708e,
 	0x8000,
 	0x0024,
-	0x0e96,
+	0x0eb2,
 	0xff0f,
 	0x79cf,
 	0x7b3d,
@@ -7460,7 +7806,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0053,
 	0x0003,
-	0x0cb6,
+	0x0cd2,
 	0xfeaf,
 	0xd80a,
 	0x276f,
@@ -7489,7 +7835,7 @@ u16 imem_1d[] = {
 	0x0055,
 	0x0006,
 	0xc441,
-	0x0c7e,
+	0x0c9a,
 	0xfeaf,
 	0xc640,
 	0x8f08,
@@ -7497,7 +7843,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005a,
 	0x0000,
-	0x0c6e,
+	0x0c8a,
 	0xfeaf,
 	0xd80a,
 	0xde32,
@@ -7518,7 +7864,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005b,
 	0x0005,
-	0x0c42,
+	0x0c5e,
 	0xfeaf,
 	0xd80a,
 	0x1601,
@@ -7534,7 +7880,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005c,
 	0x0005,
-	0x0c22,
+	0x0c3e,
 	0xfeaf,
 	0xc440,
 	0x8f08,
@@ -7551,7 +7897,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005d,
 	0x0005,
-	0x0c02,
+	0x0c1e,
 	0xfeaf,
 	0xc440,
 	0xf841,
@@ -7561,7 +7907,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005e,
 	0x0005,
-	0x0bee,
+	0x0c0a,
 	0xfeaf,
 	0xc440,
 	0x8d00,
@@ -7575,7 +7921,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x005f,
 	0x0005,
-	0x0bd2,
+	0x0bee,
 	0xfeaf,
 	0xc440,
 	0xf835,
@@ -7585,7 +7931,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0060,
 	0x0005,
-	0x0bbe,
+	0x0bda,
 	0xfeaf,
 	0xc440,
 	0x8d00,
@@ -7609,7 +7955,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0061,
 	0x0005,
-	0x0b8e,
+	0x0baa,
 	0xfeaf,
 	0xc440,
 	0x1501,
@@ -7625,7 +7971,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0062,
 	0x0005,
-	0x0b6e,
+	0x0b8a,
 	0xfeaf,
 	0xc440,
 	0x40c3,
@@ -7704,11 +8050,11 @@ u16 imem_1d[] = {
 	0x1cfc,
 	0xb6c8,
 	0xc1a7,
-	0xda07,
+	0xda12,
 	0xba8c,
 	0x40c3,
 	0x0000,
-	0x9f38,
+	0x3a44,
 	0x45cb,
 	0x9012,
 	0x0328,
@@ -7717,12 +8063,12 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0002,
 	0xb500,
-	0xd858,
+	0xd875,
 	0xb501,
 	0x41c3,
 	0x00b8,
 	0x0001,
-	0x0aaa,
+	0x0ac6,
 	0xfeaf,
 	0xd80a,
 	0xcc20,
@@ -7737,7 +8083,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00b9,
 	0x0000,
-	0x0d22,
+	0x0a6e,
 	0xfe0f,
 	0x1e00,
 	0x7043,
@@ -7771,8 +8117,8 @@ u16 imem_1d[] = {
 	0x9002,
 	0x0040,
 	0x9000,
-	0x0a46,
-	0x0120,
+	0x0f6a,
+	0x00e0,
 	0xc046,
 	0xc000,
 	0xb8e0,
@@ -7805,7 +8151,7 @@ u16 imem_1d[] = {
 	0x00c0,
 	0x0ce2,
 	0xffcf,
-	0x0f92,
+	0x0fa2,
 	0xff0f,
 	0x8d00,
 	0x7014,
@@ -7895,7 +8241,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0141,
 	0x0001,
-	0x0be6,
+	0x0932,
 	0xfe0f,
 	0x222f,
 	0x06c2,
@@ -7974,11 +8320,11 @@ u16 imem_1d[] = {
 	0x0f80,
 	0x9002,
 	0x0086,
-	0x0952,
-	0x0120,
+	0x0e76,
+	0x00e0,
 	0x90c0,
-	0x08e2,
-	0x0120,
+	0x0e06,
+	0x00e0,
 	0x40a1,
 	0x1600,
 	0x7081,
@@ -7997,11 +8343,11 @@ u16 imem_1d[] = {
 	0xb0c0,
 	0x0b2a,
 	0x0000,
-	0x0b4a,
+	0x0b96,
 	0xff8f,
-	0x08fe,
+	0x091a,
 	0xfe8f,
-	0x0c52,
+	0x0c9e,
 	0xff4f,
 	0xca04,
 	0x704c,
@@ -8065,15 +8411,15 @@ u16 imem_1d[] = {
 	0x033f,
 	0x710c,
 	0xf007,
-	0x0bd2,
+	0x091e,
 	0xfe0f,
 	0x0abe,
 	0x0020,
 	0xd80d,
 	0x700c,
-	0x0fc6,
+	0x0d52,
 	0x0180,
-	0x0ee2,
+	0x0c2e,
 	0xfe4f,
 	0x1e00,
 	0x7003,
@@ -8115,14 +8461,14 @@ u16 imem_1d[] = {
 	0x8024,
 	0x2616,
 	0x30cb,
-	0x0bde,
+	0x0bfa,
 	0xfeaf,
 	0x710c,
 	0xc000,
 	0x0813,
 	0x00be,
 	0x700c,
-	0x0baa,
+	0x08ce,
 	0x0100,
 	0x0a4a,
 	0x0020,
@@ -8131,7 +8477,7 @@ u16 imem_1d[] = {
 	0x2044,
 	0x808e,
 	0xf207,
-	0x0b9a,
+	0x08be,
 	0x0120,
 	0x710c,
 	0x0a36,
@@ -8145,7 +8491,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0004,
 	0xe887,
-	0x0b7e,
+	0x08a2,
 	0x0120,
 	0x730c,
 	0x0a1a,
@@ -8155,14 +8501,14 @@ u16 imem_1d[] = {
 	0x2044,
 	0x820d,
 	0xf207,
-	0x0b6a,
+	0x088e,
 	0x0120,
 	0x750c,
 	0x0a06,
 	0x0020,
 	0xd8fd,
 	0xee08,
-	0x0b5a,
+	0x087e,
 	0x0120,
 	0x720c,
 	0x09fa,
@@ -8172,7 +8518,7 @@ u16 imem_1d[] = {
 	0x0813,
 	0x013e,
 	0x760c,
-	0x0b46,
+	0x086a,
 	0x0100,
 	0x09e6,
 	0x0020,
@@ -8185,11 +8531,11 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0019,
 	0xe884,
-	0x0b2e,
+	0x0852,
 	0x0120,
 	0xd80d,
 	0xed07,
-	0x0b26,
+	0x084a,
 	0x0120,
 	0x740c,
 	0x09c2,
@@ -8237,21 +8583,21 @@ u16 imem_1d[] = {
 	0x7014,
 	0x710c,
 	0xf213,
-	0x0e76,
+	0x0e92,
 	0xfe4f,
 	0x8e00,
 	0x7104,
-	0x0af6,
+	0x0b12,
 	0xfeaf,
 	0x780f,
-	0x0d8a,
+	0x0ad6,
 	0xfe4f,
-	0x0dc2,
+	0x0dde,
 	0xfe6f,
 	0x1e01,
 	0x1003,
 	0x4100,
-	0x0df6,
+	0x0b1a,
 	0x0120,
 	0x40a1,
 	0x8e00,
@@ -8265,12 +8611,12 @@ u16 imem_1d[] = {
 	0x700c,
 	0xf5e7,
 	0xf1f7,
-	0x0ac6,
+	0x0ae2,
 	0xfeaf,
 	0x730c,
 	0xca09,
 	0xe885,
-	0x093e,
+	0x095a,
 	0xfeaf,
 	0xc002,
 	0x0922,
@@ -8296,7 +8642,7 @@ u16 imem_1d[] = {
 	0x78eb,
 	0xf217,
 	0x40c1,
-	0x0dda,
+	0x0df6,
 	0xfe6f,
 	0x712c,
 	0xc102,
@@ -8304,24 +8650,24 @@ u16 imem_1d[] = {
 	0x7bcf,
 	0x710c,
 	0x42a1,
-	0x093a,
+	0x0956,
 	0xfeaf,
 	0x4378,
 	0xc102,
 	0x700c,
 	0x42a1,
-	0x092e,
+	0x094a,
 	0xfeaf,
 	0x4363,
 	0x4163,
-	0x09da,
+	0x09f6,
 	0xfeaf,
 	0x40a1,
 	0x71c5,
 	0x0ec1,
 	0x90b4,
 	0x710c,
-	0x08da,
+	0x08f6,
 	0xfeaf,
 	0xc002,
 	0x1600,
@@ -8329,9 +8675,9 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0000,
 	0xb8e5,
-	0x09f8,
+	0x0a14,
 	0xfe82,
-	0x0b02,
+	0x0b4e,
 	0xff8f,
 	0xca04,
 	0x706f,
@@ -8370,13 +8716,13 @@ u16 imem_1d[] = {
 	0xe032,
 	0xc003,
 	0xb100,
-	0x09de,
+	0x09fa,
 	0xfeaf,
 	0x700c,
-	0x0cfa,
+	0x0a1e,
 	0x00c0,
-	0x082e,
-	0x0160,
+	0x0d4e,
+	0x0120,
 	0xd807,
 	0x23ab,
 	0x30c4,
@@ -8423,7 +8769,7 @@ u16 imem_1d[] = {
 	0x0012,
 	0x218c,
 	0x8203,
-	0x0fcc,
+	0x0cec,
 	0x010e,
 	0x080e,
 	0x0000,
@@ -8460,10 +8806,12 @@ u16 imem_1d[] = {
 	0x1cfc,
 	0xb6c8,
 	0x2482,
-	0x3002,
+	0x3402,
+	0xc34e,
 	0x4608,
-	0x4060,
+	0xc00e,
 	0xdc08,
+	0xc24f,
 	0xbc61,
 	0x0c01,
 	0x1031,
@@ -8471,197 +8819,403 @@ u16 imem_1d[] = {
 	0x2044,
 	0x004d,
 	0x40a1,
-	0x4378,
-	0xc24e,
-	0x0ae2,
+	0x0af2,
 	0xff2f,
-	0x4728,
-	0x2353,
-	0x30c0,
+	0xc151,
+	0xc00e,
 	0x42c3,
 	0x9003,
 	0xe0c4,
-	0xb200,
 	0x70b5,
+	0xb8c3,
+	0xb200,
 	0xd9f0,
 	0x208a,
 	0x0c07,
 	0x20ca,
 	0x0041,
-	0x2004,
-	0x06c1,
+	0xc10e,
 	0xba8b,
+	0xc39a,
+	0x7904,
 	0xb220,
-	0xc096,
+	0xc09a,
 	0x702c,
-	0xda28,
 	0x09be,
 	0xffef,
-	0xc396,
-	0x202f,
-	0x06c7,
+	0xda28,
+	0xc00e,
+	0x714c,
+	0xc346,
+	0x780f,
 	0x20b8,
 	0x0fc3,
 	0xc06d,
+	0xc00e,
+	0x2644,
+	0x17c3,
+	0x4338,
+	0xc04c,
+	0x40c3,
+	0x0000,
+	0x0f00,
+	0xc04b,
+	0xd820,
+	0xc04a,
+	0xc011,
+	0xc10f,
+	0x1c24,
+	0x3003,
+	0xc048,
+	0x14b0,
+	0x3000,
+	0x1c1c,
+	0x3103,
+	0xc643,
+	0xc050,
+	0xc045,
+	0x14ac,
+	0x3000,
+	0xc052,
+	0xc044,
+	0xc00f,
+	0x1c25,
+	0x3002,
+	0x4040,
+	0xeb05,
+	0xbb61,
+	0x0bff,
+	0x8031,
+	0x781b,
+	0x205a,
+	0x0100,
+	0x200f,
+	0x0380,
+	0x0b76,
+	0x0020,
+	0x780f,
+	0xc00f,
+	0xb863,
+	0xc058,
+	0x7314,
+	0x40c3,
+	0x0000,
+	0xffff,
+	0x0048,
+	0x002d,
+	0xc053,
+	0x41c3,
+	0x9008,
+	0x01ea,
+	0x9100,
+	0x2004,
+	0x0f82,
+	0x0000,
+	0xc0ff,
+	0x2004,
+	0x0f80,
+	0x0000,
+	0x3f00,
+	0x2080,
+	0x0010,
+	0x7845,
+	0xb100,
+	0x1e00,
+	0x76c4,
+	0x900f,
+	0xe022,
+	0x1600,
+	0x7100,
+	0x9004,
+	0x00ee,
+	0x2050,
+	0x0141,
+	0xb885,
+	0x1e00,
+	0x7044,
+	0x9005,
+	0xe0ee,
+	0xc053,
+	0x14a8,
+	0x3000,
+	0xc059,
+	0x14a4,
+	0x3000,
+	0xc057,
+	0x0b56,
+	0x0060,
+	0xc083,
+	0x40c3,
+	0x8000,
+	0x07cb,
+	0x8861,
+	0x1600,
+	0x7081,
+	0x8000,
+	0x07cb,
+	0xf00f,
+	0xc212,
+	0x7a34,
+	0x9200,
+	0xe88a,
+	0xc09a,
+	0x20f5,
+	0x0040,
+	0x080d,
+	0x0833,
+	0x2042,
+	0x0800,
+	0xb200,
+	0x7124,
+	0x0be9,
+	0x8045,
+	0xc00f,
+	0x7704,
+	0x0837,
+	0x00b5,
+	0x70b5,
+	0x46cb,
+	0x0000,
+	0xf0f0,
+	0x47cb,
+	0x0000,
+	0xffff,
+	0x43c1,
+	0x73fd,
+	0xd80f,
+	0x41c1,
+	0x42c1,
+	0x0e5a,
+	0xfeef,
+	0xc340,
+	0x70b5,
+	0x77dd,
+	0xd808,
+	0x41c1,
+	0x42c1,
+	0x43e1,
+	0x0e46,
+	0xfeef,
+	0xc740,
+	0x1600,
+	0x7100,
+	0x9008,
+	0x01e0,
+	0x218a,
+	0x0ffd,
+	0xc056,
+	0x7824,
+	0xc054,
+	0x40c3,
+	0x900e,
+	0x004c,
+	0x1600,
+	0x711b,
+	0x900e,
+	0x004c,
+	0x90a1,
+	0xc00f,
+	0xe88a,
+	0x40c3,
+	0x0000,
+	0xffff,
+	0x4100,
+	0x4200,
+	0x0e56,
+	0xfeef,
+	0x4300,
+	0xd80f,
+	0x0aae,
+	0xfe6f,
+	0xd90f,
+	0x40c3,
+	0x0000,
+	0x0f00,
+	0x0ebe,
+	0xfeef,
+	0x702c,
+	0xc014,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xc10e,
+	0x0916,
+	0x00e0,
+	0x730c,
+	0x70ed,
+	0x46cb,
+	0x9003,
+	0xe03e,
+	0xd820,
+	0x712c,
+	0xb6e0,
+	0x1e9b,
+	0x13dc,
+	0x1e9c,
+	0x13dc,
+	0x1ee6,
+	0x9fc5,
+	0x1ef2,
+	0x9045,
+	0x0c12,
+	0xfe2f,
+	0x1ee4,
+	0x9045,
+	0xc083,
+	0x4163,
+	0x0b1a,
+	0x00a0,
+	0x42a1,
+	0xd80f,
+	0x0a56,
+	0xfe6f,
+	0xd90f,
+	0xc016,
+	0x712c,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xb6e0,
+	0xc011,
+	0x0bea,
+	0xfe2f,
+	0x7810,
+	0xc010,
+	0x712c,
+	0x0a62,
+	0x00a0,
+	0x704c,
+	0xc083,
+	0x4163,
+	0x0aea,
+	0x00a0,
+	0x42a1,
+	0xd80f,
+	0x0a26,
+	0xfe6f,
+	0xd90f,
+	0xc00f,
+	0xe806,
+	0x0e6a,
+	0xfe2f,
+	0x700c,
+	0xf00a,
+	0x40c3,
+	0x0000,
+	0xfffe,
+	0x6821,
+	0x4220,
+	0x0daa,
+	0xfeef,
+	0x4320,
+	0x40c3,
+	0x900e,
+	0x004c,
+	0x1600,
+	0x711b,
+	0x900e,
+	0x004c,
+	0x9001,
+	0xc055,
+	0xc014,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xc10e,
+	0x086e,
+	0x00e0,
+	0xd807,
 	0x40c3,
 	0x0000,
 	0x0f00,
-	0xc04b,
+	0x0df6,
+	0xfeef,
+	0x702c,
+	0x70ed,
+	0x712c,
 	0xd820,
-	0xc04a,
-	0x14a0,
-	0x3000,
-	0x714c,
-	0xc346,
-	0xc04f,
-	0xc045,
-	0x149c,
-	0x3000,
-	0x2644,
-	0x17c3,
-	0x1c30,
-	0x36c0,
-	0xc050,
-	0xc044,
-	0xc00e,
-	0x4338,
+	0xb6e0,
+	0x1e9b,
+	0x13dc,
+	0x1e9c,
+	0x13dc,
+	0x1ee6,
+	0x9fc5,
+	0x4528,
+	0x1ef2,
+	0x9044,
+	0x0b62,
+	0xfe2f,
+	0x1ee4,
+	0x9044,
+	0xc215,
+	0xc083,
+	0x0a6a,
+	0x00a0,
+	0x4163,
+	0xc016,
+	0xd90f,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xd80f,
+	0x099a,
+	0xfe6f,
+	0xb6e0,
 	0xc10e,
-	0x1c25,
-	0x3002,
-	0x4040,
-	0xeb06,
-	0xbb61,
-	0x0b01,
-	0x0031,
-	0x781b,
-	0x1c24,
-	0x3003,
-	0x205a,
-	0x0100,
-	0xc748,
-	0x1c1c,
-	0x3103,
-	0xc643,
-	0x200f,
-	0x0380,
-	0x780f,
-	0x09da,
-	0x0020,
-	0xc054,
-	0xc00e,
-	0xb863,
-	0xc052,
-	0x7314,
+	0x081a,
+	0x00e0,
+	0xd807,
 	0x40c3,
 	0x0000,
-	0xffff,
-	0x0048,
-	0x002d,
-	0xc051,
-	0x41c3,
-	0x9008,
-	0x01ea,
-	0x9100,
-	0x2004,
-	0x0f82,
-	0x0000,
-	0xc0ff,
-	0x2004,
-	0x0f80,
-	0x0000,
-	0x3f00,
-	0x2080,
-	0x0010,
-	0x7845,
-	0xb100,
-	0x1e00,
-	0x76c4,
-	0x900f,
-	0xe022,
-	0x1600,
-	0x7100,
+	0xff00,
+	0x1ee6,
 	0x9004,
-	0x00ee,
-	0x2050,
-	0x0141,
-	0xb885,
-	0x1e00,
-	0x7044,
-	0x9005,
-	0xe0ee,
-	0xc051,
-	0x1498,
-	0x3000,
-	0xc055,
-	0x1494,
-	0x3000,
-	0xc053,
-	0x0996,
-	0x0060,
+	0x1ef2,
+	0x9344,
+	0x1ee4,
+	0x9344,
+	0xc011,
+	0x712c,
+	0x7104,
+	0x0b1a,
+	0xfe2f,
+	0x7810,
+	0xc215,
 	0xc083,
-	0x46cb,
+	0x0a26,
+	0x00a0,
+	0x4163,
+	0xc00f,
+	0xe805,
+	0x0dae,
+	0xfe2f,
+	0x710c,
+	0xc09a,
+	0x712c,
+	0x0982,
+	0x00a0,
+	0x704c,
+	0x40c3,
 	0x8000,
 	0x07cb,
-	0x8e61,
-	0x8e20,
-	0xf00e,
-	0xc210,
-	0x7a34,
-	0x9200,
-	0xe889,
-	0xc096,
-	0x20f5,
-	0x0040,
-	0x080b,
-	0x0833,
-	0x2042,
-	0x0800,
-	0xb200,
-	0x7124,
-	0x0be7,
-	0x8045,
-	0xc00e,
-	0x7704,
-	0x0839,
-	0x00b5,
-	0x70b5,
-	0x47cb,
-	0x0000,
-	0xf0f0,
-	0x43db,
-	0x0000,
-	0xffff,
-	0x43e1,
-	0x737f,
-	0xd80f,
-	0x41e1,
-	0x42e1,
-	0x0e42,
-	0xfeef,
-	0xc340,
-	0x70b5,
-	0x23ca,
-	0x33c2,
-	0xd808,
-	0x41e1,
-	0x42e1,
-	0x4363,
-	0x0e2e,
-	0xfeef,
-	0x1c00,
-	0x36c0,
-	0x0b3a,
-	0x0060,
-	0xc083,
-	0x8e61,
-	0x8e20,
+	0x1600,
+	0x708e,
+	0x8000,
+	0x07cb,
+	0x8861,
+	0x41c1,
 	0xf00f,
-	0xc20f,
+	0xc210,
 	0x7a34,
 	0x9200,
 	0x0815,
 	0x07f1,
-	0xc096,
+	0xc09a,
 	0x20f5,
 	0x0040,
 	0x0809,
@@ -8671,51 +9225,48 @@ u16 imem_1d[] = {
 	0x7124,
 	0x0be9,
 	0x8045,
-	0xc012,
-	0x080b,
-	0x0114,
-	0x0c76,
-	0xffaf,
-	0xc014,
-	0xc013,
-	0xe807,
+	0xc017,
+	0x087f,
+	0x0030,
+	0x740c,
 	0x41c3,
 	0x0036,
 	0x0000,
-	0x0b2a,
-	0xfe6f,
-	0x740c,
-	0x8ee0,
-	0xf035,
-	0xc010,
-	0x7dfd,
+	0x09ae,
+	0xfe4f,
+	0x1600,
+	0x708e,
+	0x8000,
+	0x07cb,
+	0xf033,
+	0xc012,
+	0x7ddd,
 	0x20f5,
-	0x03c2,
-	0xc00f,
+	0x0382,
+	0xc010,
 	0x20f5,
-	0x03c3,
+	0x0383,
 	0x6358,
 	0x781c,
 	0x2048,
 	0x0000,
 	0x2049,
 	0x07c1,
-	0xc015,
-	0x78f4,
+	0xc019,
+	0x78d4,
 	0xb020,
 	0x4b50,
 	0x2048,
-	0x0000,
-	0xc04e,
-	0xc013,
-	0xe812,
-	0xc010,
+	0x000f,
+	0xc017,
+	0xe813,
+	0xc012,
 	0x4363,
 	0x20f5,
-	0x03c2,
-	0xc00f,
+	0x0382,
+	0xc010,
 	0x20f5,
-	0x03c0,
+	0x0380,
 	0xc142,
 	0xc240,
 	0xc041,
@@ -8723,29 +9274,31 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0038,
 	0x0005,
-	0x0ada,
+	0x095a,
 	0xfe6f,
 	0x42a1,
-	0xc00e,
-	0x41c3,
-	0x0039,
-	0x0003,
-	0x42a1,
-	0x780e,
+	0x78ee,
 	0xc040,
 	0x207f,
 	0x0140,
-	0x0d56,
+	0x41c3,
+	0x0039,
+	0x0003,
+	0x42a1,
+	0x090a,
 	0xfdef,
 	0x4363,
-	0x71e5,
-	0x8e01,
+	0x71c5,
+	0x40c3,
+	0x8000,
+	0x07cb,
+	0x8801,
 	0x0897,
-	0x83e5,
-	0x2744,
+	0x83a5,
+	0x2644,
 	0x105b,
-	0xc012,
-	0x0835,
+	0xc018,
+	0x0833,
 	0x0115,
 	0x42c3,
 	0x9008,
@@ -8765,7 +9318,7 @@ u16 imem_1d[] = {
 	0xfc00,
 	0x7825,
 	0xb200,
-	0xc011,
+	0xc013,
 	0x1e00,
 	0x7004,
 	0x9005,
@@ -8775,1995 +9328,1330 @@ u16 imem_1d[] = {
 	0x9003,
 	0xe004,
 	0x2480,
-	0x3002,
+	0x3402,
 	0x1404,
 	0x341b,
 	0xc6c6,
-	0x78e0,
 	0xc2e6,
 	0x1cfc,
 	0xb6c8,
 	0xc1ad,
 	0xc248,
 	0x4338,
-	0x0c16,
-	0xfeef,
-	0xc046,
-	0x2342,
-	0x30cd,
-	0xc047,
-	0x097e,
-	0xfe6f,
-	0x7eaf,
-	0x0d33,
-	0x1134,
-	0xc044,
-	0x700c,
-	0x0d82,
-	0xfe2f,
-	0x702c,
-	0x1200,
-	0x3083,
-	0x700c,
-	0xd981,
-	0xc043,
-	0xc042,
-	0xc041,
-	0xc040,
-	0xd8ff,
-	0xb98e,
-	0x0e3e,
-	0xfe2f,
-	0x754c,
-	0x700c,
-	0x0df6,
-	0xfe2f,
-	0x712c,
-	0x730c,
-	0x203c,
-	0x0381,
-	0x2342,
-	0x304e,
-	0x78cf,
-	0x71ed,
-	0x273c,
-	0x1000,
-	0x2004,
-	0x8040,
-	0xc045,
-	0xc004,
-	0x27ca,
-	0x1222,
-	0x7014,
-	0x40e1,
-	0x20cf,
-	0x00a2,
-	0x74b5,
-	0x0c26,
-	0xfeef,
-	0x27ca,
-	0x1005,
-	0x0c2a,
-	0xfeef,
-	0xc04a,
-	0xc04c,
-	0x40c3,
-	0x0000,
-	0x2710,
-	0x0c1a,
-	0xffaf,
-	0xd908,
-	0x41c3,
-	0x900f,
-	0xe0c0,
-	0xc04b,
-	0xb1e0,
-	0xc005,
-	0x47cb,
-	0xffff,
-	0xf0f0,
-	0x7014,
-	0x208a,
-	0x0fc7,
-	0x78c0,
-	0xb105,
-	0xc004,
-	0x772c,
-	0xc145,
-	0x7014,
-	0x4020,
-	0x70fd,
-	0xc045,
-	0x773c,
-	0xc10a,
-	0xc007,
-	0x2114,
-	0x0000,
-	0x48e8,
-	0xb9c0,
-	0x6038,
-	0x0e2b,
-	0x10b5,
-	0xc044,
-	0x46cb,
-	0x0000,
-	0xf0f0,
-	0x7bf0,
-	0xd80f,
-	0x41c1,
-	0x42c1,
-	0x0c42,
-	0xfeef,
-	0xc340,
-	0xc005,
-	0x41c1,
-	0x42c1,
-	0x7b10,
-	0xd808,
-	0x0c32,
-	0xfeef,
-	0xc340,
-	0xc004,
-	0xe030,
-	0xc049,
-	0x234f,
-	0x3040,
-	0x0899,
-	0x00b1,
-	0x73b5,
-	0xc006,
-	0xb8c1,
-	0xc044,
-	0xc007,
-	0x790f,
-	0x0c96,
-	0xfe2f,
-	0x700c,
-	0x702c,
-	0x70ad,
-	0x716f,
-	0xd8ff,
-	0xb98e,
-	0x754c,
-	0x746c,
-	0xc543,
-	0xc542,
-	0x1c04,
-	0x36c0,
-	0x0d52,
-	0xfe2f,
-	0xc540,
-	0xc006,
-	0x702c,
-	0x704c,
-	0x7f0f,
-	0xd8ff,
-	0x746c,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0d3a,
-	0xfe2f,
-	0xc540,
-	0xc004,
-	0x702c,
-	0x764c,
-	0xc042,
-	0xd8ff,
-	0x746c,
-	0xc543,
-	0x1c04,
-	0x36c0,
-	0x0d22,
-	0xfe2f,
-	0xc540,
-	0xc004,
-	0x702c,
-	0x764c,
-	0xc042,
-	0x750c,
-	0xc041,
-	0xd8ff,
-	0xdb28,
-	0xc543,
-	0x0d0a,
-	0xfe2f,
-	0xc540,
-	0x0f52,
-	0xfe2f,
-	0xd8ff,
-	0xc008,
-	0x46cb,
-	0x0000,
-	0x3100,
-	0x7014,
-	0x022a,
-	0x0021,
-	0xd8ff,
-	0x02f3,
-	0x0020,
-	0x1c0c,
-	0x3441,
-	0x044c,
-	0x002d,
-	0x7177,
-	0x1600,
-	0x7080,
-	0x8000,
-	0x0013,
-	0x7014,
-	0x05d4,
-	0x0021,
-	0x7377,
-	0x4608,
-	0x269a,
-	0x1004,
-	0x7e05,
-	0xd80f,
-	0x41c1,
-	0x42c1,
-	0x43c1,
-	0x0b66,
+	0x0a96,
 	0xfeef,
-	0xc640,
-	0xc007,
-	0x790f,
-	0x700c,
-	0x0bde,
-	0xfe2f,
-	0x4338,
-	0xc006,
-	0x702c,
-	0x734c,
-	0x7f0f,
-	0xd820,
-	0xc041,
-	0x78cf,
-	0xc040,
-	0xd8ff,
-	0xdb22,
-	0x4528,
-	0xc143,
-	0x0c96,
+	0xc046,
+	0x2342,
+	0x30cd,
+	0xc047,
+	0x0ffe,
 	0xfe2f,
-	0xc742,
-	0xd828,
-	0xc041,
-	0xd808,
-	0xb861,
-	0x0801,
-	0x0031,
-	0x7edd,
-	0x702c,
-	0xd8ff,
-	0x734c,
-	0xdb22,
-	0xc543,
-	0xc742,
-	0x0c76,
+	0x7eaf,
+	0x0d33,
+	0x1134,
+	0xc044,
+	0x700c,
+	0x0932,
 	0xfe2f,
-	0xc640,
-	0xd8ff,
 	0x702c,
-	0x734c,
-	0xdb22,
-	0xc543,
-	0xc742,
-	0x1c04,
-	0x33c1,
-	0x0c62,
-	0xfe2f,
-	0xc540,
+	0x1200,
+	0x3083,
+	0x700c,
+	0xd981,
+	0xc043,
+	0xc042,
+	0xc041,
+	0xc040,
 	0xd8ff,
-	0xd980,
-	0x734c,
-	0xdb22,
-	0xc543,
-	0xc742,
-	0x1c04,
-	0x3501,
-	0x0c4a,
+	0xb98e,
+	0x09ee,
 	0xfe2f,
-	0xc540,
+	0x754c,
 	0x700c,
-	0x0c02,
+	0x09a6,
 	0xfe2f,
 	0x712c,
-	0x1600,
-	0x7080,
-	0x8000,
-	0x0004,
-	0xdae0,
-	0x201a,
-	0x0f81,
-	0x0020,
-	0x0000,
+	0x730c,
+	0x203c,
+	0x0381,
+	0x2342,
+	0x304e,
+	0x78cf,
+	0x71ed,
+	0x273c,
+	0x1000,
+	0x2004,
+	0x8040,
+	0xc045,
+	0xc004,
+	0x27ca,
+	0x1222,
+	0x7014,
+	0x40e1,
+	0x20cf,
+	0x00a2,
+	0x74b5,
+	0x0aa6,
+	0xfeef,
+	0x27ca,
+	0x1005,
+	0x0aaa,
+	0xfeef,
+	0xc04a,
+	0xc04c,
 	0x40c3,
-	0x9008,
-	0x0100,
-	0x2105,
-	0x0003,
-	0x7204,
-	0x7825,
-	0xb340,
-	0x1800,
-	0x0485,
-	0x700c,
-	0x0b3e,
-	0xfe2f,
-	0x4163,
-	0x0e5a,
-	0xfe2f,
-	0xd8ff,
-	0x70cd,
-	0xbe90,
-	0xf968,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0bfe,
-	0xfe2f,
-	0xc540,
-	0xd8ff,
+	0x0000,
+	0x2710,
+	0x0a7e,
+	0xffaf,
+	0xd908,
 	0x41c3,
+	0x900f,
+	0xe0c0,
+	0xc04b,
+	0xb1e0,
+	0xc005,
+	0x47cb,
+	0xffff,
+	0xf0f0,
+	0x7014,
+	0x208a,
+	0x0fc7,
+	0x78c0,
+	0xb105,
+	0xc004,
+	0x772c,
+	0xc145,
+	0x7014,
+	0x4020,
+	0x70fd,
+	0xc045,
+	0x773c,
+	0xc10a,
+	0xc007,
+	0x2114,
 	0x0000,
-	0x2000,
-	0x734c,
-	0x746c,
-	0xc543,
-	0xc742,
-	0xc541,
-	0xc540,
-	0x0be2,
-	0xfe2f,
-	0x4338,
-	0xf95e,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0bd6,
-	0xfe2f,
-	0xc540,
-	0xf957,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0bc6,
-	0xfe2f,
-	0xc540,
-	0xf957,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0bba,
-	0xfe2f,
-	0xc540,
-	0xf950,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0baa,
-	0xfe2f,
-	0xc540,
-	0xf950,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b9e,
-	0xfe2f,
-	0xc540,
-	0xf949,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b8e,
-	0xfe2f,
-	0xc540,
-	0xf949,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b82,
-	0xfe2f,
-	0xc540,
-	0xf942,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b72,
-	0xfe2f,
-	0xc540,
-	0xf942,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b66,
-	0xfe2f,
-	0xc540,
-	0xf93b,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b56,
-	0xfe2f,
-	0xc540,
-	0xf93b,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b4a,
-	0xfe2f,
-	0xc540,
-	0xf934,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b3a,
-	0xfe2f,
-	0xc540,
-	0xf934,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b2e,
-	0xfe2f,
-	0xc540,
-	0xf92d,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0b1e,
+	0x48e8,
+	0xb9c0,
+	0x6038,
+	0x0e2b,
+	0x10b5,
+	0xc044,
+	0x46cb,
+	0x0000,
+	0xf0f0,
+	0x7bf0,
+	0xd80f,
+	0x41c1,
+	0x42c1,
+	0x0ac2,
+	0xfeef,
+	0xc340,
+	0xc005,
+	0x41c1,
+	0x42c1,
+	0x7b10,
+	0xd808,
+	0x0ab2,
+	0xfeef,
+	0xc340,
+	0xc004,
+	0xe030,
+	0xc049,
+	0x234f,
+	0x3040,
+	0x08c1,
+	0x00b1,
+	0x73b5,
+	0xc006,
+	0xb8c1,
+	0xc044,
+	0xc007,
+	0x790f,
+	0x0846,
 	0xfe2f,
-	0xc540,
-	0xc009,
+	0x700c,
 	0x702c,
-	0x754c,
-	0x7b0f,
+	0x70ad,
+	0x716f,
 	0xd8ff,
+	0xb98e,
+	0x754c,
+	0x746c,
 	0xc543,
 	0xc542,
-	0xc541,
-	0x0b0a,
+	0x1c04,
+	0x36c0,
+	0x0902,
 	0xfe2f,
 	0xc540,
-	0x79dd,
 	0xd8ff,
+	0x702c,
 	0x754c,
 	0x746c,
-	0x1c0c,
-	0x3081,
-	0xc542,
-	0xc541,
-	0x0af2,
-	0xfe2f,
-	0xc540,
-	0xf91c,
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0ae6,
+	0x08ee,
 	0xfe2f,
 	0xc540,
-	0x0d0e,
-	0xfe2f,
+	0xc004,
+	0x702c,
+	0x764c,
+	0xc042,
 	0xd8ff,
-	0xc543,
-	0xc542,
-	0xc541,
-	0x03bd,
-	0x0020,
-	0xc540,
-	0x41c1,
-	0x724c,
 	0x746c,
 	0xc543,
-	0xc742,
-	0xc541,
-	0x0ac2,
-	0xfe2f,
-	0xc540,
-	0xf90c,
-	0xc543,
-	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0ab2,
-	0xfe2f,
-	0xc540,
-	0xf905,
-	0x1c0c,
-	0x36c0,
-	0xc742,
-	0xc541,
-	0x0aa2,
-	0xfe2f,
-	0xc540,
-	0xf8fe,
-	0xc543,
-	0xc742,
-	0xc541,
-	0x0a92,
+	0x08d6,
 	0xfe2f,
 	0xc540,
+	0xc004,
+	0x702c,
+	0x764c,
+	0xc042,
 	0x750c,
 	0xc041,
-	0xf900,
+	0xd8ff,
+	0xdb28,
 	0xc543,
-	0xc742,
-	0x0a82,
+	0x08be,
 	0xfe2f,
 	0xc540,
-	0xf8fa,
-	0x1c0c,
-	0x36c0,
-	0xc742,
-	0xc541,
-	0x0a72,
+	0x0b06,
 	0xfe2f,
-	0xc540,
-	0x750c,
-	0xc043,
-	0xf8f5,
+	0xd8ff,
+	0xc006,
+	0x702c,
+	0x704c,
+	0x7f0f,
+	0xd8ff,
+	0x746c,
+	0xc543,
 	0xc742,
 	0xc541,
-	0x0a62,
+	0x08a2,
 	0xfe2f,
 	0xc540,
-	0xf8ef,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xdb28,
 	0xc543,
-	0xc742,
+	0xc542,
 	0xc541,
-	0x0a56,
+	0x088e,
 	0xfe2f,
 	0xc540,
-	0xc004,
+	0xc008,
+	0x46cb,
+	0x0000,
+	0x3100,
+	0x7014,
+	0x021c,
+	0x0021,
+	0xd8ff,
+	0x02e5,
+	0x0020,
+	0x1c0c,
+	0x3441,
+	0x0464,
+	0x000d,
+	0x1600,
+	0x7080,
+	0x8000,
+	0x0013,
+	0x7014,
+	0x05e0,
+	0x0021,
+	0x7377,
+	0x4608,
+	0x269a,
+	0x1004,
+	0x7e05,
+	0xd80f,
+	0x41c1,
+	0x42c1,
+	0x43c1,
+	0x09be,
+	0xfeef,
+	0xc640,
+	0xc007,
+	0x790f,
+	0x700c,
+	0x0f66,
+	0xfdef,
+	0x4338,
+	0xc006,
 	0x702c,
-	0x764c,
-	0xc042,
+	0x734c,
+	0x7f0f,
+	0xd820,
+	0xc041,
+	0x78cf,
+	0xc040,
 	0xd8ff,
-	0x746c,
-	0xc543,
-	0x1c04,
-	0x36c0,
-	0x0a3e,
+	0xdb22,
+	0x4528,
+	0xc143,
+	0x0822,
 	0xfe2f,
-	0xc540,
-	0xf8e8,
-	0x1c0c,
-	0x36c0,
 	0xc742,
-	0xc541,
-	0x0a2e,
+	0xd828,
+	0xc041,
+	0xd808,
+	0xb861,
+	0x08ff,
+	0x8031,
+	0x7edd,
+	0x702c,
+	0xd8ff,
+	0x734c,
+	0xdb22,
+	0xc543,
+	0xc742,
+	0x0802,
 	0xfe2f,
+	0xc640,
+	0xd8ff,
+	0x702c,
+	0x734c,
+	0xdb22,
+	0xc543,
+	0xc742,
+	0x1c04,
+	0x33c1,
+	0x0fea,
+	0xfdef,
 	0xc540,
-	0xf8e1,
+	0xd8ff,
+	0xd980,
+	0x734c,
+	0xdb22,
 	0xc543,
 	0xc742,
-	0xc541,
-	0x0a1e,
-	0xfe2f,
+	0x1c04,
+	0x3501,
+	0x0fd6,
+	0xfdef,
 	0xc540,
-	0xc004,
-	0x702c,
-	0x764c,
-	0xc042,
-	0x750c,
-	0xc041,
+	0x700c,
+	0x0f8e,
+	0xfdef,
+	0x712c,
+	0x1600,
+	0x7080,
+	0x8000,
+	0x0004,
+	0xdae0,
+	0x201a,
+	0x0f81,
+	0x0020,
+	0x0000,
+	0x40c3,
+	0x9008,
+	0x0100,
+	0x2105,
+	0x0003,
+	0x7204,
+	0x7825,
+	0xb340,
+	0x1800,
+	0x0485,
+	0x700c,
+	0x0ec6,
+	0xfdef,
+	0x4163,
+	0x09e6,
+	0xfe2f,
 	0xd8ff,
-	0x746c,
+	0x70cd,
+	0xbe90,
+	0xf967,
 	0xc543,
-	0x0a06,
-	0xfe2f,
-	0xc540,
-	0x1c0c,
-	0x36c0,
-	0xf8da,
 	0xc742,
 	0xc541,
-	0x09f6,
-	0xfe2f,
+	0x0f86,
+	0xfdef,
 	0xc540,
-	0xc009,
-	0x70ad,
-	0x702c,
-	0x780f,
-	0xc045,
-	0xc305,
 	0xd8ff,
-	0x754c,
-	0xc543,
-	0xc542,
-	0xc541,
-	0x09da,
-	0xfe2f,
-	0xc540,
-	0xc008,
-	0x46cb,
+	0x41c3,
 	0x0000,
-	0x2100,
-	0x7014,
-	0xf26c,
-	0x714c,
-	0xd8ff,
-	0x41c1,
+	0x2000,
+	0x734c,
 	0x746c,
-	0x4358,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x09ba,
-	0xfe2f,
 	0xc540,
-	0xf8ca,
+	0x0f6e,
+	0xfdef,
+	0x4338,
+	0xf95d,
 	0xc543,
 	0xc742,
-	0x1c04,
-	0x36c0,
-	0x09aa,
-	0xfe2f,
-	0xc540,
-	0xf8bd,
-	0x1c0c,
-	0x36c0,
-	0xc742,
 	0xc541,
-	0x099a,
-	0xfe2f,
+	0x0f5e,
+	0xfdef,
 	0xc540,
-	0xf8cb,
+	0xf957,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x098a,
-	0xfe2f,
+	0x0f52,
+	0xfdef,
 	0xc540,
-	0x750c,
-	0xc041,
-	0xf8be,
+	0xf956,
 	0xc543,
 	0xc742,
-	0x097a,
-	0xfe2f,
-	0xc540,
-	0xf8b2,
-	0x1c0c,
-	0x36c0,
-	0xc742,
 	0xc541,
-	0x096a,
-	0xfe2f,
+	0x0f42,
+	0xfdef,
 	0xc540,
-	0x750c,
-	0xc043,
-	0xf8ad,
+	0xf950,
+	0xc543,
 	0xc742,
 	0xc541,
-	0x095a,
-	0xfe2f,
+	0x0f36,
+	0xfdef,
 	0xc540,
-	0xf8bc,
+	0xf94f,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x094e,
-	0xfe2f,
+	0x0f26,
+	0xfdef,
 	0xc540,
-	0xc004,
-	0x702c,
-	0x764c,
-	0xc042,
-	0xd8ff,
-	0x746c,
+	0xf949,
 	0xc543,
-	0x1c04,
-	0x36c0,
-	0x0936,
-	0xfe2f,
-	0xc540,
-	0xf8a0,
-	0x1c0c,
-	0x36c0,
 	0xc742,
 	0xc541,
-	0x0926,
-	0xfe2f,
+	0x0f1a,
+	0xfdef,
 	0xc540,
-	0xf8ae,
+	0xf948,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0916,
-	0xfe2f,
+	0x0f0a,
+	0xfdef,
 	0xc540,
-	0xc004,
-	0x702c,
-	0x764c,
-	0xc042,
-	0x750c,
-	0xc041,
-	0xd8ff,
-	0x746c,
+	0xf942,
 	0xc543,
-	0x08fe,
-	0xfe2f,
-	0xc540,
-	0x1c0c,
-	0x36c0,
-	0xf004,
-	0x1c0c,
-	0x3441,
-	0xf890,
 	0xc742,
 	0xc541,
-	0x08ea,
-	0xfe2f,
+	0x0efe,
+	0xfdef,
 	0xc540,
-	0xc305,
-	0xf88a,
-	0xc143,
-	0xc142,
-	0xc141,
-	0x08da,
-	0xfe2f,
-	0xc140,
-	0xf880,
-	0x1c0c,
-	0x30c1,
-	0xc542,
+	0xf941,
+	0xc543,
+	0xc742,
 	0xc541,
-	0x08ca,
-	0xfe2f,
+	0x0eee,
+	0xfdef,
 	0xc540,
-	0xf891,
+	0xf93b,
 	0xc543,
-	0xc542,
+	0xc742,
 	0xc541,
-	0x08ba,
-	0xfe2f,
+	0x0ee2,
+	0xfdef,
 	0xc540,
-	0x0ae6,
-	0xfe2f,
-	0xd8ff,
-	0xc004,
+	0xf93a,
 	0xc543,
+	0xc742,
 	0xc541,
-	0xc042,
-	0x1c00,
-	0x3041,
-	0xd8ff,
-	0xd980,
-	0x764c,
-	0xf0c7,
-	0xf4c8,
-	0xc00b,
-	0x70cd,
-	0x791d,
-	0xc00c,
-	0x6119,
-	0x4918,
-	0xb8c0,
-	0x6119,
-	0x4918,
-	0xc04a,
-	0x700c,
-	0xf062,
-	0xc004,
-	0x45cb,
-	0x0000,
-	0xffff,
-	0x7014,
-	0x7dc0,
-	0xd80f,
-	0x41a1,
-	0x42a1,
-	0x0f12,
-	0xfeaf,
-	0xc340,
-	0xc005,
-	0x41a1,
-	0x42a1,
-	0x7b10,
-	0xd808,
-	0x0f02,
-	0xfeaf,
-	0xc340,
-	0x700c,
-	0x0f7e,
+	0x0ed2,
 	0xfdef,
-	0x4163,
-	0x1200,
-	0x3083,
-	0xf865,
-	0xc143,
-	0xc142,
-	0xc141,
-	0x0846,
-	0xfe2f,
-	0xc140,
-	0xf85e,
+	0xc540,
+	0xf934,
 	0xc543,
-	0xc542,
+	0xc742,
 	0xc541,
-	0x0836,
-	0xfe2f,
+	0x0ec6,
+	0xfdef,
 	0xc540,
-	0xc006,
-	0x736f,
-	0x702c,
-	0x780f,
-	0xc048,
-	0xc042,
-	0xd8ff,
-	0x724c,
-	0xdb08,
-	0x1c0c,
-	0x36c0,
-	0xc541,
-	0x081a,
-	0xfe2f,
-	0x1c00,
-	0x3281,
-	0xc008,
-	0x702c,
-	0x724c,
-	0xc042,
-	0xd8ff,
-	0xdb08,
-	0x1c0c,
-	0x36c0,
+	0xf933,
+	0xc543,
+	0xc742,
 	0xc541,
-	0x0ffe,
+	0x0eb6,
 	0xfdef,
 	0xc540,
-	0xd8ff,
-	0x702c,
-	0x724c,
-	0xdb08,
-	0x1c0c,
-	0x36c0,
-	0xc542,
+	0xf92d,
+	0xc543,
+	0xc742,
 	0xc541,
-	0x0fea,
+	0x0eaa,
 	0xfdef,
-	0x1c00,
-	0x3281,
-	0xc00a,
-	0xd980,
+	0xc540,
+	0xc009,
+	0x702c,
 	0x754c,
 	0x7b0f,
 	0xd8ff,
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0fd2,
+	0x0e92,
 	0xfdef,
 	0xc540,
-	0x700c,
-	0x0f8a,
-	0xfdef,
-	0x712c,
-	0xc004,
-	0x7104,
-	0xc044,
-	0xc007,
-	0x232f,
-	0x3007,
-	0xc004,
-	0x0837,
-	0x80b4,
-	0x7bf0,
-	0x700c,
-	0x0ed6,
-	0xfdef,
-	0x4163,
-	0x1200,
-	0x3083,
-	0xd8ff,
-	0x702c,
-	0x754c,
-	0xc643,
-	0xc642,
-	0xc641,
-	0x0f96,
-	0xfdef,
-	0xc640,
-	0x09de,
-	0xfe2f,
-	0xd8ff,
-	0xf831,
-	0xc643,
-	0xc642,
-	0xc641,
-	0x0f82,
-	0xfdef,
-	0xc640,
-	0xca08,
-	0x702c,
-	0x714c,
-	0xc043,
-	0xc006,
-	0xdb08,
-	0xc641,
-	0x780f,
-	0xc042,
+	0x79dd,
 	0xd8ff,
-	0x0f6a,
-	0xfdef,
-	0xc640,
-	0xc009,
-	0x702c,
 	0x754c,
-	0x2054,
-	0x0c80,
-	0x7b0f,
-	0xd8ff,
-	0xc643,
-	0xc642,
-	0xc641,
-	0x0f4e,
-	0xfdef,
-	0xc640,
-	0xf81e,
+	0x746c,
 	0x1c0c,
 	0x3081,
-	0xc642,
-	0xc641,
-	0x0f3e,
-	0xfdef,
-	0xc640,
-	0xd8ff,
-	0x702c,
-	0x754c,
-	0xdb50,
-	0xc643,
-	0xc642,
-	0xc641,
-	0x0f2a,
-	0xfdef,
-	0xc640,
-	0x0956,
-	0xfe2f,
-	0xd8ff,
-	0xc643,
-	0xc642,
-	0xc641,
-	0xc640,
-	0xd8ff,
-	0xd980,
-	0x754c,
-	0x0f12,
+	0xc542,
+	0xc541,
+	0x0e7e,
 	0xfdef,
-	0x746c,
-	0xc0ad,
-	0x1404,
-	0x341b,
-	0xc6c6,
-	0x46cb,
-	0x0000,
-	0xaaaa,
-	0xf214,
-	0x0b17,
-	0x3190,
-	0x0b1b,
-	0x3150,
-	0x0b1d,
-	0x3131,
-	0x70cd,
-	0x46cb,
-	0x0000,
-	0xcccc,
-	0xf008,
-	0x46cb,
-	0x0000,
-	0x8282,
-	0xf004,
-	0x46cb,
-	0x0000,
-	0xb2b2,
-	0x020f,
-	0xffcf,
-	0x702c,
-	0xd8ff,
-	0xb98f,
-	0x754c,
-	0x746c,
-	0x7ee0,
-	0xd8ff,
-	0x702c,
-	0x754c,
-	0x726c,
-	0x7ee0,
-	0x78e0,
-	0x702c,
-	0xd8ff,
-	0x754c,
-	0x4528,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
-	0x41c1,
-	0x714c,
-	0xdb08,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
-	0x41c1,
-	0x724c,
-	0x746c,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
-	0x41c1,
-	0x724c,
-	0xdb08,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
-	0x702c,
-	0x704c,
-	0x746c,
-	0x7ee0,
-	0x78e0,
+	0xc540,
+	0xc543,
+	0xc542,
+	0xc541,
+	0xc540,
 	0xd8ff,
 	0x702c,
 	0x754c,
+	0x023b,
+	0x0020,
 	0xdb30,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
-	0x4163,
-	0x734c,
-	0x746c,
-	0x7ee0,
-	0x78e0,
-	0xd8ff,
 	0x41c1,
-	0x714c,
+	0x724c,
 	0x746c,
-	0x7ee0,
-	0x78e0,
-	0xc2e6,
-	0x1cfc,
-	0xb6c8,
-	0xc1a6,
-	0x4608,
-	0x1600,
-	0x7100,
-	0x9008,
-	0x01e0,
-	0x218a,
-	0x0ffd,
-	0xc045,
-	0x7824,
-	0xc042,
-	0x1600,
-	0x7100,
-	0x900e,
-	0x004c,
-	0xc040,
-	0x8e19,
-	0xc044,
-	0x8e10,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0e56,
+	0xfdef,
+	0xc540,
+	0xf912,
+	0xc543,
+	0xc742,
+	0x1c04,
+	0x36c0,
+	0x0e46,
+	0xfdef,
+	0xc540,
+	0xf90b,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0e36,
+	0xfdef,
+	0xc540,
+	0xf904,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0e2a,
+	0xfdef,
+	0xc540,
+	0x750c,
+	0xc041,
+	0xf905,
+	0xc543,
+	0xc742,
+	0x0e1a,
+	0xfdef,
+	0xc540,
+	0xf8ff,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0e0a,
+	0xfdef,
+	0xc540,
+	0x750c,
 	0xc043,
-	0x40c3,
-	0x900e,
-	0x004c,
-	0x9001,
-	0xc041,
-	0xc004,
-	0xe88a,
-	0x40c3,
-	0x0000,
-	0xffff,
-	0x4100,
-	0x4200,
-	0x0cfe,
-	0xfeaf,
-	0x4300,
-	0xd80f,
-	0x0956,
-	0xfe2f,
-	0xd90f,
-	0x8608,
-	0x70ad,
-	0x781b,
-	0x2005,
-	0x0f80,
-	0x9003,
-	0xe064,
-	0x0ce6,
-	0xffaf,
-	0xb0a0,
-	0x8629,
-	0x0aba,
-	0x00a0,
-	0x710c,
-	0xc002,
-	0x712c,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0x40c3,
-	0x9003,
-	0xe064,
-	0x2042,
-	0x098f,
-	0xb7a0,
-	0xb7a0,
-	0x1f9c,
-	0x135c,
-	0x1f9b,
-	0x135c,
-	0x1fe6,
-	0x9f84,
-	0x0000,
-	0xffff,
-	0x1ff2,
-	0x9044,
-	0x1fe4,
-	0x9044,
-	0x0d7a,
+	0xf8fa,
+	0xc742,
+	0xc541,
+	0x0dfa,
 	0xfdef,
-	0x960e,
-	0xc100,
-	0xc201,
-	0x0caa,
-	0x0060,
-	0x40c1,
-	0xd80f,
-	0x08ee,
-	0xfe2f,
-	0xd90f,
-	0x8629,
-	0x0a66,
-	0x00a0,
-	0x710c,
-	0xc005,
-	0x712c,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xb7a0,
-	0x1fe6,
-	0x9f84,
-	0x0000,
-	0xff00,
-	0x1ff2,
-	0x9044,
-	0x1fe4,
-	0x9044,
-	0x0d3a,
+	0xc540,
+	0xf8f4,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0dea,
 	0xfdef,
-	0x960a,
-	0x8e58,
-	0x8601,
-	0x0bde,
-	0x0060,
-	0x712c,
-	0xc100,
-	0xc201,
-	0x0c62,
-	0x0060,
-	0x40c1,
-	0xd80f,
-	0x08a6,
-	0xfe2f,
-	0xd90f,
+	0xc540,
 	0xc004,
-	0xe807,
-	0xc003,
-	0x0fba,
+	0x702c,
+	0x764c,
+	0xc042,
+	0xd8ff,
+	0x746c,
+	0xc543,
+	0x1c04,
+	0x36c0,
+	0x0dd2,
 	0xfdef,
-	0x2078,
-	0x0100,
-	0xf011,
-	0xc003,
-	0x41c3,
-	0x0000,
-	0xffff,
-	0x4220,
-	0x7414,
-	0x40c3,
-	0x0000,
-	0xfffe,
-	0x22ca,
-	0x0001,
-	0x20ca,
-	0x0041,
-	0x0c16,
-	0xfeaf,
-	0x4320,
-	0x1600,
-	0x7100,
-	0x900e,
-	0x004c,
-	0xc040,
-	0x40c3,
-	0x900e,
-	0x004c,
-	0x9001,
-	0xc041,
-	0xc002,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xc003,
-	0x8629,
-	0x2078,
-	0x0100,
-	0x781b,
-	0x781b,
-	0x7504,
-	0x09c6,
-	0x00a0,
+	0xc540,
+	0xf8ee,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0dc2,
+	0xfdef,
+	0xc540,
+	0xf8e7,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0db6,
+	0xfdef,
+	0xc540,
+	0xc004,
+	0x702c,
+	0x764c,
 	0xc042,
-	0x8608,
-	0x706f,
-	0x781b,
-	0x2005,
-	0x0f80,
-	0x9003,
-	0xe064,
-	0x0bd6,
-	0xffaf,
-	0x1800,
-	0x06c4,
-	0x712c,
-	0x1f00,
-	0x16c4,
-	0x1f9c,
-	0x16dc,
-	0x1f9b,
-	0x16dc,
-	0x1fe6,
-	0x9f84,
-	0x0000,
-	0xffff,
-	0x1ff2,
-	0x9044,
-	0x1fe4,
-	0x9044,
-	0x960e,
-	0x0c82,
+	0x750c,
+	0xc041,
+	0xd8ff,
+	0x746c,
+	0xc543,
+	0x0d9e,
 	0xfdef,
-	0x4528,
-	0xc100,
-	0xc201,
-	0x0bb2,
-	0x0060,
-	0x40c1,
-	0xc005,
-	0xd90f,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xd80f,
-	0x0fea,
+	0xc540,
+	0x1c0c,
+	0x36c0,
+	0xf8df,
+	0xc742,
+	0xc541,
+	0x0d8e,
+	0xfdef,
+	0xc540,
+	0xc009,
+	0x70ad,
+	0x702c,
+	0x780f,
+	0xc045,
+	0xc305,
+	0xd8ff,
+	0x754c,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0d72,
 	0xfdef,
-	0x1f00,
-	0x16c4,
-	0x8629,
-	0x0962,
-	0x00a0,
-	0xc002,
-	0x1fe6,
-	0x9f84,
+	0xc540,
+	0xc008,
+	0x46cb,
 	0x0000,
-	0xff00,
-	0x1ff2,
-	0x9344,
-	0x1fe4,
-	0x9344,
-	0x8605,
-	0x712c,
-	0x7104,
-	0x0c3e,
+	0x2100,
+	0x7014,
+	0xf26d,
+	0x714c,
+	0xd8ff,
+	0x41c1,
+	0x746c,
+	0x4358,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0d4e,
 	0xfdef,
-	0x7810,
-	0xc100,
-	0xc201,
-	0x0b6e,
-	0x0060,
-	0x40c1,
-	0xc004,
-	0xe806,
-	0xc003,
-	0x0ece,
+	0xc540,
+	0xf8d0,
+	0xc543,
+	0xc742,
+	0x1c04,
+	0x36c0,
+	0x0d3e,
 	0xfdef,
-	0x2079,
-	0x0100,
-	0x8e58,
-	0x8603,
-	0x0ac6,
-	0x0060,
-	0x712c,
-	0xc0a6,
-	0x1404,
-	0x341b,
-	0xc6c6,
-	0x78e0,
-	0xc2e6,
-	0x1cfc,
-	0xb6c8,
-	0xc1a8,
-	0x4608,
-	0x1600,
-	0x7100,
-	0x9008,
-	0x01e0,
-	0x218a,
-	0x0ffd,
-	0xc047,
-	0x7824,
-	0xc045,
-	0x1600,
-	0x7100,
-	0x900e,
-	0x004c,
-	0xc040,
-	0x8e19,
+	0xc540,
+	0xf8c3,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0d2e,
+	0xfdef,
+	0xc540,
+	0xf8ce,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0d22,
+	0xfdef,
+	0xc540,
+	0x750c,
+	0xc041,
+	0xf8c3,
+	0xc543,
+	0xc742,
+	0x0d12,
+	0xfdef,
+	0xc540,
+	0xf8b7,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0d02,
+	0xfdef,
+	0xc540,
+	0x750c,
 	0xc043,
-	0x8e10,
+	0xf8b2,
+	0xc742,
+	0xc541,
+	0x0cf2,
+	0xfdef,
+	0xc540,
+	0xf8be,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0ce2,
+	0xfdef,
+	0xc540,
+	0xc004,
+	0x702c,
+	0x764c,
 	0xc042,
-	0x40c3,
-	0x900e,
-	0x004c,
-	0x9001,
+	0xd8ff,
+	0x746c,
+	0xc543,
+	0x1c04,
+	0x36c0,
+	0x0cca,
+	0xfdef,
+	0xc540,
+	0xf8a6,
+	0x1c0c,
+	0x36c0,
+	0xc742,
+	0xc541,
+	0x0cba,
+	0xfdef,
+	0xc540,
+	0xf8b1,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0cae,
+	0xfdef,
+	0xc540,
+	0xc004,
+	0x702c,
+	0x764c,
+	0xc042,
+	0x750c,
 	0xc041,
-	0xc003,
-	0xe88a,
-	0x40c3,
-	0x0000,
-	0xffff,
-	0x4100,
-	0x4200,
-	0x0aee,
-	0xfeaf,
-	0x4300,
-	0xd80f,
-	0x0f46,
+	0xd8ff,
+	0x746c,
+	0xc543,
+	0x0c96,
 	0xfdef,
-	0xd90f,
-	0xc102,
-	0x8608,
-	0x2179,
-	0x0101,
-	0x0b52,
-	0xfeaf,
-	0xc144,
-	0xc005,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0x8629,
-	0x08a6,
-	0x00a0,
-	0x730c,
-	0x70ad,
-	0x47cb,
-	0x9003,
-	0xe03e,
-	0xb7a0,
-	0x1f9b,
-	0x135c,
-	0x1f9c,
-	0x135c,
-	0x1fe6,
-	0x9f84,
-	0x0000,
-	0xffff,
-	0x1ff2,
-	0x9045,
-	0x1fe4,
-	0x9045,
-	0x960e,
-	0x0b72,
+	0xc540,
+	0x1c0c,
+	0x36c0,
+	0xf003,
+	0x1c0c,
+	0x3441,
+	0xf896,
+	0xc742,
+	0xc541,
+	0x0c7e,
 	0xfdef,
-	0x712c,
-	0xc100,
-	0xc201,
-	0x0aa6,
-	0x0060,
-	0x40c1,
-	0xd80f,
-	0x0eea,
+	0xc540,
+	0xc305,
+	0xf88f,
+	0xc143,
+	0xc142,
+	0xc141,
+	0x0c6e,
 	0xfdef,
-	0xd90f,
-	0xc007,
-	0x712c,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xb7a0,
-	0x0b4e,
+	0xc140,
+	0xf886,
+	0x1c0c,
+	0x30c1,
+	0xc542,
+	0xc541,
+	0x0c5e,
+	0xfdef,
+	0xc540,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xdb30,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0c4a,
 	0xfdef,
-	0x960a,
-	0x8e58,
-	0x8602,
-	0x09ee,
-	0x0060,
-	0x712c,
-	0xc100,
-	0xc201,
-	0x0a76,
-	0x0060,
-	0x40c1,
-	0xd80f,
-	0x0eba,
+	0xc540,
+	0xc004,
+	0x702c,
+	0x764c,
+	0xc042,
+	0xd8ff,
+	0xdb2e,
+	0xc543,
+	0xc541,
+	0x1c00,
+	0x3041,
+	0x0c32,
+	0xfdcf,
+	0x0e5e,
 	0xfdef,
-	0xd90f,
-	0xc003,
-	0xe806,
-	0x0dce,
+	0xd8ff,
+	0xc543,
+	0xc542,
+	0xc541,
+	0xc540,
+	0xd8ff,
+	0xd980,
+	0x754c,
+	0x0c1a,
 	0xfdef,
+	0x746c,
+	0xc0ad,
+	0x1404,
+	0x341b,
+	0xc6c6,
+	0x0bf9,
+	0xb071,
+	0x70cd,
+	0xc00b,
+	0x791d,
+	0xc00c,
+	0x6119,
+	0x4918,
+	0xb8c0,
+	0x6119,
+	0x4918,
+	0xc04a,
+	0x700c,
+	0xf063,
 	0xc004,
-	0xf012,
-	0xc002,
-	0x41c3,
+	0x45cb,
 	0x0000,
 	0xffff,
-	0x42c3,
-	0x0000,
-	0xfffe,
-	0x7414,
-	0x4020,
-	0x20ca,
-	0x0081,
-	0x22ca,
-	0x0041,
-	0x0a2e,
+	0x7014,
+	0x7dc0,
+	0xd80f,
+	0x41a1,
+	0x42a1,
+	0x0d52,
 	0xfeaf,
-	0x4320,
-	0x1600,
-	0x7100,
-	0x900e,
-	0x004c,
-	0xc046,
-	0x40c3,
-	0x900e,
-	0x004c,
-	0x9001,
-	0xc040,
+	0xc340,
 	0xc005,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xc004,
-	0x8629,
-	0x781b,
-	0x781b,
-	0xe007,
-	0x0fde,
-	0x0060,
-	0xc041,
-	0x8608,
-	0x0a72,
+	0x41a1,
+	0x42a1,
+	0x7b10,
+	0xd808,
+	0x0d42,
 	0xfeaf,
-	0xc104,
-	0x706f,
+	0xc340,
+	0x700c,
+	0x0aee,
+	0xfdef,
+	0x4163,
+	0x1200,
+	0x3083,
+	0xf860,
+	0xc143,
+	0xc142,
+	0xc141,
+	0x0bb2,
+	0xfdef,
+	0xc140,
+	0xf85a,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0ba6,
+	0xfdef,
+	0xc540,
+	0xc006,
+	0x736f,
+	0x702c,
+	0x780f,
+	0xc048,
+	0xc042,
+	0xd8ff,
+	0x724c,
+	0xdb08,
+	0x1c0c,
+	0x36c0,
+	0xc541,
+	0x0b86,
+	0xfdef,
+	0x1c00,
+	0x3281,
+	0xc008,
+	0x702c,
+	0x724c,
+	0xc042,
+	0xd8ff,
+	0xdb08,
+	0x1c0c,
+	0x36c0,
+	0xc541,
+	0x0b6e,
+	0xfdef,
+	0xc540,
+	0xd8ff,
+	0x702c,
+	0x724c,
+	0xdb08,
+	0x1c0c,
+	0x36c0,
+	0xc542,
+	0xc541,
+	0x0b56,
+	0xfdef,
+	0x1c00,
+	0x3281,
+	0xc00a,
+	0xd980,
+	0x754c,
+	0x7b0f,
+	0xd8ff,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0b3e,
+	0xfdef,
+	0xc540,
+	0x700c,
+	0x0af6,
+	0xfdef,
 	0x712c,
-	0x1f00,
-	0x16c4,
-	0x1f9b,
-	0x16dc,
-	0x1f9c,
-	0x16dc,
-	0x1fe6,
-	0x9f84,
-	0x0000,
-	0xffff,
-	0x1ff2,
-	0x9044,
-	0x1fe4,
-	0x9044,
-	0x960e,
-	0x0aa6,
+	0xc004,
+	0x7104,
+	0xc044,
+	0xc007,
+	0x232f,
+	0x3007,
+	0xc004,
+	0x0835,
+	0x80b4,
+	0x7bf0,
+	0x700c,
+	0x0a42,
+	0xfdef,
+	0x4163,
+	0x1200,
+	0x3083,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xc643,
+	0xc642,
+	0xc641,
+	0x0b06,
+	0xfdef,
+	0xc640,
+	0x0d4a,
+	0xfdef,
+	0xd8ff,
+	0xf82d,
+	0xc643,
+	0xc642,
+	0xc641,
+	0x0af2,
+	0xfdef,
+	0xc640,
+	0xca08,
+	0x702c,
+	0x714c,
+	0xc043,
+	0xc006,
+	0xdb08,
+	0xc641,
+	0x780f,
+	0xc042,
+	0xd8ff,
+	0x0ad6,
+	0xfdef,
+	0xc640,
+	0xc009,
+	0x702c,
+	0x754c,
+	0x2054,
+	0x0c80,
+	0x7b0f,
+	0xd8ff,
+	0xc643,
+	0xc642,
+	0xc641,
+	0x0abe,
 	0xfdef,
-	0x4528,
-	0xc106,
-	0xc200,
-	0x09da,
-	0x0060,
-	0x40c1,
-	0xc007,
-	0xd90f,
-	0x1e00,
-	0x7004,
-	0x9009,
-	0xe1e0,
-	0xd80f,
-	0x0e12,
+	0xc640,
+	0xf819,
+	0x1c0c,
+	0x3081,
+	0xc642,
+	0xc641,
+	0x0aae,
 	0xfdef,
-	0x1f00,
-	0x16c4,
-	0x8629,
-	0x0f86,
-	0x0060,
-	0xc001,
-	0x40c3,
-	0x0000,
-	0xff00,
-	0x1fe6,
-	0x9004,
-	0x1ff2,
-	0x9344,
-	0x1fe4,
-	0x9344,
-	0x8605,
-	0x712c,
-	0x7104,
-	0x0a62,
+	0xc640,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xdb50,
+	0xc643,
+	0xc642,
+	0xc641,
+	0x0a9a,
 	0xfdef,
-	0x7810,
-	0xc106,
-	0xc200,
-	0x0992,
-	0x0060,
-	0x40c1,
-	0xc003,
-	0xe806,
-	0xc002,
-	0x0cf2,
+	0xc640,
+	0x0cc2,
 	0xfdef,
-	0x2078,
-	0x0100,
-	0x8e58,
-	0x8603,
-	0x08ea,
-	0x0060,
-	0x712c,
-	0xc0a8,
-	0x1404,
-	0x341b,
-	0xc6c6,
+	0xd8ff,
+	0xc643,
+	0xc642,
+	0xc641,
+	0xc640,
+	0xf134,
+	0x46cb,
+	0x0000,
+	0xaaaa,
+	0xf214,
+	0x0b17,
+	0x3190,
+	0x0b1b,
+	0x3150,
+	0x0b1d,
+	0x3131,
+	0x70cd,
+	0x46cb,
+	0x0000,
+	0xcccc,
+	0xf008,
+	0x46cb,
+	0x0000,
+	0x8282,
+	0xf004,
+	0x46cb,
+	0x0000,
+	0xb2b2,
+	0x0205,
+	0xffcf,
+	0x702c,
+	0xd8ff,
+	0xb98f,
+	0x754c,
+	0x746c,
+	0x7ee0,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0x726c,
+	0x7ee0,
+	0x78e0,
+	0x702c,
+	0xd8ff,
+	0x754c,
+	0x4528,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x41c1,
+	0x714c,
+	0xdb08,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x41c1,
+	0x724c,
+	0x746c,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x41c1,
+	0x724c,
+	0xdb08,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x702c,
+	0x704c,
+	0x746c,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x4163,
+	0x734c,
+	0x746c,
+	0x7ee0,
+	0x78e0,
+	0xd8ff,
+	0x41c1,
+	0x714c,
+	0x746c,
+	0x7ee0,
 	0x78e0,
 	0xc2e6,
 	0x1cfc,
 	0xb6c8,
-	0x2482,
-	0x3503,
-	0xc140,
-	0x0df6,
-	0xfdef,
-	0x712c,
+	0xc1a6,
+	0x4608,
 	0x1600,
-	0x7083,
-	0x8000,
-	0x0004,
-	0xc043,
-	0xc088,
-	0xd9ff,
-	0x0b52,
-	0xff6f,
-	0xdab4,
-	0x40c3,
-	0x0000,
-	0x2100,
-	0x1e00,
-	0x7004,
-	0x9003,
-	0xe004,
-	0x700c,
-	0x1e00,
-	0x7004,
-	0x9003,
-	0xfec4,
-	0xc000,
-	0x71ad,
-	0x2079,
-	0x0000,
-	0x4898,
-	0x205f,
-	0x0200,
-	0xc145,
+	0x7100,
+	0x9008,
+	0x01e0,
+	0x218a,
+	0x0ffd,
+	0xc045,
+	0x7824,
 	0xc042,
-	0xc102,
-	0xf011,
-	0x6941,
-	0x219a,
-	0x0008,
-	0x44a9,
-	0xe805,
-	0xb861,
-	0x08ff,
-	0x8031,
-	0x7c9b,
-	0x2105,
-	0x0f80,
-	0x9003,
-	0xe0c4,
-	0xb080,
-	0x4140,
-	0xc005,
-	0x09e1,
-	0x8024,
-	0x2144,
-	0x07c0,
-	0x231a,
-	0x0f83,
-	0x0010,
-	0x0000,
 	0x1600,
-	0x709b,
-	0x8000,
-	0x07cd,
-	0xc346,
-	0xe598,
-	0x01d8,
-	0x000d,
+	0x7100,
+	0x900e,
+	0x004c,
+	0xc040,
+	0x8e19,
+	0xc044,
+	0x8e10,
+	0xc043,
+	0x40c3,
+	0x900e,
+	0x004c,
+	0x9001,
+	0xc041,
+	0xc004,
+	0xe88a,
 	0x40c3,
-	0x8000,
-	0x07cd,
-	0x8821,
-	0xf015,
-	0xc003,
-	0x2055,
-	0x08c2,
-	0xc006,
-	0x7a05,
-	0xd8ef,
-	0x2004,
-	0x06c0,
-	0x201a,
-	0x0f80,
 	0x0000,
-	0x1000,
-	0x7167,
-	0x7845,
+	0xffff,
+	0x4100,
+	0x4200,
+	0x0b5a,
+	0xfeaf,
+	0x4300,
+	0xd80f,
+	0x0fb2,
+	0xfdef,
+	0xd90f,
+	0x8608,
+	0x70ad,
 	0x781b,
 	0x2005,
 	0x0f80,
-	0x9002,
-	0x1e00,
-	0xb0a0,
-	0x202f,
-	0x06c7,
-	0x09d7,
-	0x8005,
-	0x40c3,
-	0x0000,
-	0x2100,
-	0x1e00,
-	0x7004,
-	0x9003,
-	0xe004,
-	0xc000,
-	0x41c3,
-	0x9003,
-	0xfe64,
-	0x7014,
-	0x40c3,
 	0x9003,
-	0xf064,
-	0x711c,
-	0x086e,
+	0xe064,
+	0x0b26,
 	0xffaf,
-	0x1900,
-	0x0005,
-	0x0866,
-	0xff8f,
-	0xd80f,
-	0x0cba,
-	0xfdef,
-	0xd90f,
-	0x730c,
-	0x0e32,
+	0xb0a0,
+	0x8629,
+	0x0e1e,
 	0x0060,
-	0x218a,
-	0x0fc7,
-	0xdf7f,
-	0x46cb,
-	0x9003,
-	0xe024,
 	0x710c,
-	0xb6e0,
-	0xc044,
-	0xb606,
-	0x208a,
-	0x03c4,
-	0x1efe,
-	0x9004,
-	0xd818,
-	0x090a,
-	0xfdef,
+	0xc002,
 	0x712c,
-	0x208a,
-	0x0004,
 	0x1e00,
 	0x7004,
+	0x9009,
+	0xe1e0,
+	0x40c3,
 	0x9003,
-	0xe004,
-	0xd80f,
-	0x0c7e,
-	0xfdef,
-	0xd90f,
-	0xd807,
-	0x08ee,
-	0xfdef,
-	0x712c,
-	0x710c,
-	0xb6e0,
-	0xb606,
-	0xd80f,
-	0xd90f,
-	0x0c66,
-	0xfdef,
-	0x1efe,
-	0x93c5,
-	0x730c,
-	0x08d2,
+	0xe064,
+	0x2042,
+	0x098f,
+	0xb7a0,
+	0xb7a0,
+	0x1f9c,
+	0x135c,
+	0x1f9b,
+	0x135c,
+	0x1fe6,
+	0x9f84,
+	0x0000,
+	0xffff,
+	0x1ff2,
+	0x9044,
+	0x1fe4,
+	0x9044,
+	0x0906,
 	0xfdef,
-	0x712c,
+	0x960e,
+	0xc100,
+	0xc201,
+	0x080e,
+	0x0060,
+	0x40c1,
 	0xd80f,
-	0x0c52,
+	0x0f4a,
 	0xfdef,
 	0xd90f,
-	0x700c,
+	0x8629,
+	0x0dca,
+	0x0060,
+	0x710c,
+	0xc005,
 	0x712c,
 	0x1e00,
-	0x1fc5,
-	0x1e0c,
-	0x1fc5,
-	0x08ba,
-	0xfdef,
-	0x1efe,
-	0x9005,
-	0x40c3,
-	0x8000,
-	0x07cd,
-	0x1600,
-	0x7081,
-	0x8000,
-	0x07cd,
-	0x8801,
-	0x260a,
-	0x3f80,
-	0x9002,
-	0x0064,
-	0x4338,
-	0xc047,
-	0xf05f,
-	0x221a,
-	0x0f9f,
-	0x0000,
-	0x1000,
-	0xc602,
-	0xc400,
-	0xf053,
-	0x225f,
-	0x0480,
-	0x74d5,
-	0x24c0,
-	0x1061,
-	0x23ca,
-	0x1061,
-	0xc041,
-	0xc301,
-	0xc088,
-	0x631b,
-	0x7bd4,
-	0x9300,
-	0xe0c0,
-	0x0088,
-	0x0025,
-	0x40c1,
-	0x209a,
-	0x0004,
-	0x2005,
-	0x07c0,
-	0x7f1b,
-	0x2705,
-	0x178f,
-	0x9700,
-	0x7014,
-	0xc004,
-	0x23ca,
-	0x1021,
-	0x20ca,
-	0x0021,
-	0x0b53,
-	0x1030,
-	0xc044,
-	0x78cf,
-	0x080d,
-	0x00d0,
-	0x084b,
-	0x0210,
-	0x0855,
-	0x01d1,
-	0x788f,
-	0x2079,
-	0x0000,
-	0x205f,
-	0x0100,
-	0xf010,
-	0xc301,
-	0x677f,
-	0x7f14,
-	0x6861,
-	0x209a,
-	0x0004,
-	0x2005,
-	0x07c0,
-	0x781b,
-	0x2005,
-	0x0780,
-	0x9000,
-	0xb700,
-	0x4060,
-	0x0ee5,
-	0x9025,
-	0xc788,
-	0x0e25,
-	0x11d1,
-	0x40c3,
-	0x8000,
-	0x07cd,
-	0x7854,
-	0xa8af,
-	0xf00a,
-	0x706d,
-	0xf008,
-	0x9700,
-	0xb300,
-	0x40c3,
-	0x8000,
-	0x07cd,
-	0x7854,
-	0xa8b0,
-	0x71c5,
-	0xc005,
-	0x0e5b,
-	0x9004,
-	0x7124,
-	0xc007,
-	0x7a2f,
-	0x0845,
-	0x80a5,
-	0x716d,
-	0xc004,
-	0x71a5,
-	0x7014,
-	0xf315,
-	0x1600,
-	0x7080,
-	0x8000,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xb7a0,
+	0x1fe6,
+	0x9f84,
 	0x0000,
-	0xb8c3,
-	0xc041,
-	0xf02f,
-	0xc502,
-	0xf028,
-	0x275f,
-	0x1480,
+	0xff00,
+	0x1ff2,
+	0x9044,
+	0x1fe4,
+	0x9044,
+	0x08c6,
+	0xfdef,
+	0x960a,
+	0x8e58,
+	0x8601,
+	0x0f42,
+	0x0020,
+	0x712c,
+	0xc100,
+	0xc201,
+	0x0fc6,
+	0x0020,
+	0x40c1,
+	0xd80f,
+	0x0f02,
+	0xfdef,
+	0xd90f,
+	0xc004,
+	0xe807,
+	0xc003,
+	0x0b46,
+	0xfdef,
+	0x2078,
+	0x0100,
+	0xf011,
+	0xc003,
 	0x41c3,
-	0x0047,
-	0x0002,
-	0x42e1,
-	0x661e,
-	0x26f4,
-	0x1340,
-	0x43a1,
-	0x0e5e,
-	0xfd6f,
-	0x20bc,
+	0x0000,
+	0xffff,
+	0x4220,
+	0x7414,
+	0x40c3,
+	0x0000,
+	0xfffe,
+	0x22ca,
 	0x0001,
+	0x20ca,
+	0x0041,
+	0x0a72,
+	0xfeaf,
+	0x4320,
+	0x1600,
+	0x7100,
+	0x900e,
+	0x004c,
+	0xc040,
+	0x40c3,
+	0x900e,
+	0x004c,
+	0x9001,
+	0xc041,
+	0xc002,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
 	0xc003,
-	0x271a,
-	0x1f81,
-	0x0000,
-	0x1000,
-	0x26f4,
-	0x1342,
-	0x2054,
-	0x0d00,
-	0x7905,
-	0x40a1,
-	0x209a,
-	0x0004,
-	0x71a5,
-	0x7825,
+	0x8629,
+	0x2078,
+	0x0100,
+	0x781b,
+	0x781b,
+	0x7504,
+	0x0d2a,
+	0x0060,
+	0xc042,
+	0x8608,
+	0x706f,
 	0x781b,
 	0x2005,
-	0x0f81,
-	0x9002,
+	0x0f80,
+	0x9003,
+	0xe064,
+	0x0a16,
+	0xffaf,
+	0x1800,
+	0x06c4,
+	0x712c,
+	0x1f00,
+	0x16c4,
+	0x1f9c,
+	0x16dc,
+	0x1f9b,
+	0x16dc,
+	0x1fe6,
+	0x9f84,
 	0x0000,
-	0xc001,
-	0x6058,
-	0x2049,
-	0x0fc0,
-	0xb100,
+	0xffff,
+	0x1ff2,
+	0x9044,
+	0x1fe4,
+	0x9044,
+	0x960e,
+	0x080e,
+	0xfdef,
+	0x4528,
+	0xc100,
+	0xc201,
+	0x0f16,
+	0x0020,
+	0x40c1,
 	0xc005,
-	0x0db3,
-	0x9024,
-	0xc688,
-	0x7167,
-	0x40c3,
-	0x8000,
-	0x07cd,
-	0x8801,
-	0x272f,
-	0x16c7,
-	0x089b,
-	0x83c5,
-	0xc000,
-	0x0889,
-	0x0010,
-	0x09da,
-	0xfe4f,
-	0x4308,
-	0x40c3,
-	0x8000,
-	0x07cd,
-	0x8881,
-	0x1600,
-	0x7080,
-	0x8000,
-	0x07cd,
-	0xf034,
-	0x41c3,
-	0x8000,
-	0x07cd,
-	0x79b4,
-	0x896f,
-	0x8950,
-	0x4a76,
-	0x4b51,
-	0x7270,
-	0x21ca,
-	0x038d,
-	0x7e2f,
-	0x261a,
-	0x12ce,
-	0xd908,
-	0x27ca,
-	0x122d,
-	0x21ca,
-	0x012d,
-	0x2e44,
-	0x180e,
-	0xf019,
-	0xc203,
-	0x219a,
-	0x0004,
-	0x2254,
-	0x0d03,
-	0x251a,
-	0x1f82,
+	0xd90f,
+	0x1e00,
+	0x7004,
+	0x9009,
+	0xe1e0,
+	0xd80f,
+	0x0e46,
+	0xfdef,
+	0x1f00,
+	0x16c4,
+	0x8629,
+	0x0cc6,
+	0x0060,
+	0xc002,
+	0x1fe6,
+	0x9f84,
 	0x0000,
-	0x1000,
-	0x7a65,
-	0x7945,
-	0x793b,
-	0xb991,
-	0xb99c,
-	0xb99f,
-	0x9160,
-	0x7ad0,
-	0x627a,
-	0x2249,
-	0x0fc2,
-	0xb140,
-	0x210a,
-	0x0780,
-	0x09d5,
-	0x83e4,
-	0x2140,
-	0x005e,
+	0xff00,
+	0x1ff2,
+	0x9344,
+	0x1fe4,
+	0x9344,
+	0x8605,
+	0x712c,
 	0x7104,
-	0x7d0f,
-	0x0c9d,
-	0x9365,
-	0xdf09,
-	0x2480,
-	0x3503,
+	0x0fca,
+	0xfdaf,
+	0x7810,
+	0xc100,
+	0xc201,
+	0x0ed2,
+	0x0020,
+	0x40c1,
+	0xc004,
+	0xe806,
+	0xc003,
+	0x0a5a,
+	0xfdef,
+	0x2079,
+	0x0100,
+	0x8e58,
+	0x8603,
+	0x0e2a,
+	0x0020,
+	0x712c,
+	0xc0a6,
 	0x1404,
 	0x341b,
 	0xc6c6,
@@ -10772,8 +10660,8 @@ u16 imem_1d[] = {
 	0x1cfc,
 	0xb6c8,
 	0x2482,
-	0x3d0a,
-	0xc040,
+	0x3c03,
+	0xc042,
 	0x1600,
 	0x7080,
 	0x8000,
@@ -10799,34 +10687,31 @@ u16 imem_1d[] = {
 	0x781d,
 	0x781d,
 	0x781d,
-	0x0d36,
+	0x0e16,
 	0xfd6f,
 	0x2052,
 	0x0000,
-	0x08ae,
+	0x0c52,
 	0xfeaf,
 	0x700c,
+	0x700c,
 	0x42c3,
 	0x9003,
 	0xff68,
 	0x1e00,
-	0x7005,
+	0x7004,
 	0x9003,
 	0xe004,
-	0x1a00,
-	0x0005,
-	0xc000,
+	0xb200,
+	0xc002,
 	0x712c,
-	0x47cb,
-	0x8000,
-	0x07ca,
 	0x2044,
 	0x07cd,
 	0x4020,
-	0xed06,
+	0xed05,
 	0xbd61,
-	0x0d01,
-	0x1031,
+	0x0dff,
+	0x9031,
 	0x781b,
 	0x205a,
 	0x0103,
@@ -10834,458 +10719,553 @@ u16 imem_1d[] = {
 	0x7100,
 	0x9008,
 	0x01ea,
-	0xc044,
+	0xc043,
 	0x12c3,
 	0x0700,
-	0xc043,
+	0xc04a,
 	0xca0a,
 	0x208c,
 	0x8fc3,
-	0xf40c,
+	0xf40e,
 	0x1600,
 	0x7080,
 	0x8000,
 	0x0000,
 	0xb8e5,
 	0xd8ff,
-	0xf204,
-	0x8f00,
+	0xf208,
+	0x1600,
+	0x7080,
+	0x8000,
+	0x07ca,
 	0x1a0a,
 	0x3002,
-	0xc100,
+	0xc102,
 	0x230f,
 	0x0041,
-	0xc149,
+	0xc14b,
 	0x2379,
 	0x3001,
 	0x7224,
-	0xc14a,
-	0x8f20,
-	0x033b,
+	0xc14c,
+	0x1600,
+	0x7081,
+	0x8000,
+	0x07ca,
+	0x03e5,
 	0x0020,
 	0x2139,
 	0x0000,
-	0xc004,
-	0x714c,
-	0x2004,
+	0xc103,
+	0xc003,
+	0x2104,
 	0x0f81,
 	0x0000,
-	0xc0ff,
+	0x3f00,
 	0x2004,
 	0x0f80,
 	0x0000,
-	0x3f00,
-	0x2080,
+	0xc0ff,
+	0x2180,
 	0x0010,
 	0x7825,
 	0x1e00,
 	0x7004,
 	0x9008,
 	0x01ea,
+	0x700c,
 	0x1e00,
-	0x7384,
+	0x7004,
 	0x900f,
 	0xe022,
-	0xc003,
+	0xc00a,
 	0x762c,
 	0xb8a5,
 	0x1e00,
 	0x7004,
 	0x9005,
 	0xe0ee,
-	0xc009,
-	0x0f7e,
-	0xff6f,
+	0xc00b,
+	0x0ca6,
+	0xffaf,
 	0x780f,
-	0xc000,
+	0xc002,
+	0xc100,
+	0x7034,
+	0x0376,
+	0x0021,
 	0x780f,
-	0xed08,
-	0x0b82,
-	0xffef,
-	0x2578,
-	0x1081,
-	0x02c9,
-	0x0000,
-	0x0976,
+	0xc100,
+	0x2178,
+	0x0081,
+	0xc145,
+	0x0d1e,
 	0xfdef,
 	0x712c,
 	0x1600,
-	0x709b,
+	0x709e,
 	0x8000,
 	0x0004,
-	0x08ee,
-	0xfdef,
 	0xc047,
-	0xc046,
-	0x2400,
-	0x3f80,
-	0x0000,
-	0x0258,
-	0x702c,
-	0x0ec6,
-	0xff2f,
-	0xda5a,
-	0x2400,
-	0x3f80,
-	0x0000,
-	0x01a4,
-	0x0eba,
-	0xff2f,
+	0xc08f,
+	0xd9ff,
+	0x0a5e,
+	0xff6f,
 	0xdab4,
-	0x0dda,
-	0xfeef,
-	0x208a,
-	0x0b04,
-	0x0d72,
-	0xfeef,
-	0xc045,
+	0x40c3,
+	0x9003,
+	0xe004,
+	0x1800,
+	0x0f84,
+	0x0000,
+	0x2100,
+	0x700c,
 	0x1e00,
-	0x7384,
+	0x7004,
 	0x9003,
 	0xfec4,
-	0xc006,
-	0x2079,
-	0x0000,
+	0xc005,
+	0x71ad,
 	0xe008,
-	0xc042,
-	0xf012,
-	0x4200,
-	0x2644,
-	0x17c0,
-	0x6e21,
-	0x269a,
-	0x1008,
-	0xe806,
+	0xc049,
+	0xc005,
+	0x205f,
+	0x0200,
+	0xc046,
+	0xc106,
+	0xf011,
+	0x6941,
+	0x219a,
+	0x0008,
+	0x43a1,
+	0xe805,
 	0xb861,
-	0x0801,
-	0x0031,
-	0x7a5b,
-	0x2605,
-	0x1f80,
+	0x08ff,
+	0x8031,
+	0x7b7b,
+	0x2105,
+	0x0f80,
 	0x9003,
 	0xe0c4,
-	0xb040,
-	0x4628,
-	0xc002,
-	0x0edf,
-	0x9024,
-	0x710c,
-	0xd880,
-	0xb88e,
-	0x1e00,
-	0x7004,
-	0x9003,
-	0xe004,
-	0x231a,
-	0x3f80,
-	0x0020,
-	0x0000,
-	0x2005,
-	0x0f81,
-	0x9003,
-	0xfe86,
-	0x2005,
-	0x0f80,
-	0x9002,
-	0x0086,
-	0x9000,
-	0xb8a0,
-	0x0f8e,
-	0xfe2f,
-	0xb100,
-	0x208c,
-	0x8f03,
-	0xda3f,
-	0xf643,
-	0x2844,
-	0x0102,
-	0x231a,
-	0x3f80,
+	0xb060,
+	0x4140,
+	0xc009,
+	0x09e1,
+	0x8024,
+	0x2144,
+	0x07c0,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x261a,
+	0x3f9e,
 	0x0010,
 	0x0000,
-	0x8fc3,
-	0x8f24,
-	0x43c1,
-	0xc04b,
-	0xf012,
-	0x7864,
-	0x201a,
-	0x0f8c,
-	0x0000,
-	0x1000,
-	0xc007,
-	0x7164,
-	0x2054,
-	0x0d00,
-	0x7885,
-	0x781b,
-	0x2005,
-	0x0f80,
-	0x9002,
-	0x1e00,
-	0xb040,
-	0x786f,
-	0x09e1,
-	0x8025,
-	0xd8ef,
-	0x228a,
-	0x07c4,
+	0x1003,
+	0x009b,
+	0x1c34,
+	0x3780,
+	0xe598,
+	0x01dc,
+	0x000d,
 	0x40c3,
-	0x9003,
-	0xe024,
-	0xb040,
-	0x228a,
-	0x03c4,
-	0x706f,
-	0x180c,
-	0x0045,
-	0x18fe,
-	0x8084,
-	0xf09f,
+	0x8000,
+	0x07ca,
+	0x8824,
+	0xf015,
 	0xc007,
 	0x2055,
 	0x08c2,
-	0xc00b,
+	0xc00d,
 	0x7a05,
 	0xd8ef,
-	0x78c4,
+	0x2004,
+	0x06c0,
 	0x201a,
 	0x0f80,
 	0x0000,
 	0x1000,
-	0x71c5,
+	0x7167,
 	0x7845,
 	0x781b,
 	0x2005,
 	0x0f80,
 	0x9002,
 	0x1e00,
-	0x1800,
-	0x06c4,
-	0x78cf,
-	0x09d9,
+	0xb0a0,
+	0x202f,
+	0x06c7,
+	0x09d7,
 	0x8005,
-	0xd80f,
-	0x0fea,
-	0xfdaf,
-	0xd90f,
-	0x45cb,
+	0x40c3,
+	0x9003,
+	0xe004,
+	0x1800,
+	0x0f84,
+	0x0000,
+	0x2100,
+	0x41c3,
 	0x9003,
 	0xfe64,
-	0x0b82,
+	0xc000,
+	0x7214,
+	0x40c3,
+	0x9003,
+	0xf064,
+	0x21ca,
+	0x0001,
+	0x700c,
+	0x0f72,
 	0xff6f,
-	0x1d00,
-	0x1005,
-	0x0b7a,
+	0xb100,
+	0x0f6a,
 	0xff4f,
-	0x0a3a,
-	0xff2f,
-	0xc005,
-	0x710c,
-	0x094a,
+	0xd80f,
+	0x0bde,
+	0xfdef,
+	0xd90f,
+	0x730c,
+	0x0a5e,
 	0x0060,
 	0x218a,
 	0x0fc7,
-	0xd820,
-	0x0c3a,
+	0xdf7f,
+	0x46cb,
+	0x9003,
+	0xe024,
+	0x710c,
+	0xb6e0,
+	0xc048,
+	0xb606,
+	0x208a,
+	0x03c4,
+	0x1efe,
+	0x9004,
+	0xd818,
+	0x0d5a,
 	0xfdaf,
 	0x712c,
-	0xc08f,
-	0x702c,
-	0x0ada,
-	0x0020,
-	0x714c,
+	0x208a,
+	0x0004,
+	0x1e00,
+	0x7004,
+	0x9003,
+	0xe004,
 	0xd80f,
-	0x0fae,
+	0x0b9e,
+	0xfdef,
+	0xd90f,
+	0xd807,
+	0x0d3e,
 	0xfdaf,
+	0x712c,
+	0x710c,
+	0xb6e0,
+	0xb606,
+	0xd80f,
 	0xd90f,
-	0xd87f,
-	0x0b4a,
-	0xff6f,
-	0xb500,
-	0x0b46,
-	0xff4f,
-	0x0a06,
-	0xff2f,
-	0xc005,
+	0x0b86,
+	0xfdef,
+	0x1efe,
+	0x93c5,
 	0x730c,
-	0x0916,
-	0x0060,
-	0x218a,
-	0x0fc7,
-	0xd820,
-	0x0c02,
+	0x0d26,
 	0xfdaf,
 	0x712c,
-	0x2455,
-	0x3f00,
-	0x702c,
-	0x0aa2,
-	0x0020,
-	0x714c,
-	0x8f03,
-	0x205f,
-	0x0243,
+	0xd80f,
+	0x0b76,
+	0xfdef,
+	0xd90f,
+	0x700c,
+	0x712c,
+	0x1e00,
+	0x1fc5,
+	0x1e0c,
+	0x1fc5,
+	0x0d0a,
+	0xfdaf,
+	0x1efe,
+	0x9004,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x8804,
 	0x260a,
-	0x3000,
-	0xf03f,
-	0xc08c,
-	0x702c,
-	0x0d26,
-	0xff2f,
-	0xda09,
-	0x70ad,
-	0xf030,
-	0x787b,
-	0x2084,
-	0x0f87,
-	0xc18f,
-	0x2135,
-	0x000b,
-	0x2455,
-	0x3f01,
-	0x2135,
-	0x000e,
-	0x2602,
-	0x12c0,
-	0x2048,
-	0x0002,
-	0xc08c,
-	0x60b8,
-	0xa840,
-	0x7c4f,
-	0xc008,
-	0x205f,
-	0x0241,
-	0x2400,
 	0x3f80,
+	0x9002,
+	0x0064,
+	0xc04e,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x8843,
+	0x4140,
+	0x4358,
+	0xf05f,
+	0x221a,
+	0x0f9f,
 	0x0000,
-	0x0258,
-	0x6038,
-	0x60b8,
-	0x8820,
-	0x0921,
-	0x0305,
-	0xa840,
+	0x1000,
+	0xc606,
+	0xc405,
+	0xf053,
+	0x225f,
+	0x0480,
+	0x74d5,
+	0x24c0,
+	0x1061,
+	0x23ca,
+	0x1061,
+	0xc041,
+	0xc301,
+	0xc08f,
+	0x631b,
+	0x7bd4,
+	0x9300,
+	0xe0c0,
+	0x0088,
+	0x0025,
+	0x40c1,
+	0x209a,
+	0x0004,
+	0x2005,
+	0x07c0,
+	0x7f1b,
+	0x2705,
+	0x178f,
+	0x9700,
+	0x7014,
+	0xc008,
+	0x23ca,
+	0x1021,
+	0x20ca,
+	0x0021,
+	0x0b53,
+	0x1030,
+	0xc048,
+	0x78cf,
+	0x080d,
+	0x00d0,
+	0x084b,
+	0x0210,
+	0x0855,
+	0x01d1,
+	0x788f,
+	0x2079,
+	0x0000,
+	0x205f,
+	0x0100,
+	0xf010,
+	0xc301,
+	0x677f,
+	0x7f14,
+	0x6861,
+	0x209a,
+	0x0004,
+	0x2005,
+	0x07c0,
+	0x781b,
+	0x2005,
+	0x0780,
+	0x9000,
+	0xb700,
+	0x4060,
+	0x0ee5,
+	0x9025,
+	0xc78f,
+	0x0e25,
+	0x11d1,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x7854,
+	0xa8b2,
+	0xf00a,
+	0x706d,
+	0xf008,
+	0x9700,
+	0xb300,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x7854,
+	0xa8b3,
+	0x71c5,
+	0xc009,
+	0x0e5b,
+	0x9004,
+	0x7124,
+	0xc00e,
+	0x7a2f,
+	0x0845,
+	0x80a5,
+	0x716d,
 	0xc008,
-	0x205f,
-	0x0481,
-	0x2400,
-	0x3f80,
-	0x0000,
-	0x01a4,
-	0x6038,
-	0x2300,
-	0x1381,
-	0x78b4,
-	0x793d,
-	0xb020,
 	0x71a5,
-	0x7164,
-	0xc002,
-	0x0da5,
-	0x9004,
-	0xc006,
-	0x2640,
-	0x305e,
 	0x7014,
-	0x23c0,
-	0x0061,
-	0x8f24,
-	0x202f,
-	0x0787,
-	0x097f,
-	0x8025,
-	0xc048,
-	0x8fc3,
-	0x7467,
-	0x234c,
-	0xb780,
-	0x06ec,
-	0xffce,
-	0xf036,
-	0x70ad,
-	0xf02e,
-	0x235f,
-	0x3241,
-	0x2400,
-	0x3f80,
+	0xf313,
+	0x1600,
+	0x7080,
+	0x8000,
 	0x0000,
-	0x0258,
-	0x43a1,
-	0x6038,
+	0xb8c3,
+	0xc041,
+	0xf02f,
+	0xc506,
+	0xf028,
+	0x275f,
+	0x1480,
 	0x41c3,
-	0x003e,
+	0x0047,
 	0x0002,
-	0x09f2,
+	0x42e1,
+	0x661e,
+	0x26f4,
+	0x1340,
+	0x43a1,
+	0x0aae,
 	0xfd6f,
-	0x60a8,
-	0x42a1,
-	0x231a,
-	0x3f80,
+	0x20bc,
+	0x0001,
+	0xc007,
+	0x271a,
+	0x1f81,
 	0x0000,
-	0x2000,
-	0x229a,
-	0x0008,
-	0x235f,
-	0x3481,
-	0x43c3,
+	0x1000,
+	0x26f4,
+	0x1342,
+	0x2054,
+	0x0d00,
+	0x7905,
+	0x40a1,
+	0x209a,
+	0x0004,
+	0x71a5,
+	0x7825,
+	0x781b,
+	0x2005,
+	0x0f81,
 	0x9002,
-	0x0080,
-	0x7a05,
-	0x2400,
-	0x3f80,
 	0x0000,
-	0x01a4,
-	0x6119,
-	0x21f4,
-	0x0340,
-	0x2205,
-	0x00cc,
-	0xb400,
-	0x2342,
-	0x0800,
-	0x7a05,
-	0x21f4,
-	0x0340,
-	0x71a5,
-	0xb200,
-	0xc002,
-	0x0da9,
+	0xc001,
+	0x6058,
+	0x2049,
+	0x0fc0,
+	0xb100,
+	0xc009,
+	0x0db3,
 	0x9024,
-	0x4263,
-	0x8f24,
-	0x71c5,
-	0x78cf,
-	0x0999,
-	0x8025,
-	0x4318,
-	0xc003,
+	0xc68f,
+	0x7167,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x8804,
+	0x272f,
+	0x16c7,
+	0x089b,
+	0x83c5,
+	0xc000,
+	0x088f,
+	0x0091,
+	0x08fa,
+	0xfe4f,
+	0x4308,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x8884,
+	0x40c3,
+	0x8000,
+	0x07ca,
+	0x8803,
+	0xf034,
+	0x41c3,
+	0x8000,
+	0x07ca,
+	0x79b4,
+	0x8972,
+	0x8953,
+	0x4a76,
+	0x4b51,
+	0x7270,
+	0x21ca,
+	0x038d,
+	0x7e2f,
+	0x261a,
+	0x12ce,
+	0xd908,
+	0x27ca,
+	0x122d,
+	0x21ca,
+	0x012d,
+	0x2e44,
+	0x180e,
+	0xf019,
+	0xc207,
+	0x219a,
+	0x0004,
+	0x2254,
+	0x0d03,
+	0x251a,
+	0x1f82,
+	0x0000,
+	0x1000,
+	0x7a65,
+	0x7945,
+	0x793b,
+	0xb991,
+	0xb99c,
+	0xb99f,
+	0x9160,
+	0x7ad0,
+	0x627a,
+	0x2249,
+	0x0fc2,
+	0xb140,
+	0x210a,
+	0x0780,
+	0x09d5,
+	0x83e4,
+	0x2140,
+	0x005e,
+	0x7104,
+	0x7d0f,
+	0x0c9d,
+	0x9365,
+	0xdf09,
+	0xf003,
+	0x0e6a,
+	0xfd8f,
+	0xc00a,
 	0xb885,
 	0x1e00,
 	0x7004,
 	0x9005,
 	0xe0ee,
-	0xc004,
+	0xc003,
 	0x1e00,
 	0x7004,
 	0x9008,
 	0x01ea,
-	0xc001,
+	0xc004,
 	0x7104,
-	0xc041,
-	0xc001,
-	0x7d0f,
-	0xc00a,
-	0x70b1,
-	0x04c6,
+	0xc044,
+	0xc004,
+	0x780f,
+	0xc040,
+	0xc100,
+	0xc00c,
+	0x7030,
+	0x0418,
 	0xffed,
-	0x70cd,
+	0x714c,
 	0x2480,
-	0x3d0a,
+	0x3c03,
 	0x1404,
 	0x341b,
 	0xc6c6,
+	0x78e0,
 	0xc0e6,
 	0x43c3,
 	0x8000,
@@ -11449,8 +11429,8 @@ u16 imem_1d[] = {
 	0x7a65,
 	0x225f,
 	0x0402,
-	0x0dd2,
-	0xfdaf,
+	0x08ca,
+	0xfdef,
 	0x7845,
 	0x1404,
 	0x341b,
@@ -11601,8 +11581,8 @@ u16 imem_1d[] = {
 	0x9005,
 	0xe000,
 	0xd820,
-	0x0e26,
-	0xfeef,
+	0x0902,
+	0xff2f,
 	0x1d00,
 	0x1045,
 	0x1d00,
@@ -11642,21 +11622,21 @@ u16 imem_1d[] = {
 	0x7085,
 	0x9005,
 	0xe0aa,
-	0x0dce,
+	0x0df6,
 	0xfd2f,
 	0xc08d,
 	0xc08d,
-	0x0ace,
+	0x0b36,
 	0x00e0,
 	0xd978,
-	0x0e76,
-	0xfd8f,
+	0x096e,
+	0xfdcf,
 	0xd80f,
-	0x0b56,
+	0x0e4e,
 	0xfdaf,
 	0xd90f,
-	0x0ef6,
-	0xff0f,
+	0x09d2,
+	0xff4f,
 	0x40c3,
 	0x8000,
 	0x067c,
@@ -11667,7 +11647,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x067c,
 	0x712c,
-	0x0aa2,
+	0x0aca,
 	0xfdaf,
 	0xdaf7,
 	0xc001,
@@ -11710,7 +11690,7 @@ u16 imem_1d[] = {
 	0x0f81,
 	0x8000,
 	0x067c,
-	0x0d02,
+	0x0d6a,
 	0x00a0,
 	0xc004,
 	0x40c3,
@@ -11741,15 +11721,15 @@ u16 imem_1d[] = {
 	0x18fe,
 	0x8044,
 	0x40c1,
-	0x0ba2,
+	0x0bda,
 	0x00a0,
 	0x702c,
 	0xd830,
-	0x0f16,
+	0x0f3e,
 	0xfd6f,
 	0x712c,
-	0x0d9e,
-	0xfe0f,
+	0x0896,
+	0xfe4f,
 	0x231a,
 	0x3f80,
 	0x0010,
@@ -11765,15 +11745,15 @@ u16 imem_1d[] = {
 	0x8534,
 	0xc188,
 	0x700c,
-	0x0eee,
+	0x0f16,
 	0xfd6f,
 	0x712c,
 	0xd80f,
-	0x0a6e,
+	0x0d66,
 	0xfdaf,
 	0xd90f,
 	0x40c1,
-	0x0b62,
+	0x0b9a,
 	0x00a0,
 	0x712c,
 	0x208a,
@@ -11789,7 +11769,7 @@ u16 imem_1d[] = {
 	0x0f7d,
 	0x1a35,
 	0x700c,
-	0x0ebe,
+	0x0ee6,
 	0xfd6f,
 	0x712c,
 	0x1503,
@@ -11841,7 +11821,7 @@ u16 imem_1d[] = {
 	0x0baf,
 	0x9325,
 	0xd80f,
-	0x09de,
+	0x0cd6,
 	0xfdaf,
 	0xd90f,
 	0x0b8d,
@@ -11851,13 +11831,13 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x006e,
 	0x0000,
-	0x0cfe,
+	0x0d26,
 	0xfd2f,
 	0x2378,
 	0x3000,
 	0x1e00,
 	0x1005,
-	0x0cc6,
+	0x0fbe,
 	0xfe2f,
 	0x1e02,
 	0x1005,
@@ -11866,7 +11846,7 @@ u16 imem_1d[] = {
 	0x0020,
 	0x732c,
 	0xd840,
-	0x0e22,
+	0x0e4a,
 	0xfd6f,
 	0x712c,
 	0xc002,
@@ -11893,7 +11873,7 @@ u16 imem_1d[] = {
 	0x0ae7,
 	0x80c5,
 	0xc001,
-	0x09c2,
+	0x0cba,
 	0xfdaf,
 	0x712c,
 	0xc106,
@@ -11902,7 +11882,7 @@ u16 imem_1d[] = {
 	0x714c,
 	0x7825,
 	0xc102,
-	0x092a,
+	0x0992,
 	0x00e0,
 	0x716c,
 	0x702c,
@@ -11941,7 +11921,7 @@ u16 imem_1d[] = {
 	0x0f81,
 	0x8000,
 	0x067c,
-	0x0b36,
+	0x0b9e,
 	0x00a0,
 	0xc004,
 	0x2480,
@@ -11989,7 +11969,7 @@ u16 imem_1d[] = {
 	0x7fe0,
 	0xa830,
 	0xc2e2,
-	0x0b9a,
+	0x0e92,
 	0xfdcf,
 	0x256f,
 	0x1343,
@@ -12092,7 +12072,7 @@ u16 imem_1d[] = {
 	0x73c0,
 	0x8000,
 	0x08e8,
-	0x0b62,
+	0x0b5e,
 	0x0040,
 	0x71e5,
 	0xcc22,
@@ -12175,8 +12155,8 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00af,
 	0x0001,
-	0x0fe2,
-	0xfd6f,
+	0x0ada,
+	0xfdaf,
 	0xd80a,
 	0x40c3,
 	0x8000,
@@ -12190,7 +12170,7 @@ u16 imem_1d[] = {
 	0x8e40,
 	0x4508,
 	0xea17,
-	0x0c1a,
+	0x0f42,
 	0xfeaf,
 	0x4040,
 	0x4708,
@@ -12198,7 +12178,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00d6,
 	0x0001,
-	0x0a46,
+	0x0a6e,
 	0xfd2f,
 	0x700c,
 	0x40e1,
@@ -12214,7 +12194,7 @@ u16 imem_1d[] = {
 	0x16ff,
 	0x9082,
 	0xea18,
-	0x0bea,
+	0x0f12,
 	0xfeaf,
 	0x4040,
 	0x228c,
@@ -12224,7 +12204,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00d7,
 	0x0001,
-	0x0a12,
+	0x0a3a,
 	0xfd2f,
 	0x700c,
 	0x700c,
@@ -12257,7 +12237,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x00d8,
 	0x0001,
-	0x09d2,
+	0x09fa,
 	0xfd2f,
 	0x700c,
 	0x700c,
@@ -12402,15 +12382,15 @@ u16 imem_1d[] = {
 	0xc000,
 	0x4263,
 	0x790f,
-	0x0faa,
-	0xfdaf,
+	0x0aa2,
+	0xfdef,
 	0x700c,
 	0xed08,
 	0xc000,
 	0x4263,
 	0x790f,
-	0x0f9e,
-	0xfdaf,
+	0x0a96,
+	0xfdef,
 	0x710c,
 	0xc000,
 	0x7104,
@@ -12460,15 +12440,15 @@ u16 imem_1d[] = {
 	0xc000,
 	0x4263,
 	0x790f,
-	0x0f36,
-	0xfdaf,
+	0x0a2e,
+	0xfdef,
 	0x700c,
 	0xee08,
 	0xc000,
 	0x4263,
 	0x790f,
-	0x0f2a,
-	0xfdaf,
+	0x0a22,
+	0xfdef,
 	0x710c,
 	0xc000,
 	0x7104,
@@ -12485,10 +12465,10 @@ u16 imem_1d[] = {
 	0x708e,
 	0x8000,
 	0x0004,
-	0x0faa,
-	0xfdcf,
-	0x0fb2,
-	0xfdef,
+	0x0aa2,
+	0xfe0f,
+	0x0aaa,
+	0xfe2f,
 	0x4508,
 	0x4100,
 	0x0cfe,
@@ -12562,7 +12542,7 @@ u16 imem_1d[] = {
 	0x4528,
 	0xc142,
 	0xc141,
-	0x08f2,
+	0x091a,
 	0xfd6f,
 	0xc140,
 	0x1600,
@@ -12576,7 +12556,7 @@ u16 imem_1d[] = {
 	0xdb0c,
 	0xc542,
 	0xc541,
-	0x08d6,
+	0x08fe,
 	0xfd6f,
 	0xc540,
 	0xd8ff,
@@ -12586,7 +12566,7 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x08c2,
+	0x08ea,
 	0xfd6f,
 	0xc540,
 	0xc0a4,
@@ -12602,7 +12582,7 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x08a2,
+	0x08ca,
 	0xfd6f,
 	0xc540,
 	0x46cb,
@@ -12622,7 +12602,7 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x087a,
+	0x08a2,
 	0xfd6f,
 	0xc540,
 	0x8e00,
@@ -12633,7 +12613,7 @@ u16 imem_1d[] = {
 	0xdb08,
 	0xc542,
 	0xc541,
-	0x0866,
+	0x088e,
 	0xfd6f,
 	0xc540,
 	0x8e00,
@@ -12644,7 +12624,7 @@ u16 imem_1d[] = {
 	0xdb0c,
 	0xc542,
 	0xc541,
-	0x084e,
+	0x0876,
 	0xfd6f,
 	0xc540,
 	0xc0a4,
@@ -12711,11 +12691,11 @@ u16 imem_1d[] = {
 	0x0000,
 	0x010c,
 	0x702c,
-	0x08ce,
+	0x0baa,
 	0xfeef,
 	0xdab4,
 	0xc096,
-	0x08c6,
+	0x0ba2,
 	0xfeef,
 	0xdab4,
 	0xbee2,
@@ -12768,7 +12748,7 @@ u16 imem_1d[] = {
 	0x0801,
 	0x0031,
 	0x7b7b,
-	0x0aea,
+	0x0de2,
 	0xfd6f,
 	0x40c1,
 	0xc047,
@@ -12788,8 +12768,8 @@ u16 imem_1d[] = {
 	0x700c,
 	0xc110,
 	0x704c,
-	0x0e5e,
-	0xfe6f,
+	0x0986,
+	0xfeaf,
 	0xc045,
 	0x7014,
 	0x01f6,
@@ -12802,7 +12782,7 @@ u16 imem_1d[] = {
 	0xc004,
 	0xb863,
 	0x7214,
-	0x0a28,
+	0x0d20,
 	0xfd45,
 	0x4508,
 	0xf79a,
@@ -12833,8 +12813,8 @@ u16 imem_1d[] = {
 	0x2456,
 	0x3e00,
 	0x702c,
-	0x0fda,
-	0xfeaf,
+	0x0ab6,
+	0xfeef,
 	0xdab4,
 	0xc004,
 	0x7614,
@@ -12875,8 +12855,8 @@ u16 imem_1d[] = {
 	0x23ca,
 	0x31a1,
 	0x40c1,
-	0x0d7e,
-	0xfeef,
+	0x085a,
+	0xff2f,
 	0x4263,
 	0xdf8c,
 	0x716f,
@@ -12888,17 +12868,17 @@ u16 imem_1d[] = {
 	0x3e01,
 	0xf09d,
 	0xc005,
-	0x0f36,
+	0x0f9e,
 	0x00a0,
 	0x2456,
 	0x3e01,
 	0xf097,
-	0x0ac6,
+	0x0b2e,
 	0x00a0,
 	0xc005,
 	0xf093,
 	0x40c1,
-	0x0f5e,
+	0x0ea6,
 	0xff6f,
 	0x41a1,
 	0xf08f,
@@ -12919,7 +12899,7 @@ u16 imem_1d[] = {
 	0x3e00,
 	0xc040,
 	0x40c1,
-	0x0d96,
+	0x0d92,
 	0x0020,
 	0x704c,
 	0x716f,
@@ -12990,7 +12970,7 @@ u16 imem_1d[] = {
 	0x067c,
 	0x41a1,
 	0x704c,
-	0x0ae2,
+	0x0e0a,
 	0xfe6f,
 	0x716c,
 	0xc096,
@@ -13006,13 +12986,13 @@ u16 imem_1d[] = {
 	0x3e00,
 	0xc040,
 	0x40c1,
-	0x0ce6,
+	0x0ce2,
 	0x0020,
 	0x714c,
 	0xc005,
 	0x41a1,
 	0x704c,
-	0x0ab6,
+	0x0dde,
 	0xfe6f,
 	0x706c,
 	0xdfc0,
@@ -13027,8 +13007,8 @@ u16 imem_1d[] = {
 	0xf006,
 	0x71ad,
 	0xc005,
-	0x0fea,
-	0xfdaf,
+	0x0ae2,
+	0xfdef,
 	0xc191,
 	0x706f,
 	0xed0d,
@@ -13039,7 +13019,7 @@ u16 imem_1d[] = {
 	0x671f,
 	0xc00f,
 	0x716c,
-	0x084a,
+	0x08b2,
 	0x00a0,
 	0x78e5,
 	0x43b9,
@@ -13057,8 +13037,8 @@ u16 imem_1d[] = {
 	0x05e8,
 	0xffee,
 	0x78cf,
-	0x0d56,
-	0xfd6f,
+	0x084e,
+	0xfdaf,
 	0x730c,
 	0xca09,
 	0xe895,
@@ -13066,7 +13046,7 @@ u16 imem_1d[] = {
 	0x0811,
 	0x00f1,
 	0x79cf,
-	0x0cba,
+	0x0fb2,
 	0xfd6f,
 	0xc007,
 	0xf00d,
@@ -13077,7 +13057,7 @@ u16 imem_1d[] = {
 	0xc00a,
 	0xc109,
 	0xc207,
-	0x0bf2,
+	0x0eea,
 	0xfd6f,
 	0x2052,
 	0x0000,
@@ -13096,7 +13076,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0000,
 	0xb8e5,
-	0x0cb8,
+	0x0fb0,
 	0xfd42,
 	0x1e00,
 	0x7003,
@@ -13111,27 +13091,27 @@ u16 imem_1d[] = {
 	0xc2e6,
 	0x1cfc,
 	0xb6c8,
-	0xc1b1,
-	0xc050,
+	0xc1b0,
+	0xc04f,
 	0x1600,
 	0x7080,
 	0x8000,
 	0x0004,
 	0xc046,
-	0x0e96,
-	0xfdef,
+	0x0982,
+	0xfe2f,
 	0x4020,
 	0x40c3,
 	0x0000,
 	0xffff,
 	0x4100,
 	0x4200,
-	0x0b72,
+	0x0e6a,
 	0xfdef,
 	0x4300,
 	0xd80f,
-	0x0fca,
-	0xfd2f,
+	0x0ac2,
+	0xfd6f,
 	0xd90f,
 	0x47cb,
 	0x9003,
@@ -13177,21 +13157,21 @@ u16 imem_1d[] = {
 	0x7824,
 	0xc041,
 	0x8e05,
-	0xc04d,
+	0xc04c,
 	0x7824,
-	0xc04e,
+	0xc04d,
 	0xc006,
 	0x201a,
 	0x0f80,
 	0x0010,
 	0x0000,
-	0xc044,
+	0xc045,
 	0x8e03,
-	0xc04c,
+	0xc04b,
 	0x8e02,
-	0x025f,
+	0x0259,
 	0x0020,
-	0xc04b,
+	0xc04a,
 	0x0e13,
 	0x315e,
 	0xc001,
@@ -13204,8 +13184,8 @@ u16 imem_1d[] = {
 	0x70ad,
 	0x770c,
 	0x716f,
-	0xc042,
-	0xf0d0,
+	0xc043,
+	0xf0cd,
 	0x2344,
 	0x37c1,
 	0xe905,
@@ -13232,8 +13212,8 @@ u16 imem_1d[] = {
 	0x0025,
 	0x784f,
 	0x790b,
-	0xc04a,
-	0xf2b3,
+	0xc042,
+	0xf2b0,
 	0x202f,
 	0x06c7,
 	0x41c3,
@@ -13241,16 +13221,16 @@ u16 imem_1d[] = {
 	0x067c,
 	0x714c,
 	0x706c,
-	0x08ee,
+	0x0c16,
 	0xfe6f,
-	0xc04f,
-	0xc00a,
+	0xc04e,
+	0xc002,
 	0x702c,
-	0x0d1e,
-	0xfeef,
+	0x0996,
+	0xff2f,
 	0x714c,
 	0x700c,
-	0x0b52,
+	0x0b7a,
 	0xfd2f,
 	0x712c,
 	0x700c,
@@ -13283,7 +13263,7 @@ u16 imem_1d[] = {
 	0x0f83,
 	0x0000,
 	0x1000,
-	0xc004,
+	0xc005,
 	0x7144,
 	0x7865,
 	0x781b,
@@ -13300,7 +13280,7 @@ u16 imem_1d[] = {
 	0x0f81,
 	0x0000,
 	0x1000,
-	0xc004,
+	0xc005,
 	0x7825,
 	0x781b,
 	0x2005,
@@ -13308,22 +13288,22 @@ u16 imem_1d[] = {
 	0x9002,
 	0x0040,
 	0xb0a0,
-	0x08ce,
+	0x0baa,
 	0xfeaf,
 	0xd814,
 	0x0a9e,
 	0xff8f,
-	0xc010,
+	0xc00f,
 	0x712c,
-	0x0ad2,
+	0x0afa,
 	0xfd2f,
 	0x7810,
 	0x8e04,
-	0xc043,
+	0xc044,
 	0x700c,
 	0xc047,
 	0xf034,
-	0xc003,
+	0xc004,
 	0x704c,
 	0x201a,
 	0x0f81,
@@ -13334,7 +13314,7 @@ u16 imem_1d[] = {
 	0x9002,
 	0x0170,
 	0x9000,
-	0xc245,
+	0xc242,
 	0xf011,
 	0x209a,
 	0x0008,
@@ -13345,85 +13325,82 @@ u16 imem_1d[] = {
 	0x0166,
 	0x9000,
 	0xe806,
-	0xc005,
+	0xc002,
 	0x7810,
 	0x200f,
 	0x0080,
-	0xc045,
+	0xc042,
 	0x7144,
 	0x0ae5,
 	0x8234,
 	0x4040,
-	0xc005,
+	0xc002,
 	0x262f,
 	0xf008,
 	0xf40b,
-	0xc303,
+	0xc304,
 	0x740c,
 	0x41c3,
 	0x000e,
 	0x0003,
 	0x4263,
-	0x0e96,
-	0xfd2f,
+	0x098e,
+	0xfd6f,
 	0xc540,
-	0xc105,
+	0xc102,
 	0xc007,
 	0x7825,
 	0xc047,
-	0xc003,
+	0xc004,
 	0x7104,
-	0xc043,
+	0xc044,
 	0x8e25,
-	0xc003,
+	0xc004,
 	0x0997,
 	0x8025,
 	0xd80f,
-	0x0dda,
-	0xfd2f,
+	0x08d2,
+	0xfd6f,
 	0xd90f,
 	0xc007,
 	0x262f,
 	0xf008,
 	0xf580,
-	0xc002,
+	0xc003,
 	0x2008,
 	0x0340,
-	0xc042,
+	0xc043,
 	0x710c,
 	0xc049,
 	0xc009,
 	0x41c3,
 	0x0011,
 	0x0001,
-	0x08ea,
+	0x0912,
 	0xfcef,
 	0x4263,
-	0x0f8e,
-	0xfe6f,
-	0xc00a,
-	0xc00f,
+	0xc00e,
 	0x41c3,
 	0x8000,
 	0x067c,
 	0x704c,
-	0x0fa2,
-	0xfe2f,
+	0x0ace,
+	0xfe6f,
 	0x706c,
-	0xc502,
+	0xc503,
 	0x7767,
 	0x7077,
-	0x0664,
+	0x0668,
 	0xffea,
 	0x710c,
-	0xc002,
+	0xc003,
 	0x41c3,
 	0x0013,
 	0x0000,
 	0x7812,
 	0x202f,
 	0x000d,
-	0x08b6,
+	0x08e2,
 	0xfcef,
 	0xb8c0,
 	0xc006,
@@ -13439,7 +13416,7 @@ u16 imem_1d[] = {
 	0x0f82,
 	0x9005,
 	0xe040,
-	0xc002,
+	0xc003,
 	0x6038,
 	0x2049,
 	0x07c1,
@@ -13448,16 +13425,16 @@ u16 imem_1d[] = {
 	0x0243,
 	0x10fd,
 	0x809e,
-	0x0e37,
+	0x0e39,
 	0x315f,
 	0x8e65,
 	0x8e44,
-	0xf00e,
+	0xf00f,
 	0x221a,
 	0x0f8c,
 	0x0000,
 	0x1000,
-	0xc004,
+	0xc005,
 	0x7144,
 	0x7885,
 	0x781b,
@@ -13466,21 +13443,21 @@ u16 imem_1d[] = {
 	0x9002,
 	0x0040,
 	0xb020,
-	0x0be7,
+	0x0be9,
 	0x8085,
-	0x0962,
+	0x096a,
 	0xff8f,
 	0x206f,
 	0x0243,
 	0x10fd,
 	0x809e,
-	0xf00e,
+	0xf00f,
 	0xc001,
 	0x201a,
 	0x0f82,
 	0x0000,
 	0x1000,
-	0xc004,
+	0xc005,
 	0x7845,
 	0x781b,
 	0x2005,
@@ -13492,19 +13469,19 @@ u16 imem_1d[] = {
 	0x7104,
 	0xc041,
 	0xc101,
-	0xc00e,
+	0xc00d,
 	0x7110,
-	0x05a4,
+	0x05ac,
 	0xffce,
-	0x0e15,
+	0x0e17,
 	0x315e,
-	0xc00d,
+	0xc00c,
 	0xae05,
 	0xc008,
 	0xae04,
-	0xc00c,
-	0xae03,
 	0xc00b,
+	0xae03,
+	0xc00a,
 	0xae02,
 	0x700c,
 	0x1fa7,
@@ -13512,10 +13489,11 @@ u16 imem_1d[] = {
 	0x1fa8,
 	0x101c,
 	0xb700,
-	0xc0b1,
+	0xc0b0,
 	0x1404,
 	0x341b,
 	0xc6c6,
+	0x78e0,
 	0x208c,
 	0x8fc3,
 	0xf209,
@@ -13556,8 +13534,8 @@ u16 imem_1d[] = {
 	0x208c,
 	0x8010,
 	0xf785,
-	0x0fc2,
-	0xfd0f,
+	0x0abe,
+	0xfd4f,
 	0xcc22,
 	0x2615,
 	0x7001,
@@ -13614,8 +13592,8 @@ u16 imem_1d[] = {
 	0x7902,
 	0x6e02,
 	0x7030,
-	0x0f4c,
-	0xfd0a,
+	0x0a48,
+	0xfd4a,
 	0x0f3a,
 	0xffef,
 	0xd808,
@@ -13651,7 +13629,7 @@ u16 imem_1d[] = {
 	0x9008,
 	0x01e0,
 	0x4063,
-	0x0c06,
+	0x0f02,
 	0xfd2f,
 	0x702c,
 	0xc050,
@@ -13660,8 +13638,8 @@ u16 imem_1d[] = {
 	0xffff,
 	0x4100,
 	0x4200,
-	0x0f46,
-	0xfdaf,
+	0x0a42,
+	0xfdef,
 	0x4300,
 	0x40c3,
 	0x0000,
@@ -13678,18 +13656,18 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x8000,
 	0x044d,
-	0x0de6,
+	0x0e12,
 	0xfcaf,
 	0xda60,
 	0x2400,
 	0x3f80,
 	0x0000,
 	0x01e4,
-	0x0ae2,
+	0x0b4e,
 	0x0060,
 	0xd960,
-	0x716c,
-	0x4060,
+	0x712c,
+	0x4020,
 	0x2344,
 	0x37cf,
 	0xef05,
@@ -13697,7 +13675,7 @@ u16 imem_1d[] = {
 	0x0fff,
 	0x9031,
 	0x781b,
-	0x7edd,
+	0xc053,
 	0x205a,
 	0x0100,
 	0x7edd,
@@ -13708,23 +13686,24 @@ u16 imem_1d[] = {
 	0xc005,
 	0x7edd,
 	0x7edd,
-	0xe807,
+	0x7edd,
+	0xe808,
 	0xd8ff,
 	0x1e00,
 	0x7004,
 	0x9003,
 	0xf0c4,
-	0xf016,
+	0xf017,
 	0x700c,
-	0xf011,
+	0xf012,
 	0x2044,
-	0x07c1,
-	0xe906,
-	0xb961,
-	0x0901,
-	0x0031,
+	0x07c3,
+	0xeb05,
+	0xbb61,
+	0x0bff,
+	0x8031,
 	0x7c9b,
-	0x6821,
+	0x6861,
 	0x209a,
 	0x0008,
 	0x2005,
@@ -13732,32 +13711,31 @@ u16 imem_1d[] = {
 	0x9003,
 	0xe0c4,
 	0xb080,
-	0x4020,
-	0x08e3,
+	0x4060,
+	0x08e1,
 	0x8234,
-	0x4468,
+	0x4428,
 	0x1498,
 	0x3600,
 	0x251a,
 	0x1f8d,
 	0x0010,
 	0x0000,
-	0x7bc6,
+	0x79c6,
 	0xc04d,
 	0x1497,
 	0x3600,
+	0xc14c,
 	0x702c,
-	0xc34c,
 	0xc04e,
 	0x1496,
 	0x3600,
 	0xc551,
 	0xc04f,
 	0x784f,
-	0x704c,
-	0x0926,
+	0x0da2,
 	0xfeef,
-	0xc053,
+	0x704c,
 	0x702c,
 	0xc14a,
 	0xf00c,
@@ -13881,16 +13859,16 @@ u16 imem_1d[] = {
 	0xc047,
 	0xf0df,
 	0xc109,
-	0x08d2,
+	0x093e,
 	0x0060,
 	0x2456,
 	0x3880,
 	0xd80f,
-	0x09e2,
+	0x0cde,
 	0xfd2f,
 	0xd90f,
 	0x710c,
-	0x0b5a,
+	0x0b5e,
 	0xffaf,
 	0xd9ff,
 	0x46cb,
@@ -13912,26 +13890,26 @@ u16 imem_1d[] = {
 	0x712c,
 	0xe020,
 	0x7810,
-	0x0e26,
+	0x0e52,
 	0xfcef,
 	0x4318,
 	0xc015,
 	0x712c,
 	0x68e1,
 	0xc00e,
-	0x0cc6,
+	0x0cca,
 	0xff6f,
 	0x42e1,
 	0xc109,
-	0x087e,
+	0x08ea,
 	0x0060,
 	0xc097,
 	0xd80f,
-	0x0992,
+	0x0c8e,
 	0xfd2f,
 	0xd90f,
 	0x730c,
-	0x0b0a,
+	0x0b0e,
 	0xffaf,
 	0xd9ff,
 	0x712c,
@@ -13945,13 +13923,13 @@ u16 imem_1d[] = {
 	0x9044,
 	0x1ea8,
 	0x135c,
-	0x0de6,
+	0x0e12,
 	0xfcef,
 	0x1ea9,
 	0x135c,
 	0xc00d,
 	0x712c,
-	0x0c86,
+	0x0c8a,
 	0xff6f,
 	0x42e1,
 	0xc00a,
@@ -14015,7 +13993,7 @@ u16 imem_1d[] = {
 	0x780f,
 	0x2078,
 	0x0000,
-	0x0c16,
+	0x0c42,
 	0xfcaf,
 	0xc740,
 	0xc010,
@@ -14061,7 +14039,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0015,
 	0x0006,
-	0x0926,
+	0x0c22,
 	0xfd2f,
 	0xc743,
 	0xb5e0,
@@ -14096,7 +14074,7 @@ u16 imem_1d[] = {
 	0x090d,
 	0x8025,
 	0x70b5,
-	0x0be0,
+	0x0ec0,
 	0xfe82,
 	0xc00a,
 	0x7104,
@@ -14110,7 +14088,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0016,
 	0x0000,
-	0x08c2,
+	0x0bbe,
 	0xfd0f,
 	0x1600,
 	0x708e,
@@ -14151,7 +14129,7 @@ u16 imem_1d[] = {
 	0x0017,
 	0x0005,
 	0x42a1,
-	0x0872,
+	0x0b6e,
 	0xfd2f,
 	0x43e1,
 	0xc004,
@@ -14168,11 +14146,41 @@ u16 imem_1d[] = {
 	0x7dcf,
 	0x089f,
 	0x8345,
-	0x098a,
-	0xfe6f,
+	0x700c,
+	0x0bba,
+	0xfcef,
+	0xd9ff,
+	0x1200,
+	0x3083,
+	0x702c,
+	0xd8ff,
+	0x754c,
+	0x4528,
+	0xc143,
+	0xc142,
+	0xc141,
+	0x0c7a,
+	0xfcef,
+	0xc140,
 	0xc013,
+	0xd980,
+	0x764c,
+	0xb8c1,
+	0xc042,
+	0xd8ff,
+	0xdb20,
+	0xc543,
+	0xc541,
+	0x0c62,
+	0xfcef,
+	0x1c00,
+	0x3041,
+	0x700c,
+	0x0c16,
+	0xfcef,
+	0x712c,
 	0x1e00,
-	0x7005,
+	0x7344,
 	0x9003,
 	0xe004,
 	0x2480,
@@ -14201,7 +14209,7 @@ u16 imem_1d[] = {
 	0x067c,
 	0x88e2,
 	0x700c,
-	0x0b4e,
+	0x0b3e,
 	0xfcef,
 	0x702c,
 	0x710c,
@@ -14231,7 +14239,7 @@ u16 imem_1d[] = {
 	0xc143,
 	0x1c04,
 	0x3081,
-	0x0dfa,
+	0x0dea,
 	0xfcef,
 	0xc740,
 	0xd8ff,
@@ -14241,11 +14249,11 @@ u16 imem_1d[] = {
 	0xc643,
 	0xc642,
 	0xc641,
-	0x0bd6,
+	0x0bc6,
 	0xfcef,
 	0xc640,
 	0x700c,
-	0x0b8e,
+	0x0b7e,
 	0xfcef,
 	0x712c,
 	0xc0a4,
@@ -14257,17 +14265,34 @@ u16 imem_1d[] = {
 	0xb6c8,
 	0xc1a4,
 	0x4528,
-	0x09d2,
+	0x0c92,
 	0xfdaf,
 	0x4708,
 	0x4608,
 	0x700c,
-	0x0ad2,
+	0x0ac2,
 	0xfcef,
 	0xd908,
 	0x706f,
 	0xd8ff,
 	0x702c,
+	0x754c,
+	0xdb0a,
+	0x1c0c,
+	0x36c0,
+	0x1c08,
+	0x36c0,
+	0x1c04,
+	0x36c0,
+	0x0b7e,
+	0xfcef,
+	0x1c00,
+	0x36c0,
+	0x0dc2,
+	0xfcef,
+	0xd8ff,
+	0xd8ff,
+	0x702c,
 	0x704c,
 	0xdb28,
 	0x1c0c,
@@ -14275,22 +14300,19 @@ u16 imem_1d[] = {
 	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0b92,
+	0x0b5e,
 	0xfcef,
 	0x1c00,
 	0x36c0,
-	0x0dd6,
-	0xfcef,
-	0xd8ff,
 	0xe62e,
 	0xed18,
-	0xf836,
+	0xf83b,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0b72,
+	0x0b46,
 	0xfcef,
 	0x1c00,
 	0x36c0,
@@ -14313,8 +14335,8 @@ u16 imem_1d[] = {
 	0x36c0,
 	0x1c00,
 	0x36c0,
-	0xf828,
-	0x0b42,
+	0xf82d,
+	0x0b16,
 	0xfccf,
 	0xd8ff,
 	0x702c,
@@ -14325,7 +14347,7 @@ u16 imem_1d[] = {
 	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0b2e,
+	0x0b02,
 	0xfcef,
 	0x1c00,
 	0x36c0,
@@ -14337,7 +14359,7 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0b16,
+	0x0aea,
 	0xfcef,
 	0xc540,
 	0xd8ff,
@@ -14348,7 +14370,7 @@ u16 imem_1d[] = {
 	0x30c1,
 	0xc542,
 	0xc541,
-	0x0afe,
+	0x0ad2,
 	0xfcef,
 	0xc540,
 	0x702c,
@@ -14360,7 +14382,7 @@ u16 imem_1d[] = {
 	0x3041,
 	0xc542,
 	0xc541,
-	0x0ae6,
+	0x0aba,
 	0xfcef,
 	0xc540,
 	0xd8ff,
@@ -14370,24 +14392,34 @@ u16 imem_1d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0ad2,
+	0x0aa6,
 	0xfcef,
 	0xc540,
-	0x0cfe,
-	0xfcef,
-	0xd8ff,
 	0xbfc1,
 	0xd8ff,
-	0xd980,
+	0x702c,
 	0x764c,
-	0x746c,
+	0xdb2e,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0ab6,
+	0x0a92,
 	0xfcef,
 	0x1c00,
 	0x3041,
+	0x0cba,
+	0xfcef,
+	0xd8ff,
+	0xd8ff,
+	0xd980,
+	0x754c,
+	0x746c,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0a76,
+	0xfcef,
+	0xc540,
 	0xc0a4,
 	0x1404,
 	0x341b,
@@ -14407,7 +14439,7 @@ u16 imem_1d[] = {
 	0x700c,
 	0xd9ff,
 	0xc346,
-	0x09b2,
+	0x0972,
 	0xfcef,
 	0xc244,
 	0xc00d,
@@ -14420,7 +14452,7 @@ u16 imem_1d[] = {
 	0x8000,
 	0x0624,
 	0x702c,
-	0x0896,
+	0x0856,
 	0xfcaf,
 	0x42e1,
 	0xc207,
@@ -14441,7 +14473,7 @@ u16 imem_1d[] = {
 	0x36c0,
 	0xc040,
 	0xd8ff,
-	0x0c56,
+	0x0c16,
 	0xfcef,
 	0xc741,
 	0x0d07,
@@ -14450,7 +14482,7 @@ u16 imem_1d[] = {
 	0x70b5,
 	0xd9c8,
 	0xd8fa,
-	0x0a5e,
+	0x0d1e,
 	0xfe2f,
 	0x20ca,
 	0x0041,
@@ -14468,7 +14500,7 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0x702c,
 	0x754c,
-	0x0c1e,
+	0x0bde,
 	0xfcef,
 	0xdb20,
 	0x71a5,
@@ -14483,7 +14515,7 @@ u16 imem_1d[] = {
 	0x3401,
 	0xc642,
 	0xc641,
-	0x09f2,
+	0x09b2,
 	0xfcef,
 	0xc640,
 	0xd8ff,
@@ -14493,17 +14525,17 @@ u16 imem_1d[] = {
 	0xc643,
 	0xc642,
 	0xc641,
-	0x09de,
+	0x099e,
 	0xfcef,
 	0xc640,
 	0x700c,
-	0x0996,
+	0x0956,
 	0xfcef,
 	0x712c,
 	0xc004,
 	0xe833,
 	0x700c,
-	0x08f2,
+	0x08b2,
 	0xfcef,
 	0xd9ff,
 	0xd84f,
@@ -14515,21 +14547,21 @@ u16 imem_1d[] = {
 	0xc543,
 	0x1c08,
 	0x36c0,
-	0x09b2,
+	0x0972,
 	0xfcef,
 	0xc541,
 	0x700c,
-	0x096a,
+	0x092a,
 	0xfcef,
 	0x712c,
 	0x40c3,
 	0x000f,
 	0x4240,
-	0x0fa6,
-	0xfe2f,
+	0x0a1a,
+	0xfe6f,
 	0x702c,
 	0x700c,
-	0x08be,
+	0x087e,
 	0xfcef,
 	0xd9ff,
 	0xd851,
@@ -14538,18 +14570,18 @@ u16 imem_1d[] = {
 	0xc543,
 	0x1c08,
 	0x36c0,
-	0x0982,
+	0x0942,
 	0xfcef,
 	0xc541,
 	0x700c,
-	0x093a,
+	0x08fa,
 	0xfcef,
 	0x712c,
 	0x40c3,
 	0x0000,
 	0x1f40,
-	0x0f76,
-	0xfe2f,
+	0x09ea,
+	0xfe6f,
 	0xd91e,
 	0xc0a8,
 	0x1404,
@@ -14569,7 +14601,7 @@ u16 imem_1d[] = {
 	0xc349,
 	0xc247,
 	0xc14a,
-	0x0c5e,
+	0x0eee,
 	0xfd2f,
 	0xc046,
 	0xc011,
@@ -14598,11 +14630,11 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0a00,
-	0x0832,
-	0xfcef,
+	0x0ff2,
+	0xfcaf,
 	0xd9ff,
-	0x0852,
-	0xff8f,
+	0x0fea,
+	0xff4f,
 	0x700c,
 	0xc044,
 	0x41e1,
@@ -14640,7 +14672,7 @@ u16 imem_1d[] = {
 	0xc041,
 	0xc040,
 	0xd8ff,
-	0x08b6,
+	0x0876,
 	0xfcef,
 	0xdb20,
 	0xc004,
@@ -14658,7 +14690,7 @@ u16 imem_1d[] = {
 	0xc006,
 	0xc540,
 	0xc042,
-	0x0892,
+	0x0852,
 	0xfcef,
 	0xd8ff,
 	0x40c3,
@@ -14672,7 +14704,7 @@ u16 imem_1d[] = {
 	0xf869,
 	0xc542,
 	0xc741,
-	0x0876,
+	0x0836,
 	0xfcef,
 	0x1c00,
 	0x36c0,
@@ -14688,7 +14720,7 @@ u16 imem_1d[] = {
 	0x2045,
 	0x0580,
 	0xc040,
-	0x0856,
+	0x0816,
 	0xfcef,
 	0xd8ff,
 	0x40c3,
@@ -14703,16 +14735,16 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc741,
-	0x083a,
-	0xfcef,
+	0x0ffa,
+	0xfcaf,
 	0xc640,
 	0xc005,
 	0xe819,
 	0x40c3,
 	0x0000,
 	0x2710,
-	0x0e52,
-	0xfe2f,
+	0x08c6,
+	0xfe6f,
 	0xd90a,
 	0x781d,
 	0x781d,
@@ -14722,8 +14754,8 @@ u16 imem_1d[] = {
 	0xc542,
 	0xc541,
 	0xc540,
-	0x0812,
-	0xfcef,
+	0x0fd2,
+	0xfcaf,
 	0xc643,
 	0xf84d,
 	0xc643,
@@ -14743,7 +14775,7 @@ u16 imem_1d[] = {
 	0x702c,
 	0x704c,
 	0xdb18,
-	0x0fea,
+	0x0faa,
 	0xfc8f,
 	0xc004,
 	0x790f,
@@ -14753,10 +14785,10 @@ u16 imem_1d[] = {
 	0x0817,
 	0x02d1,
 	0xe909,
-	0x0eca,
+	0x0e62,
 	0xff4f,
 	0x700c,
-	0x0f8e,
+	0x0f4e,
 	0xfcaf,
 	0x712c,
 	0xd8ff,
@@ -14775,10 +14807,10 @@ u16 imem_1d[] = {
 	0x47cb,
 	0x0000,
 	0x0a00,
-	0x0ed2,
+	0x0e92,
 	0xfcaf,
 	0x40e1,
-	0x0eee,
+	0x0e86,
 	0xff4f,
 	0x46cb,
 	0x8000,
@@ -14795,7 +14827,7 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0x4528,
 	0xc141,
-	0x0f82,
+	0x0f42,
 	0xfcaf,
 	0x1c00,
 	0x36c0,
@@ -14807,27 +14839,27 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0f6a,
+	0x0f2a,
 	0xfcaf,
 	0x1c00,
 	0x33c1,
-	0x0e56,
+	0x0dee,
 	0xff4f,
 	0x700c,
-	0x0f1a,
+	0x0eda,
 	0xfcaf,
 	0x712c,
 	0x40c3,
 	0x000f,
 	0x4240,
-	0x0d56,
+	0x0fca,
 	0xfe2f,
 	0x702c,
 	0x40e1,
-	0x0e6e,
+	0x0e2e,
 	0xfcaf,
 	0xd9ff,
-	0x0e8e,
+	0x0e26,
 	0xff4f,
 	0x8e00,
 	0x702c,
@@ -14838,7 +14870,7 @@ u16 imem_1d[] = {
 	0xc541,
 	0xc042,
 	0xd8ff,
-	0x0f2a,
+	0x0eea,
 	0xfcaf,
 	0x1c00,
 	0x36c0,
@@ -14850,7 +14882,7 @@ u16 imem_1d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0f12,
+	0x0ed2,
 	0xfcaf,
 	0x1c00,
 	0x3441,
@@ -14862,16 +14894,16 @@ u16 imem_1d[] = {
 	0xdb10,
 	0xc542,
 	0xc541,
-	0x0efa,
+	0x0eba,
 	0xfcaf,
 	0xc540,
-	0x0dea,
+	0x0d82,
 	0xff4f,
 	0x700c,
-	0x0eae,
+	0x0e6e,
 	0xfcaf,
 	0x712c,
-	0x0c06,
+	0x0e96,
 	0xfd0f,
 	0xc0ac,
 	0x1404,
@@ -14941,8 +14973,8 @@ u16 imem_1d[] = {
 	0x09ff,
 	0x8031,
 	0x781b,
-	0x0e9e,
-	0xfcef,
+	0x092e,
+	0xfd2f,
 	0x780f,
 	0x40c3,
 	0x8000,
@@ -15001,8 +15033,8 @@ u16 imem_1d[] = {
 	0x0d53,
 	0x90b4,
 	0x40c1,
-	0x0e26,
-	0xfcef,
+	0x08b6,
+	0xfd2f,
 	0x730c,
 	0xc0a9,
 	0x1404,
@@ -15043,7 +15075,7 @@ u16 imem_1d[] = {
 	0x0df9,
 	0x93a5,
 	0x706c,
-	0x0c7e,
+	0x0ef2,
 	0xfe4f,
 	0xc6c6,
 	0xc2e2,
@@ -15071,7 +15103,7 @@ u16 imem_1d[] = {
 	0x78a5,
 	0xb060,
 	0x700c,
-	0x0d1a,
+	0x0cda,
 	0xfcaf,
 	0x712c,
 	0xc6c2,
@@ -15113,7 +15145,7 @@ u16 imem_1d[] = {
 	0xb99f,
 	0xb100,
 	0xf003,
-	0x0ab6,
+	0x0d2a,
 	0xfe0f,
 	0x71a5,
 	0x2e45,
@@ -15250,17 +15282,17 @@ u16 imem_1d[] = {
 	0x2242,
 	0x030e,
 	0x40c1,
-	0x0f06,
+	0x0e9e,
 	0xff2f,
 	0xd90d,
 	0x40c1,
 	0xd90d,
-	0x0cbe,
+	0x0f7e,
 	0xfdef,
 	0xda40,
 	0x40c1,
 	0xd90d,
-	0x0e8e,
+	0x0e4e,
 	0xfcaf,
 	0xda7f,
 	0xdfff,
@@ -15273,7 +15305,7 @@ u16 imem_1d[] = {
 	0xc740,
 	0x40c1,
 	0xd90d,
-	0x0c9a,
+	0x0f5a,
 	0xfdef,
 	0xda80,
 	0x40c1,
@@ -15286,7 +15318,7 @@ u16 imem_1d[] = {
 	0xffef,
 	0xc740,
 	0x40c1,
-	0x0abe,
+	0x0a56,
 	0xff2f,
 	0xd90d,
 	0x7487,
@@ -15300,8 +15332,8 @@ u16 imem_1d[] = {
 	0x2482,
 	0x3403,
 	0x702c,
-	0x0f22,
-	0xfcaf,
+	0x09b2,
+	0xfcef,
 	0x4508,
 	0xc042,
 	0x1600,
@@ -15312,8 +15344,8 @@ u16 imem_1d[] = {
 	0x0020,
 	0xc041,
 	0x40a1,
-	0x0e0e,
-	0xfd2f,
+	0x089e,
+	0xfd6f,
 	0x2455,
 	0x3bc1,
 	0x71ed,
@@ -15329,8 +15361,8 @@ u16 imem_1d[] = {
 	0x0100,
 	0x200f,
 	0x0340,
-	0x0d7e,
-	0xfd6f,
+	0x0802,
+	0xfdaf,
 	0x780f,
 	0x702c,
 	0x40c3,
@@ -15383,17 +15415,17 @@ u16 imem_1d[] = {
 	0x41a1,
 	0x42a1,
 	0x43a1,
-	0x098e,
+	0x0c1e,
 	0xfd6f,
 	0xc540,
 	0xd80f,
-	0x0e2a,
-	0xfcaf,
+	0x08ba,
+	0xfcef,
 	0xd90f,
 	0x40c3,
 	0x0000,
 	0x0f00,
-	0x0e82,
+	0x0e1a,
 	0xff2f,
 	0x712c,
 	0x46cb,
@@ -15412,7 +15444,7 @@ u16 imem_1d[] = {
 	0x96dc,
 	0x1e5e,
 	0x93dc,
-	0x0a6e,
+	0x0a2e,
 	0xfcaf,
 	0x1e57,
 	0x93dc,
@@ -15420,19 +15452,19 @@ u16 imem_1d[] = {
 	0x702c,
 	0x704c,
 	0x4363,
-	0x0942,
+	0x0bd2,
 	0xfd6f,
 	0x1c00,
 	0x36c0,
 	0x740c,
-	0x0a56,
+	0x0a16,
 	0xfcaf,
 	0x712c,
 	0xd80f,
 	0x41a1,
 	0x42a1,
 	0x43a1,
-	0x092a,
+	0x0bba,
 	0xfd6f,
 	0xc540,
 	0x700c,
@@ -15450,11 +15482,11 @@ u16 imem_1d[] = {
 	0x40c3,
 	0x0000,
 	0x0f00,
-	0x0e0e,
+	0x0da6,
 	0xff2f,
 	0x732c,
 	0xd830,
-	0x0a1a,
+	0x09da,
 	0xfcaf,
 	0x712c,
 	0xc001,
@@ -15525,26 +15557,26 @@ u16 imem_1d[] = {
 	0x9003,
 	0xfe64,
 	0xd830,
-	0x098e,
+	0x094e,
 	0xfcaf,
 	0x712c,
 	0xd80f,
 	0x702c,
 	0x704c,
 	0x4363,
-	0x0862,
+	0x0af2,
 	0xfd6f,
 	0x1c00,
 	0x36c0,
 	0x740c,
-	0x0976,
+	0x0936,
 	0xfcaf,
 	0x712c,
 	0xd80f,
 	0x41a1,
 	0x42a1,
 	0x43a1,
-	0x084a,
+	0x0ada,
 	0xfd6f,
 	0xc540,
 	0x40c3,
@@ -15552,7 +15584,7 @@ u16 imem_1d[] = {
 	0x0f00,
 	0x712c,
 	0xb6e0,
-	0x0d42,
+	0x0cda,
 	0xff2f,
 	0xb6e1,
 	0xd820,
@@ -15565,7 +15597,7 @@ u16 imem_1d[] = {
 	0x0844,
 	0x1e57,
 	0x901c,
-	0x093e,
+	0x08fe,
 	0xfcaf,
 	0xd830,
 	0x40c3,
@@ -15723,12 +15755,12 @@ u16 imem_1d[] = {
 	0x4528,
 	0x1e5e,
 	0x905c,
-	0x0bee,
+	0x0b86,
 	0xff2f,
 	0x1e57,
 	0x905c,
-	0x0f26,
-	0xfe0f,
+	0x099a,
+	0xfe4f,
 	0x40c3,
 	0x9003,
 	0xfe64,
@@ -15747,7 +15779,7 @@ u16 imem_1d[] = {
 	0x1882,
 	0x03dc,
 	0xd80f,
-	0x0b5a,
+	0x0dea,
 	0xfcaf,
 	0xd90f,
 	0x41c3,
@@ -15756,12 +15788,12 @@ u16 imem_1d[] = {
 	0xd80f,
 	0x704c,
 	0x4320,
-	0x0ea2,
-	0xfd2f,
+	0x0932,
+	0xfd6f,
 	0xc740,
 	0xf03b,
 	0x700c,
-	0x0fb6,
+	0x0f76,
 	0xfc6f,
 	0x712c,
 	0x40c3,
@@ -15810,11 +15842,11 @@ u16 imem_1d[] = {
 	0x09bf,
 	0x80a5,
 	0xd80f,
-	0x0ada,
+	0x0d6a,
 	0xfcaf,
 	0xd90f,
-	0x0e7a,
-	0xfe0f,
+	0x08ee,
+	0xfe4f,
 	0x71e5,
 	0x41a1,
 	0x0f91,
@@ -15825,7 +15857,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x0156,
 	0x0000,
-	0x0df2,
+	0x0db2,
 	0xfc0f,
 	0x1e00,
 	0x7005,
@@ -15843,7 +15875,7 @@ u16 imem_1d[] = {
 	0x41c3,
 	0x8000,
 	0x0597,
-	0x0cfe,
+	0x0cbe,
 	0xfc2f,
 	0xda8a,
 	0xc080,
@@ -15851,7 +15883,7 @@ u16 imem_1d[] = {
 	0xffef,
 	0xd98a,
 	0xd80f,
-	0x0a8a,
+	0x0d1a,
 	0xfcaf,
 	0xd90f,
 	0x2480,
@@ -15876,14 +15908,14 @@ u16 imem_1d[] = {
 	0x0000,
 	0xc046,
 	0xc005,
-	0x0aa2,
+	0x0d32,
 	0xfcaf,
 	0x702c,
 	0x1600,
 	0x708d,
 	0x8000,
 	0x0004,
-	0x0d2a,
+	0x0fba,
 	0xfd2f,
 	0x4608,
 	0x208c,
@@ -15892,7 +15924,7 @@ u16 imem_1d[] = {
 	0xd8fe,
 	0xc044,
 	0xf707,
-	0x0d16,
+	0x0fa6,
 	0xfd0f,
 	0x2054,
 	0x0880,
@@ -15903,7 +15935,7 @@ u16 imem_1d[] = {
 	0x0000,
 	0x710c,
 	0xc18d,
-	0x0d12,
+	0x0fd2,
 	0xfdaf,
 	0xc54b,
 	0x0f76,
@@ -15916,7 +15948,7 @@ u16 imem_1d[] = {
 	0x1f84,
 	0x0000,
 	0x8000,
-	0x0d1e,
+	0x0fae,
 	0xfcaf,
 	0xb512,
 	0x1600,
@@ -15950,7 +15982,7 @@ u16 imem_1d[] = {
 	0x16e9,
 	0x1700,
 	0xc048,
-	0x0da2,
+	0x0d62,
 	0xfc6f,
 	0x208a,
 	0x0004,
@@ -15962,7 +15994,7 @@ u16 imem_1d[] = {
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0e62,
+	0x0e22,
 	0xfc6f,
 	0xc740,
 	0xc006,
@@ -15982,15 +16014,15 @@ u16 imem_1d[] = {
 	0xc304,
 	0xd980,
 	0xd8ff,
-	0x0e3a,
+	0x0dfa,
 	0xfc6f,
 	0xb990,
 	0x700c,
-	0x0df2,
+	0x0db2,
 	0xfc6f,
 	0x712c,
 	0xc005,
-	0x09de,
+	0x09ae,
 	0xffaf,
 	0x714c,
 	0x16f0,
@@ -16020,13 +16052,13 @@ u16 imem_1d[] = {
 	0x9004,
 	0xc109,
 	0x710c,
-	0x0c0a,
+	0x0e9a,
 	0xfd2f,
 	0xb100,
 	0xc047,
 	0x208a,
 	0x0004,
-	0x0d0a,
+	0x0cca,
 	0xfc6f,
 	0x712c,
 	0x1200,
@@ -16037,11 +16069,11 @@ u16 imem_1d[] = {
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0dce,
+	0x0d8e,
 	0xfc6f,
 	0xc740,
-	0x0812,
-	0xfcaf,
+	0x0fd2,
+	0xfc6f,
 	0xd8ff,
 	0xc006,
 	0xc304,
@@ -16053,7 +16085,7 @@ u16 imem_1d[] = {
 	0xd8ff,
 	0xc743,
 	0xc741,
-	0x0dae,
+	0x0d6e,
 	0xfc6f,
 	0xc740,
 	0xc007,
@@ -16068,7 +16100,7 @@ u16 imem_1d[] = {
 	0x742c,
 	0xc742,
 	0xc741,
-	0x0d8e,
+	0x0d4e,
 	0xfc6f,
 	0xc740,
 	0x710c,
@@ -16080,7 +16112,7 @@ u16 imem_1d[] = {
 	0x746c,
 	0xc742,
 	0xc741,
-	0x0d76,
+	0x0d36,
 	0xfc6f,
 	0xc740,
 	0xd8ff,
@@ -16090,17 +16122,17 @@ u16 imem_1d[] = {
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0d62,
+	0x0d22,
 	0xfc6f,
 	0xc740,
-	0x0f8e,
+	0x0f4e,
 	0xfc6f,
 	0xd8ff,
 	0xf838,
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0d4e,
+	0x0d0e,
 	0xfc6f,
 	0xc740,
 	0x40c3,
@@ -16108,7 +16140,7 @@ u16 imem_1d[] = {
 	0x6210,
 	0xb501,
 	0x730c,
-	0x0cfe,
+	0x0cbe,
 	0xfc6f,
 	0x712c,
 	0x208a,
@@ -16124,18 +16156,18 @@ u16 imem_1d[] = {
 	0x0606,
 	0xf002,
 	0xd833,
-	0x0cde,
+	0x0c9e,
 	0xfc6f,
 	0x712c,
 	0xc008,
 	0x704c,
 	0x1ef2,
 	0x9004,
-	0x08c6,
+	0x0896,
 	0xffaf,
 	0xc005,
 	0x700c,
-	0x0b42,
+	0x0e02,
 	0xfdaf,
 	0xc18d,
 	0x70ed,
@@ -16143,7 +16175,7 @@ u16 imem_1d[] = {
 	0x0004,
 	0x712c,
 	0xb5e0,
-	0x0c22,
+	0x0be2,
 	0xfc6f,
 	0xb5f2,
 	0x1200,
@@ -16154,7 +16186,7 @@ u16 imem_1d[] = {
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0ce2,
+	0x0ca2,
 	0xfc6f,
 	0xc740,
 	0xc006,
@@ -16166,18 +16198,18 @@ u16 imem_1d[] = {
 	0x724c,
 	0xc743,
 	0xc741,
-	0x0cca,
+	0x0c8a,
 	0xfc6f,
 	0xc740,
 	0xf814,
 	0xc743,
 	0xc742,
 	0xc741,
-	0x0cbe,
+	0x0c7e,
 	0xfc6f,
 	0xc740,
 	0x700c,
-	0x0c76,
+	0x0c36,
 	0xfc6f,
 	0x712c,
 	0xc00c,
@@ -16187,11 +16219,11 @@ u16 imem_1d[] = {
 	0xc009,
 	0xb0e0,
 	0xb5e1,
-	0x0b0e,
+	0x0aa6,
 	0xfeef,
 	0xc00a,
 	0xc005,
-	0x082e,
+	0x0abe,
 	0xfcaf,
 	0x702c,
 	0xc10b,
@@ -16203,9 +16235,9 @@ u16 imem_1d[] = {
 	0x0f96,
 	0xffaf,
 	0x706c,
-	0x0b6e,
+	0x0de2,
 	0xfe0f,
-	0x0c02,
+	0x0b9a,
 	0xfecf,
 	0xc7c6,
 	0xd8ff,
@@ -16384,41 +16416,9 @@ u16 imem_1d[] = {
 	0x0000,
 	0x0000,
 	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
 };
 
-size_t imem_1d_size = sizeof(imem_1d) / sizeof(u16);
+size_t imem_1d_size = ARRAY_SIZE(imem_1d);
 
 u16 imem_2d[] = {
 	0x0204,
@@ -16737,7 +16737,7 @@ u16 imem_2d[] = {
 	0xc085,
 	0xc040,
 	0x4020,
-	0x0b9a,
+	0x0bca,
 	0x0260,
 	0xc185,
 	0x41c3,
@@ -16747,11 +16747,11 @@ u16 imem_2d[] = {
 	0x0020,
 	0xd8ff,
 	0x70ad,
-	0x0a3e,
+	0x0a6e,
 	0x0220,
 	0x1a10,
 	0x3003,
-	0x0ade,
+	0x0b0e,
 	0x0260,
 	0xd8ff,
 	0x25ab,
@@ -16852,7 +16852,7 @@ u16 imem_2d[] = {
 	0x4200,
 	0x750c,
 	0x41c3,
-	0x0186,
+	0x0188,
 	0x0001,
 	0x0e92,
 	0x0020,
@@ -16909,7 +16909,7 @@ u16 imem_2d[] = {
 	0xc242,
 	0x750c,
 	0x41c3,
-	0x0187,
+	0x0189,
 	0x000b,
 	0xc445,
 	0xc644,
@@ -16983,7 +16983,7 @@ u16 imem_2d[] = {
 	0xb220,
 	0x0ceb,
 	0x9005,
-	0x088e,
+	0x08ca,
 	0x01c0,
 	0x208a,
 	0x021a,
@@ -17709,7 +17709,7 @@ u16 imem_2d[] = {
 	0x080f,
 	0x0064,
 	0x4040,
-	0x0c02,
+	0x0c32,
 	0x0220,
 	0xc100,
 	0x7487,
@@ -17746,7 +17746,7 @@ u16 imem_2d[] = {
 	0x235a,
 	0x1c80,
 	0x6038,
-	0x0ab2,
+	0x0aee,
 	0x01a0,
 	0x60f8,
 	0x7164,
@@ -17769,7 +17769,7 @@ u16 imem_2d[] = {
 	0x0060,
 	0x4508,
 	0x4100,
-	0x0a72,
+	0x0aa2,
 	0x01e0,
 	0x40a1,
 	0x236f,
@@ -17778,7 +17778,7 @@ u16 imem_2d[] = {
 	0x3080,
 	0xe809,
 	0x41c3,
-	0x0145,
+	0x0147,
 	0x0000,
 	0x0f56,
 	0xffef,
@@ -17909,7 +17909,7 @@ u16 imem_2d[] = {
 	0x0b9a,
 	0xffef,
 	0xd8ff,
-	0x0bde,
+	0x0c0e,
 	0x01c0,
 	0xd896,
 	0x0902,
@@ -17964,14 +17964,14 @@ u16 imem_2d[] = {
 	0x228a,
 	0x0dff,
 	0x776c,
-	0x08c6,
+	0x08f6,
 	0x02a0,
 	0xc540,
 	0x774c,
 	0x40e1,
 	0x712c,
 	0x4340,
-	0x08b6,
+	0x08e6,
 	0x02a0,
 	0xc540,
 	0xc0a4,
@@ -17989,14 +17989,14 @@ u16 imem_2d[] = {
 	0xffef,
 	0x1a10,
 	0x3003,
-	0x088a,
+	0x08ba,
 	0x01c0,
 	0x254f,
 	0x1401,
 	0x0daa,
 	0xffef,
 	0xd8ff,
-	0x0926,
+	0x0956,
 	0x0220,
 	0xd8ff,
 	0x26ab,
@@ -18264,14 +18264,14 @@ u16 imem_2d[] = {
 	0x0120,
 	0xdab4,
 	0x41c3,
-	0x018f,
+	0x0191,
 	0x0000,
 	0x0b8a,
 	0xffef,
 	0x750c,
 	0xd840,
 	0xc180,
-	0x0c22,
+	0x0c5e,
 	0x0160,
 	0xda09,
 	0x700c,
@@ -18282,7 +18282,7 @@ u16 imem_2d[] = {
 	0x726c,
 	0xd830,
 	0xc180,
-	0x0c0e,
+	0x0c4a,
 	0x0160,
 	0xda09,
 	0x710c,
@@ -18634,7 +18634,7 @@ u16 imem_2d[] = {
 	0x20ca,
 	0x03e2,
 	0x4358,
-	0x09fa,
+	0x0a36,
 	0x0160,
 	0x782b,
 	0xf469,
@@ -18665,13 +18665,13 @@ u16 imem_2d[] = {
 	0x4163,
 	0x714c,
 	0xdb80,
-	0x0cfa,
+	0x0d36,
 	0x0160,
 	0x1c00,
 	0x3001,
 	0xf005,
 	0x4163,
-	0x0f4a,
+	0x0f86,
 	0x0160,
 	0x704c,
 	0x40c3,
@@ -18986,7 +18986,7 @@ u16 imem_2d[] = {
 	0x2138,
 	0x06c0,
 	0x41c3,
-	0x0057,
+	0x0058,
 	0x0001,
 	0x0e36,
 	0xff6f,
@@ -19031,7 +19031,7 @@ u16 imem_2d[] = {
 	0xc006,
 	0xc342,
 	0x41c3,
-	0x0059,
+	0x005b,
 	0x0005,
 	0xc040,
 	0x740c,
@@ -19103,7 +19103,7 @@ u16 imem_2d[] = {
 	0x43e1,
 	0xc006,
 	0x41c3,
-	0x005a,
+	0x005c,
 	0x0003,
 	0xc040,
 	0x0cfa,
@@ -19137,7 +19137,7 @@ u16 imem_2d[] = {
 	0x740c,
 	0xc140,
 	0x41c3,
-	0x005b,
+	0x005d,
 	0x0003,
 	0x0cb6,
 	0xffaf,
@@ -19574,7 +19574,7 @@ u16 imem_2d[] = {
 	0x0956,
 	0xffaf,
 	0x740c,
-	0x0aa2,
+	0x0ade,
 	0x0100,
 	0x1404,
 	0x341b,
@@ -20075,7 +20075,7 @@ u16 imem_2d[] = {
 	0xff2f,
 	0xda2a,
 	0xc080,
-	0x0972,
+	0x09a2,
 	0x0220,
 	0xd92a,
 	0xdd25,
@@ -20116,13 +20116,13 @@ u16 imem_2d[] = {
 	0x0031,
 	0x781d,
 	0xb8c1,
-	0x0b6e,
+	0x0b9e,
 	0x0160,
 	0x1a08,
 	0x3002,
 	0x081e,
 	0x0000,
-	0x0856,
+	0x0892,
 	0x0100,
 	0x164c,
 	0x9100,
@@ -20417,7 +20417,7 @@ u16 imem_2d[] = {
 	0x0a00,
 	0x0cda,
 	0xff0f,
-	0x089e,
+	0x08ce,
 	0x0140,
 	0x8e01,
 	0x71ad,
@@ -20519,7 +20519,7 @@ u16 imem_2d[] = {
 	0xb863,
 	0x0811,
 	0x0095,
-	0x0f7a,
+	0x0faa,
 	0x0100,
 	0x700c,
 	0x0c9e,
@@ -20538,7 +20538,7 @@ u16 imem_2d[] = {
 	0x0a00,
 	0x0bea,
 	0xff0f,
-	0x0fae,
+	0x0fde,
 	0x0100,
 	0x8e01,
 	0x702c,
@@ -20632,7 +20632,7 @@ u16 imem_2d[] = {
 	0x0c22,
 	0xff2f,
 	0xc540,
-	0x0e9a,
+	0x0eca,
 	0x0100,
 	0xf07f,
 	0x700c,
@@ -20958,7 +20958,7 @@ u16 imem_2d[] = {
 	0x4020,
 	0x732c,
 	0xc341,
-	0x0ada,
+	0x0b16,
 	0x00e0,
 	0x4358,
 	0x710c,
@@ -21003,7 +21003,7 @@ u16 imem_2d[] = {
 	0x3fc1,
 	0x60f8,
 	0x60b9,
-	0x0cba,
+	0x0cea,
 	0x01a0,
 	0x202f,
 	0x06c7,
@@ -21013,7 +21013,7 @@ u16 imem_2d[] = {
 	0xffaf,
 	0x4300,
 	0x4100,
-	0x091a,
+	0x094a,
 	0x0120,
 	0x4060,
 	0x1600,
@@ -21040,7 +21040,7 @@ u16 imem_2d[] = {
 	0x900e,
 	0x0022,
 	0x40e1,
-	0x0f62,
+	0x0f9e,
 	0x00a0,
 	0x732c,
 	0xc0a2,
@@ -21389,7 +21389,7 @@ u16 imem_2d[] = {
 	0x1212,
 	0x3081,
 	0xc213,
-	0x09ba,
+	0x09ea,
 	0x0120,
 	0xc081,
 	0xc812,
@@ -21408,7 +21408,7 @@ u16 imem_2d[] = {
 	0x3082,
 	0xc040,
 	0x41c3,
-	0x0069,
+	0x006b,
 	0x0003,
 	0x0afa,
 	0xff2f,
@@ -21420,12 +21420,12 @@ u16 imem_2d[] = {
 	0x3840,
 	0x722c,
 	0x42a1,
-	0x08a6,
+	0x08d6,
 	0x01a0,
 	0x4363,
 	0xc012,
 	0x712c,
-	0x0dde,
+	0x0e0e,
 	0x0120,
 	0xc281,
 	0x71c5,
@@ -21510,7 +21510,7 @@ u16 imem_2d[] = {
 	0x1212,
 	0x3081,
 	0xc081,
-	0x08ca,
+	0x08fa,
 	0x0120,
 	0x704c,
 	0xc812,
@@ -21529,7 +21529,7 @@ u16 imem_2d[] = {
 	0x3082,
 	0xc040,
 	0x41c3,
-	0x0070,
+	0x0072,
 	0x0003,
 	0x0a06,
 	0xff2f,
@@ -21541,7 +21541,7 @@ u16 imem_2d[] = {
 	0x2454,
 	0x3840,
 	0x712c,
-	0x0fb2,
+	0x0fe2,
 	0x0160,
 	0x42a1,
 	0xc016,
@@ -21701,7 +21701,7 @@ u16 imem_2d[] = {
 	0x42c3,
 	0x0040,
 	0x5800,
-	0x0b92,
+	0x0bc2,
 	0x01a0,
 	0x706c,
 	0x0b1e,
@@ -21917,7 +21917,7 @@ u16 imem_2d[] = {
 	0xff6f,
 	0x4508,
 	0x4100,
-	0x0a0a,
+	0x0a3a,
 	0x00e0,
 	0x40a1,
 	0x261a,
@@ -22241,7 +22241,7 @@ u16 imem_2d[] = {
 	0x3082,
 	0xc040,
 	0x41c3,
-	0x00eb,
+	0x00ed,
 	0x0003,
 	0x0c76,
 	0xfeef,
@@ -22269,7 +22269,7 @@ u16 imem_2d[] = {
 	0xc142,
 	0xd80a,
 	0x41c3,
-	0x00ed,
+	0x00ef,
 	0x0006,
 	0xc441,
 	0x0c3e,
@@ -22278,7 +22278,7 @@ u16 imem_2d[] = {
 	0x8f08,
 	0xe808,
 	0x41c3,
-	0x00f2,
+	0x00f4,
 	0x0000,
 	0x0c2e,
 	0xfeef,
@@ -22299,7 +22299,7 @@ u16 imem_2d[] = {
 	0xc141,
 	0xc042,
 	0x41c3,
-	0x00f3,
+	0x00f5,
 	0x0005,
 	0x0c02,
 	0xfeef,
@@ -22315,7 +22315,7 @@ u16 imem_2d[] = {
 	0xc141,
 	0xd80a,
 	0x41c3,
-	0x00f4,
+	0x00f6,
 	0x0005,
 	0x0be2,
 	0xfeef,
@@ -22332,7 +22332,7 @@ u16 imem_2d[] = {
 	0xc042,
 	0xd80a,
 	0x41c3,
-	0x00f5,
+	0x00f7,
 	0x0005,
 	0x0bc2,
 	0xfeef,
@@ -22342,7 +22342,7 @@ u16 imem_2d[] = {
 	0xc141,
 	0xd80a,
 	0x41c3,
-	0x00f6,
+	0x00f8,
 	0x0005,
 	0x0bae,
 	0xfeef,
@@ -22356,7 +22356,7 @@ u16 imem_2d[] = {
 	0xc042,
 	0xd80a,
 	0x41c3,
-	0x00f7,
+	0x00f9,
 	0x0005,
 	0x0b92,
 	0xfeef,
@@ -22366,7 +22366,7 @@ u16 imem_2d[] = {
 	0xc141,
 	0xd80a,
 	0x41c3,
-	0x00f8,
+	0x00fa,
 	0x0005,
 	0x0b7e,
 	0xfeef,
@@ -22390,7 +22390,7 @@ u16 imem_2d[] = {
 	0xc042,
 	0xd80a,
 	0x41c3,
-	0x00f9,
+	0x00fb,
 	0x0005,
 	0x0b4e,
 	0xfeef,
@@ -22406,7 +22406,7 @@ u16 imem_2d[] = {
 	0xc141,
 	0xd80a,
 	0x41c3,
-	0x00fa,
+	0x00fc,
 	0x0005,
 	0x0b2e,
 	0xfeef,
@@ -22495,11 +22495,11 @@ u16 imem_2d[] = {
 	0x1cfc,
 	0xb6c8,
 	0xc1a5,
-	0xde07,
+	0xde12,
 	0xbe8c,
 	0x40c3,
 	0x0000,
-	0x9f38,
+	0x3a44,
 	0x45cb,
 	0x9012,
 	0x0328,
@@ -22508,17 +22508,17 @@ u16 imem_2d[] = {
 	0x8000,
 	0x0002,
 	0xb500,
-	0xd858,
+	0xd875,
 	0xb501,
 	0x41c3,
-	0x014c,
+	0x014e,
 	0x0000,
 	0x0a5a,
 	0xfeef,
 	0xd80a,
 	0xd80a,
 	0x41c3,
-	0x0150,
+	0x0152,
 	0x0001,
 	0x0a4e,
 	0xfeef,
@@ -22533,7 +22533,7 @@ u16 imem_2d[] = {
 	0x2038,
 	0x0040,
 	0x41c3,
-	0x0151,
+	0x0153,
 	0x0000,
 	0x0a7e,
 	0xfe8f,
@@ -22568,7 +22568,7 @@ u16 imem_2d[] = {
 	0x0f80,
 	0x9002,
 	0x0040,
-	0x0d26,
+	0x0d56,
 	0x00a0,
 	0x9000,
 	0xc000,
@@ -22670,10 +22670,10 @@ u16 imem_2d[] = {
 	0x5034,
 	0xc001,
 	0x7825,
-	0x0cfe,
+	0x0d2e,
 	0x00a0,
 	0x90c0,
-	0x0c8a,
+	0x0cba,
 	0x00a0,
 	0x4063,
 	0xc001,
@@ -22846,7 +22846,7 @@ u16 imem_2d[] = {
 	0x0020,
 	0xd80d,
 	0x700c,
-	0x0cd6,
+	0x0d06,
 	0x0140,
 	0x0d62,
 	0xfe8f,
@@ -22907,7 +22907,7 @@ u16 imem_2d[] = {
 	0x710c,
 	0xf20a,
 	0xf877,
-	0x0c9a,
+	0x0cca,
 	0x00e0,
 	0x1e01,
 	0x1003,
@@ -22986,7 +22986,7 @@ u16 imem_2d[] = {
 	0x710c,
 	0x97e0,
 	0x712c,
-	0x0802,
+	0x083e,
 	0x0060,
 	0x4318,
 	0x2505,
@@ -23007,7 +23007,7 @@ u16 imem_2d[] = {
 	0x25ca,
 	0x1001,
 	0x4063,
-	0x0d4e,
+	0x0d8a,
 	0x0020,
 	0x41a1,
 	0x1600,
@@ -23019,24 +23019,24 @@ u16 imem_2d[] = {
 	0xbf82,
 	0xc004,
 	0x41c3,
-	0x008f,
+	0x0091,
 	0x0000,
 	0xb0e0,
 	0xf838,
-	0x0d2e,
+	0x0d6a,
 	0x0020,
 	0xdb40,
 	0x41c3,
-	0x0090,
+	0x0092,
 	0x0000,
 	0xf834,
-	0x0d22,
+	0x0d5e,
 	0x0020,
 	0xdb30,
 	0x4063,
 	0x41a1,
 	0x724c,
-	0x0d16,
+	0x0d52,
 	0x0020,
 	0x706c,
 	0xf01b,
@@ -23124,9 +23124,9 @@ u16 imem_2d[] = {
 	0x0a4e,
 	0xfeef,
 	0x700c,
-	0x086e,
+	0x089e,
 	0x0080,
-	0x0912,
+	0x0942,
 	0x00e0,
 	0xd807,
 	0x23ab,
@@ -23196,7 +23196,7 @@ u16 imem_2d[] = {
 	0x0012,
 	0x218c,
 	0x8203,
-	0x0884,
+	0x08b4,
 	0x00ce,
 	0x080e,
 	0x0000,
@@ -23305,26 +23305,28 @@ u16 imem_2d[] = {
 	0x0f42,
 	0xfe6f,
 	0xc540,
-	0x7fcf,
-	0xf8b8,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0x746c,
 	0xc543,
-	0xc742,
+	0xc542,
 	0xc541,
-	0x0f32,
+	0x0f2e,
 	0xfe6f,
 	0xc540,
-	0xbec1,
-	0xc645,
-	0xc005,
-	0x702c,
-	0x764c,
+	0x2653,
+	0x1040,
+	0xc045,
 	0xc042,
 	0xd8ff,
+	0x702c,
+	0x764c,
 	0x746c,
 	0xc543,
 	0x1c04,
 	0x36c0,
-	0x0f16,
+	0x0f12,
 	0xfe6f,
 	0xc540,
 	0xc005,
@@ -23336,12 +23338,30 @@ u16 imem_2d[] = {
 	0xd8ff,
 	0xdb28,
 	0xc543,
-	0x0efe,
+	0x0efa,
 	0xfe6f,
 	0xc540,
-	0x0942,
+	0x093e,
 	0xfeaf,
 	0xd8ff,
+	0x7fcf,
+	0xf8b3,
+	0xc543,
+	0xc742,
+	0xc541,
+	0x0ee2,
+	0xfe6f,
+	0xc540,
+	0xd8ff,
+	0x702c,
+	0x754c,
+	0xdb28,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0ece,
+	0xfe6f,
+	0xc540,
 	0xc104,
 	0xc007,
 	0x46cb,
@@ -23359,65 +23379,65 @@ u16 imem_2d[] = {
 	0x1c0c,
 	0x3441,
 	0xf068,
-	0xf8a0,
+	0xf8a5,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0ec6,
+	0x0e9e,
 	0xfe6f,
 	0xc540,
-	0xf89a,
+	0xf89f,
 	0xc543,
 	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0eb6,
+	0x0e8e,
 	0xfe6f,
 	0xc540,
-	0xf893,
+	0xf898,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0ea6,
+	0x0e7e,
 	0xfe6f,
 	0xc540,
-	0xf895,
+	0xf89a,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0e9a,
+	0x0e72,
 	0xfe6f,
 	0xc540,
 	0x750c,
 	0xc041,
-	0xf88d,
+	0xf892,
 	0xc543,
 	0xc742,
-	0x0e8a,
+	0x0e62,
 	0xfe6f,
 	0xc540,
-	0xf887,
+	0xf88c,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0e7a,
+	0x0e52,
 	0xfe6f,
 	0xc540,
 	0x750c,
 	0xc043,
-	0xf882,
+	0xf887,
 	0xc742,
 	0xc541,
-	0x0e6a,
+	0x0e42,
 	0xfe6f,
 	0xc540,
-	0xf885,
+	0xf88a,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0e5a,
+	0x0e32,
 	0xfe6f,
 	0xc540,
 	0xc005,
@@ -23429,22 +23449,22 @@ u16 imem_2d[] = {
 	0xc543,
 	0x1c04,
 	0x36c0,
-	0x0e42,
+	0x0e1a,
 	0xfe6f,
 	0xc540,
-	0xf876,
+	0xf87b,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0e32,
+	0x0e0a,
 	0xfe6f,
 	0xc540,
-	0xf878,
+	0xf87d,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0e26,
+	0x0dfe,
 	0xfe6f,
 	0xc540,
 	0xc005,
@@ -23456,15 +23476,15 @@ u16 imem_2d[] = {
 	0xd8ff,
 	0x746c,
 	0xc543,
-	0x0e0e,
+	0x0de6,
 	0xfe6f,
 	0xc540,
 	0x1c0c,
 	0x36c0,
-	0xf867,
+	0xf86c,
 	0xc742,
 	0xc541,
-	0x0dfe,
+	0x0dd6,
 	0xfe6f,
 	0xc540,
 	0xc004,
@@ -23478,7 +23498,7 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0de2,
+	0x0dba,
 	0xfe6f,
 	0xc540,
 	0xc006,
@@ -23495,61 +23515,61 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0dbe,
+	0x0d96,
 	0xfe6f,
 	0xc540,
-	0xf858,
+	0xf85d,
 	0xc543,
 	0xc742,
 	0x1c04,
 	0x36c0,
-	0x0dae,
+	0x0d86,
 	0xfe6f,
 	0xc540,
-	0xf84e,
+	0xf853,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0d9e,
+	0x0d76,
 	0xfe6f,
 	0xc540,
-	0xf847,
+	0xf84c,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0d92,
+	0x0d6a,
 	0xfe6f,
 	0xc540,
 	0x750c,
 	0xc041,
-	0xf84b,
+	0xf850,
 	0xc543,
 	0xc742,
-	0x0d82,
+	0x0d5a,
 	0xfe6f,
 	0xc540,
-	0xf842,
+	0xf847,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0d72,
+	0x0d4a,
 	0xfe6f,
 	0xc540,
 	0x750c,
 	0xc043,
-	0xf83d,
+	0xf842,
 	0xc742,
 	0xc541,
-	0x0d62,
+	0x0d3a,
 	0xfe6f,
 	0xc540,
-	0xf837,
+	0xf83c,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0d52,
+	0x0d2a,
 	0xfe6f,
 	0xc540,
 	0xc005,
@@ -23561,22 +23581,22 @@ u16 imem_2d[] = {
 	0xc543,
 	0x1c04,
 	0x36c0,
-	0x0d3a,
+	0x0d12,
 	0xfe6f,
 	0xc540,
-	0xf831,
+	0xf836,
 	0x1c0c,
 	0x36c0,
 	0xc742,
 	0xc541,
-	0x0d2a,
+	0x0d02,
 	0xfe6f,
 	0xc540,
-	0xf82a,
+	0xf82f,
 	0xc543,
 	0xc742,
 	0xc541,
-	0x0d1e,
+	0x0cf6,
 	0xfe6f,
 	0xc540,
 	0xc005,
@@ -23588,7 +23608,7 @@ u16 imem_2d[] = {
 	0xd8ff,
 	0x746c,
 	0xc543,
-	0x0d06,
+	0x0cde,
 	0xfe6f,
 	0xc540,
 	0x1c0c,
@@ -23596,10 +23616,10 @@ u16 imem_2d[] = {
 	0xf003,
 	0x1c0c,
 	0x3441,
-	0xf821,
+	0xf826,
 	0xc742,
 	0xc541,
-	0x0cee,
+	0x0cc6,
 	0xfe6f,
 	0xc540,
 	0xc304,
@@ -23610,7 +23630,7 @@ u16 imem_2d[] = {
 	0xc143,
 	0xc142,
 	0xc141,
-	0x0cda,
+	0x0cb2,
 	0xfe6f,
 	0xc140,
 	0x702c,
@@ -23622,7 +23642,7 @@ u16 imem_2d[] = {
 	0x30c1,
 	0xc542,
 	0xc541,
-	0x0cc2,
+	0x0c9a,
 	0xfe6f,
 	0xc540,
 	0xd8ff,
@@ -23632,24 +23652,34 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0cae,
+	0x0c86,
 	0xfe6f,
 	0xc540,
-	0x0ed6,
-	0xfe6f,
-	0xd8ff,
 	0xc005,
-	0xd980,
+	0x702c,
 	0x764c,
 	0xc042,
 	0xd8ff,
-	0x746c,
+	0xdb2e,
 	0xc543,
 	0xc541,
-	0x0c92,
+	0x0c6e,
 	0xfe6f,
 	0x1c00,
 	0x3041,
+	0x0e96,
+	0xfe6f,
+	0xd8ff,
+	0xd8ff,
+	0xd980,
+	0x754c,
+	0x746c,
+	0xc543,
+	0xc542,
+	0xc541,
+	0x0c52,
+	0xfe6f,
+	0xc540,
 	0xc0a8,
 	0x1404,
 	0x341b,
@@ -23698,7 +23728,7 @@ u16 imem_2d[] = {
 	0x0000,
 	0x7f00,
 	0xda51,
-	0x0e86,
+	0x0e4a,
 	0xffaf,
 	0xc345,
 	0x40c3,
@@ -23734,13 +23764,13 @@ u16 imem_2d[] = {
 	0x7eaf,
 	0xc203,
 	0x40c1,
-	0x080e,
-	0xfeef,
+	0x0fd2,
+	0xfeaf,
 	0x712c,
 	0xc203,
 	0xc306,
 	0x710c,
-	0x0f96,
+	0x0f5a,
 	0xfeef,
 	0x41c1,
 	0xc103,
@@ -23763,10 +23793,10 @@ u16 imem_2d[] = {
 	0xc103,
 	0x40c1,
 	0x704c,
-	0x0d1e,
+	0x0ce2,
 	0xff4f,
 	0xc103,
-	0x0e6a,
+	0x0e5e,
 	0x0120,
 	0x40c1,
 	0x40c3,
@@ -23777,7 +23807,7 @@ u16 imem_2d[] = {
 	0x008b,
 	0xc003,
 	0x702c,
-	0x0ffe,
+	0x0fc2,
 	0xfe6f,
 	0xda08,
 	0x2340,
@@ -23825,7 +23855,7 @@ u16 imem_2d[] = {
 	0x262f,
 	0x3007,
 	0x40c1,
-	0x0bfa,
+	0x0bbe,
 	0xfeef,
 	0x712c,
 	0x8821,
@@ -23840,9 +23870,9 @@ u16 imem_2d[] = {
 	0x00b0,
 	0x740c,
 	0x41c3,
-	0x0071,
+	0x0073,
 	0x0000,
-	0x0ffa,
+	0x0fbe,
 	0xfe4f,
 	0x1600,
 	0x708f,
@@ -23867,9 +23897,9 @@ u16 imem_2d[] = {
 	0xc040,
 	0x740c,
 	0x41c3,
-	0x0073,
+	0x0075,
 	0x0005,
-	0x0fc2,
+	0x0f86,
 	0xfe6f,
 	0xc642,
 	0xc004,
@@ -23912,7 +23942,7 @@ u16 imem_2d[] = {
 	0x09ed,
 	0x8025,
 	0x70ad,
-	0x0bd2,
+	0x0b96,
 	0xfe8f,
 	0x2480,
 	0x3103,
@@ -24016,7 +24046,7 @@ u16 imem_2d[] = {
 	0x0b19,
 	0x10ee,
 	0x786f,
-	0x0a7e,
+	0x0a42,
 	0xfecf,
 	0x704c,
 	0xf004,
@@ -24072,11 +24102,11 @@ u16 imem_2d[] = {
 	0xc099,
 	0x702c,
 	0xda5a,
-	0x0b8a,
+	0x0b4e,
 	0xffaf,
 	0x4378,
 	0xc082,
-	0x0b82,
+	0x0b46,
 	0xffaf,
 	0xda5a,
 	0x0b0f,
@@ -24087,7 +24117,7 @@ u16 imem_2d[] = {
 	0x0020,
 	0x714c,
 	0xd80f,
-	0x0d56,
+	0x0d1a,
 	0xfe6f,
 	0xd90f,
 	0xca66,
@@ -24096,7 +24126,7 @@ u16 imem_2d[] = {
 	0x3071,
 	0xc182,
 	0xc000,
-	0x0c16,
+	0x0c0a,
 	0x00e0,
 	0x42a1,
 	0xf011,
@@ -24116,7 +24146,7 @@ u16 imem_2d[] = {
 	0x7124,
 	0x09eb,
 	0x8254,
-	0x08ca,
+	0x088e,
 	0xfe4f,
 	0x40c3,
 	0x8000,
@@ -24190,7 +24220,7 @@ u16 imem_2d[] = {
 	0x264a,
 	0x3000,
 	0xd80f,
-	0x0c8a,
+	0x0c4e,
 	0xfe6f,
 	0xd90f,
 	0xca15,
@@ -24226,7 +24256,7 @@ u16 imem_2d[] = {
 	0x9005,
 	0xe000,
 	0xd820,
-	0x0f02,
+	0x0ec6,
 	0xff6f,
 	0x1d00,
 	0x1045,
@@ -24260,7 +24290,7 @@ u16 imem_2d[] = {
 	0x7fe0,
 	0xa830,
 	0xc2e2,
-	0x0e4a,
+	0x0e0e,
 	0xfe8f,
 	0x256f,
 	0x1343,
@@ -24433,7 +24463,7 @@ u16 imem_2d[] = {
 	0x9008,
 	0x01e0,
 	0x712c,
-	0x09c6,
+	0x09ba,
 	0x0060,
 	0x4378,
 	0x1e00,
@@ -24451,10 +24481,10 @@ u16 imem_2d[] = {
 	0x8000,
 	0x0004,
 	0x714c,
-	0x0ca6,
+	0x0c6a,
 	0xff2f,
 	0x706c,
-	0x0a56,
+	0x0a1a,
 	0xfe6f,
 	0x40a1,
 	0x208a,
@@ -24486,7 +24516,7 @@ u16 imem_2d[] = {
 	0x200f,
 	0x0380,
 	0x780f,
-	0x0e32,
+	0x0df6,
 	0xffaf,
 	0xc045,
 	0x271a,
@@ -24513,7 +24543,7 @@ u16 imem_2d[] = {
 	0xc102,
 	0x206c,
 	0x00c0,
-	0x0fae,
+	0x0fa2,
 	0x0020,
 	0xb880,
 	0x40c3,
@@ -24521,12 +24551,12 @@ u16 imem_2d[] = {
 	0xffff,
 	0x4100,
 	0x4200,
-	0x0966,
+	0x092a,
 	0xfeef,
 	0x4300,
 	0xc092,
 	0x702c,
-	0x0ffe,
+	0x0fc2,
 	0xff6f,
 	0xda28,
 	0xc003,
@@ -24545,7 +24575,7 @@ u16 imem_2d[] = {
 	0xc088,
 	0x218a,
 	0x0038,
-	0x0fe6,
+	0x0faa,
 	0xff6f,
 	0xda14,
 	0xca0c,
@@ -24650,7 +24680,7 @@ u16 imem_2d[] = {
 	0x90e5,
 	0x264a,
 	0x3000,
-	0x0cda,
+	0x0c9e,
 	0xff8f,
 	0xc004,
 	0xc202,
@@ -24668,7 +24698,7 @@ u16 imem_2d[] = {
 	0xc006,
 	0xc192,
 	0x714c,
-	0x0dee,
+	0x0de2,
 	0x00e0,
 	0x706c,
 	0xf007,
@@ -24678,7 +24708,7 @@ u16 imem_2d[] = {
 	0x0b36,
 	0xffef,
 	0x706c,
-	0x0aee,
+	0x0ab2,
 	0xff6f,
 	0xc005,
 	0x1600,
@@ -24687,7 +24717,7 @@ u16 imem_2d[] = {
 	0x0674,
 	0xc003,
 	0x704c,
-	0x0ace,
+	0x0a92,
 	0xff2f,
 	0x706c,
 	0xc007,
@@ -24714,9 +24744,9 @@ u16 imem_2d[] = {
 	0xc004,
 	0x6841,
 	0x740c,
-	0x092a,
+	0x08ee,
 	0xfe4f,
-	0x0b92,
+	0x0b56,
 	0xfe6f,
 	0xc002,
 	0xc0bc,
@@ -24727,20 +24757,20 @@ u16 imem_2d[] = {
 	0x1cfc,
 	0xb6c8,
 	0x2482,
-	0x3806,
+	0x3706,
 	0xc042,
 	0x205f,
 	0x0640,
 	0xc143,
-	0xc24a,
-	0xc049,
+	0xc249,
+	0xc048,
 	0x1600,
 	0x7080,
 	0x8000,
 	0x0665,
 	0x205f,
 	0x0c81,
-	0xc009,
+	0xc008,
 	0x6038,
 	0x2000,
 	0x0f80,
@@ -24748,8 +24778,8 @@ u16 imem_2d[] = {
 	0x0674,
 	0x8812,
 	0x702c,
-	0xc047,
-	0x0f4e,
+	0xc046,
+	0x0f42,
 	0x0020,
 	0xc002,
 	0x4318,
@@ -24768,7 +24798,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x001b,
 	0x0002,
-	0x090e,
+	0x08d2,
 	0xfe2f,
 	0x4263,
 	0x40c3,
@@ -24800,7 +24830,7 @@ u16 imem_2d[] = {
 	0x7001,
 	0x8000,
 	0x0674,
-	0xc04b,
+	0xc04a,
 	0xf205,
 	0xc002,
 	0x704c,
@@ -24809,16 +24839,16 @@ u16 imem_2d[] = {
 	0xc002,
 	0x704c,
 	0x706c,
-	0x09da,
+	0x099e,
 	0xff0f,
 	0x250f,
 	0x16c0,
-	0xc04c,
-	0xc007,
+	0xc04b,
+	0xc006,
 	0x2084,
 	0x003e,
-	0xc047,
-	0x0f7e,
+	0xc046,
+	0x0f42,
 	0xfe2f,
 	0x40e1,
 	0xd820,
@@ -24842,7 +24872,7 @@ u16 imem_2d[] = {
 	0x9003,
 	0xfec4,
 	0x730c,
-	0x0d1e,
+	0x0d12,
 	0x0020,
 	0x218a,
 	0x0fc7,
@@ -24851,16 +24881,16 @@ u16 imem_2d[] = {
 	0xffff,
 	0x4100,
 	0x4200,
-	0x0ed2,
+	0x0e96,
 	0xfeaf,
 	0x4300,
-	0xc08e,
+	0xc08d,
 	0x218a,
 	0x0038,
 	0xda5a,
-	0x0d76,
+	0x0d3a,
 	0xff6f,
-	0xc78e,
+	0xc78d,
 	0xc002,
 	0x120c,
 	0x309f,
@@ -24934,33 +24964,33 @@ u16 imem_2d[] = {
 	0x93a5,
 	0x702c,
 	0xca66,
-	0xf0e6,
-	0xc006,
-	0x0bd6,
+	0xf0e3,
+	0xc005,
+	0x0bca,
 	0x0060,
 	0x780f,
-	0xc107,
+	0xc106,
 	0x7825,
 	0x790f,
-	0x0f3e,
+	0x0f32,
 	0x00a0,
-	0xc004,
-	0xc004,
-	0x0a9a,
+	0x40a1,
+	0x40a1,
+	0x0a5e,
 	0xffaf,
 	0x702c,
 	0xd80f,
-	0x0e9a,
+	0x0e5e,
 	0xfe2f,
 	0xd90f,
 	0xca0c,
 	0x704c,
-	0xc245,
+	0xc244,
 	0xf009,
 	0x2455,
-	0x3ec1,
+	0x3e81,
 	0x615b,
-	0xc18e,
+	0xc18d,
 	0x6149,
 	0x7144,
 	0xab20,
@@ -24976,14 +25006,14 @@ u16 imem_2d[] = {
 	0x0aff,
 	0x8031,
 	0x781b,
-	0xc04d,
+	0xc04c,
 	0xf0a7,
 	0x40c3,
 	0x8000,
 	0x0665,
 	0x8844,
 	0x2455,
-	0x3ec0,
+	0x3e80,
 	0x225f,
 	0x0481,
 	0x603c,
@@ -25044,16 +25074,16 @@ u16 imem_2d[] = {
 	0x09f9,
 	0x80e5,
 	0x70ad,
-	0x09c6,
+	0x098a,
 	0xff8f,
-	0x0986,
+	0x094a,
 	0xfe0f,
 	0x40c3,
 	0x8000,
 	0x0665,
 	0x8864,
 	0x2455,
-	0x3ecf,
+	0x3e8f,
 	0x43cb,
 	0x8000,
 	0x06dc,
@@ -25097,8 +25127,8 @@ u16 imem_2d[] = {
 	0xf386,
 	0x0038,
 	0x0004,
-	0xc006,
-	0x1420,
+	0xc005,
+	0x141c,
 	0x301e,
 	0x7810,
 	0x080d,
@@ -25110,7 +25140,7 @@ u16 imem_2d[] = {
 	0x262f,
 	0xf088,
 	0xf40e,
-	0xc005,
+	0xc004,
 	0x262f,
 	0x3787,
 	0x2314,
@@ -25125,7 +25155,7 @@ u16 imem_2d[] = {
 	0xa820,
 	0x2380,
 	0x1041,
-	0xc00d,
+	0xc00c,
 	0x71a5,
 	0x780f,
 	0x60d8,
@@ -25138,42 +25168,38 @@ u16 imem_2d[] = {
 	0x0f77,
 	0xb325,
 	0xd80f,
-	0x0d22,
+	0x0ce6,
 	0xfe2f,
 	0xd90f,
-	0xc005,
+	0xc004,
 	0x7104,
-	0xc045,
-	0xc005,
+	0xc044,
+	0xc004,
 	0xe09e,
 	0x06b2,
-	0xffce,
-	0x0f42,
-	0xff2f,
-	0xc004,
-	0xca15,
+	0xffee,
 	0x712c,
+	0xca15,
 	0x2044,
-	0x07cd,
+	0x07c2,
 	0x4020,
-	0xc108,
-	0xed05,
-	0xbd61,
-	0x0dff,
-	0x9031,
+	0xc107,
+	0xea06,
+	0xba61,
+	0x0a01,
+	0x0031,
 	0x781b,
 	0x6038,
-	0xc046,
-	0xc006,
-	0xc10c,
+	0xc045,
+	0xc005,
+	0xc10b,
 	0x7810,
-	0xc048,
-	0x792f,
+	0xc047,
 	0xca67,
-	0xc144,
-	0xc108,
+	0x7d2f,
+	0xc107,
 	0x7110,
-	0x0624,
+	0x062c,
 	0xffce,
 	0x1600,
 	0x7080,
@@ -25181,50 +25207,48 @@ u16 imem_2d[] = {
 	0x0665,
 	0x205f,
 	0x0c81,
-	0xc009,
-	0x6038,
-	0x2000,
+	0xc008,
+	0x6119,
+	0x2100,
 	0x0f80,
 	0x8000,
 	0x0674,
 	0x8832,
-	0x0d52,
+	0x0d4e,
 	0x00a0,
-	0xc004,
-	0xc00a,
-	0xe811,
+	0x40a1,
+	0xc009,
+	0xe810,
 	0xc003,
 	0xc302,
 	0x41c3,
 	0x001d,
 	0x0004,
 	0xc041,
-	0xc004,
+	0x740c,
 	0x724c,
-	0xc040,
-	0x0d5a,
+	0x0d26,
 	0xfe2f,
-	0x740c,
-	0x0fbe,
+	0xc540,
+	0x0f8e,
 	0xfe2f,
 	0xc003,
-	0xc00b,
-	0xe80a,
+	0xc00a,
+	0xe80b,
 	0x1600,
 	0x7001,
 	0x8000,
 	0x0674,
 	0xc002,
 	0x704c,
-	0x0eae,
+	0x0e7a,
 	0xfeef,
 	0x706c,
 	0x2480,
-	0x3806,
+	0x3706,
 	0x1404,
 	0x341b,
 	0xc6c6,
-	0x78e0,
 	0xc2e6,
 	0x1210,
 	0x308d,
@@ -25290,9 +25314,9 @@ u16 imem_2d[] = {
 	0x651d,
 	0x7aaf,
 	0x41c3,
-	0x0147,
+	0x0149,
 	0x0001,
-	0x0ca6,
+	0x0c76,
 	0xfe2f,
 	0xd80a,
 	0x40c3,
@@ -25307,15 +25331,15 @@ u16 imem_2d[] = {
 	0x8e40,
 	0x4508,
 	0xea17,
-	0x087a,
+	0x084a,
 	0xff2f,
 	0x4040,
 	0x4708,
 	0xe887,
 	0x41c3,
-	0x016e,
+	0x0170,
 	0x0001,
-	0x0cc6,
+	0x0c96,
 	0xfdef,
 	0x700c,
 	0x40e1,
@@ -25331,7 +25355,7 @@ u16 imem_2d[] = {
 	0x16ff,
 	0x9082,
 	0xea18,
-	0x084a,
+	0x081a,
 	0xff2f,
 	0x4040,
 	0x228c,
@@ -25339,9 +25363,9 @@ u16 imem_2d[] = {
 	0xf209,
 	0xe888,
 	0x41c3,
-	0x016f,
+	0x0171,
 	0x0001,
-	0x0c92,
+	0x0c62,
 	0xfdef,
 	0x700c,
 	0x700c,
@@ -25372,9 +25396,9 @@ u16 imem_2d[] = {
 	0x710c,
 	0xf009,
 	0x41c3,
-	0x0170,
+	0x0172,
 	0x0001,
-	0x0c52,
+	0x0c22,
 	0xfdef,
 	0x700c,
 	0x700c,
@@ -25417,9 +25441,9 @@ u16 imem_2d[] = {
 	0xc140,
 	0x750c,
 	0x41c3,
-	0x0060,
+	0x0062,
 	0x0002,
-	0x0ba6,
+	0x0b76,
 	0xfe2f,
 	0x4338,
 	0x7ee2,
@@ -25429,7 +25453,7 @@ u16 imem_2d[] = {
 	0x13c2,
 	0x234f,
 	0x3401,
-	0x0b92,
+	0x0b62,
 	0xfe2f,
 	0x750c,
 	0x40c3,
@@ -25485,9 +25509,9 @@ u16 imem_2d[] = {
 	0x710c,
 	0xf008,
 	0x41c3,
-	0x005f,
+	0x0061,
 	0x0000,
-	0x0b1e,
+	0x0aee,
 	0xfe2f,
 	0x740c,
 	0x700c,
@@ -25585,7 +25609,7 @@ u16 imem_2d[] = {
 	0x4528,
 	0xc142,
 	0xc141,
-	0x0d6a,
+	0x0d3a,
 	0xfdef,
 	0xc140,
 	0x1600,
@@ -25599,7 +25623,7 @@ u16 imem_2d[] = {
 	0xdb0c,
 	0xc542,
 	0xc541,
-	0x0d4e,
+	0x0d1e,
 	0xfdef,
 	0xc540,
 	0xd8ff,
@@ -25609,7 +25633,7 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0d3a,
+	0x0d0a,
 	0xfdef,
 	0xc540,
 	0xc0a4,
@@ -25625,7 +25649,7 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0d1a,
+	0x0cea,
 	0xfdef,
 	0xc540,
 	0x46cb,
@@ -25645,7 +25669,7 @@ u16 imem_2d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0cf2,
+	0x0cc2,
 	0xfdef,
 	0xc540,
 	0x8e00,
@@ -25656,7 +25680,7 @@ u16 imem_2d[] = {
 	0xdb08,
 	0xc542,
 	0xc541,
-	0x0cde,
+	0x0cae,
 	0xfdef,
 	0xc540,
 	0x8e00,
@@ -25667,7 +25691,7 @@ u16 imem_2d[] = {
 	0xdb0c,
 	0xc542,
 	0xc541,
-	0x0cc6,
+	0x0c96,
 	0xfdef,
 	0xc540,
 	0xc0a4,
@@ -25685,7 +25709,7 @@ u16 imem_2d[] = {
 	0xb200,
 	0xc2e2,
 	0x4200,
-	0x0d36,
+	0x0d06,
 	0xfe6f,
 	0x4020,
 	0x4408,
@@ -25715,11 +25739,11 @@ u16 imem_2d[] = {
 	0xc04b,
 	0xc09e,
 	0x702c,
-	0x0eb2,
+	0x0e82,
 	0xff2f,
 	0x764c,
 	0xc00b,
-	0x0f22,
+	0x0ef2,
 	0xfdef,
 	0xc19e,
 	0xca13,
@@ -25798,7 +25822,7 @@ u16 imem_2d[] = {
 	0xc042,
 	0xc018,
 	0xc041,
-	0x08b2,
+	0x0882,
 	0xfe2f,
 	0x740c,
 	0x700c,
@@ -25931,7 +25955,7 @@ u16 imem_2d[] = {
 	0x0009,
 	0xc040,
 	0x740c,
-	0x0fa6,
+	0x0f76,
 	0xfdef,
 	0xc644,
 	0xc01d,
@@ -25977,7 +26001,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x0051,
 	0x0003,
-	0x0f4a,
+	0x0f1a,
 	0xfdef,
 	0xc640,
 	0xc555,
@@ -25995,7 +26019,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x0052,
 	0x0000,
-	0x0f76,
+	0x0f46,
 	0xfdaf,
 	0xc00d,
 	0xc00f,
@@ -26028,7 +26052,7 @@ u16 imem_2d[] = {
 	0x4508,
 	0xc088,
 	0x702c,
-	0x0c42,
+	0x0c12,
 	0xff2f,
 	0xda80,
 	0x704c,
@@ -26194,7 +26218,7 @@ u16 imem_2d[] = {
 	0xc003,
 	0x43c1,
 	0xc040,
-	0x0d9a,
+	0x0d6a,
 	0xfdef,
 	0x740c,
 	0xc002,
@@ -26209,19 +26233,19 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x0047,
 	0x0000,
-	0x0dca,
+	0x0d9a,
 	0xfd8f,
 	0xc106,
 	0xc304,
 	0x4063,
-	0x0c8a,
+	0x0c5a,
 	0xfdaf,
 	0x42c1,
 	0x4608,
 	0xc003,
 	0xc105,
 	0xc202,
-	0x0c7a,
+	0x0c4a,
 	0xfdaf,
 	0x43e1,
 	0xc107,
@@ -26249,7 +26273,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x0048,
 	0x0002,
-	0x0d2a,
+	0x0cfa,
 	0xfdef,
 	0x740c,
 	0x1540,
@@ -26262,7 +26286,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x0049,
 	0x0003,
-	0x0d12,
+	0x0ce2,
 	0xfdef,
 	0x740c,
 	0xca0f,
@@ -26272,7 +26296,7 @@ u16 imem_2d[] = {
 	0x341b,
 	0xc6c6,
 	0xc2e6,
-	0x08de,
+	0x08ae,
 	0xfe6f,
 	0x4548,
 	0x153f,
@@ -26373,7 +26397,7 @@ u16 imem_2d[] = {
 	0x208c,
 	0x8010,
 	0xf785,
-	0x0e6e,
+	0x0e3e,
 	0xfdcf,
 	0xcc36,
 	0x2615,
@@ -26431,7 +26455,7 @@ u16 imem_2d[] = {
 	0x7902,
 	0x6e02,
 	0x7030,
-	0x0df8,
+	0x0dc8,
 	0xfdca,
 	0x0f3a,
 	0xffef,
@@ -26494,7 +26518,7 @@ u16 imem_2d[] = {
 	0x30c2,
 	0x1c11,
 	0x30c2,
-	0x0b7e,
+	0x0b4e,
 	0xfe2f,
 	0xc364,
 	0xc084,
@@ -26505,7 +26529,7 @@ u16 imem_2d[] = {
 	0x40a1,
 	0x41c1,
 	0x4263,
-	0x0b66,
+	0x0b36,
 	0xfe2f,
 	0x716c,
 	0x1412,
@@ -26541,7 +26565,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x003d,
 	0x0003,
-	0x0ae2,
+	0x0ab2,
 	0xfdcf,
 	0xc203,
 	0xc740,
@@ -26550,7 +26574,7 @@ u16 imem_2d[] = {
 	0x0003,
 	0x740c,
 	0x41e1,
-	0x0ad2,
+	0x0aa2,
 	0xfdef,
 	0x43a1,
 	0xc002,
@@ -26559,7 +26583,7 @@ u16 imem_2d[] = {
 	0x42c1,
 	0xc040,
 	0x740c,
-	0x0abe,
+	0x0a8e,
 	0xfdef,
 	0x4363,
 	0xc002,
@@ -26572,7 +26596,7 @@ u16 imem_2d[] = {
 	0xb6c8,
 	0x2482,
 	0x3511,
-	0x0f66,
+	0x0f36,
 	0xfe2f,
 	0x700c,
 	0x1600,
@@ -26583,10 +26607,10 @@ u16 imem_2d[] = {
 	0x8000,
 	0x1b70,
 	0x702c,
-	0x0fea,
+	0x0fba,
 	0xfeef,
 	0xda28,
-	0x0eca,
+	0x0e9a,
 	0xfe2f,
 	0x700c,
 	0xc046,
@@ -26614,7 +26638,7 @@ u16 imem_2d[] = {
 	0x1007,
 	0x00cf,
 	0xc006,
-	0x0baa,
+	0x0bb6,
 	0xff6f,
 	0x702c,
 	0x261a,
@@ -26626,7 +26650,7 @@ u16 imem_2d[] = {
 	0x9002,
 	0x0092,
 	0x90a0,
-	0x0ed6,
+	0x0ea6,
 	0xfe2f,
 	0x2553,
 	0x1140,
@@ -26634,7 +26658,7 @@ u16 imem_2d[] = {
 	0x78bd,
 	0xf96b,
 	0x781d,
-	0x0ec6,
+	0x0e96,
 	0xfe2f,
 	0xb8c5,
 	0x4508,
@@ -26644,9 +26668,9 @@ u16 imem_2d[] = {
 	0x20f4,
 	0x06c2,
 	0x41c3,
-	0x0091,
+	0x0093,
 	0x0001,
-	0x0a12,
+	0x09e2,
 	0xfdef,
 	0x750c,
 	0x40c3,
@@ -26655,9 +26679,9 @@ u16 imem_2d[] = {
 	0x20f4,
 	0x0342,
 	0x41c3,
-	0x0092,
+	0x0094,
 	0x0001,
-	0x09fa,
+	0x09ca,
 	0xfdef,
 	0x750c,
 	0xc006,
@@ -26674,9 +26698,9 @@ u16 imem_2d[] = {
 	0x710c,
 	0xc044,
 	0x41c3,
-	0x0093,
+	0x0095,
 	0x0000,
-	0x09d6,
+	0x09a6,
 	0xfdef,
 	0x740c,
 	0x2605,
@@ -26687,9 +26711,9 @@ u16 imem_2d[] = {
 	0x0045,
 	0xf015,
 	0x41c3,
-	0x0094,
+	0x0096,
 	0x0000,
-	0x09ba,
+	0x098a,
 	0xfdcf,
 	0x4063,
 	0x41a1,
@@ -26712,9 +26736,9 @@ u16 imem_2d[] = {
 	0x9134,
 	0x750c,
 	0x41c3,
-	0x0095,
+	0x0097,
 	0x0000,
-	0x098a,
+	0x095a,
 	0xfdcf,
 	0xc22f,
 	0x4063,
@@ -26722,13 +26746,13 @@ u16 imem_2d[] = {
 	0xffaf,
 	0x41a1,
 	0x41c3,
-	0x0096,
+	0x0098,
 	0x0000,
-	0x0976,
+	0x0946,
 	0xfdef,
 	0x740c,
 	0xc006,
-	0x0ac6,
+	0x0ad2,
 	0xff6f,
 	0x702c,
 	0xc006,
@@ -26749,11 +26773,11 @@ u16 imem_2d[] = {
 	0x3f80,
 	0x0000,
 	0x0104,
-	0x0e9e,
+	0x0e6e,
 	0xfeef,
 	0xdab4,
 	0xc094,
-	0x0e96,
+	0x0e66,
 	0xfeef,
 	0xdab4,
 	0x231a,
@@ -26785,7 +26809,7 @@ u16 imem_2d[] = {
 	0x2456,
 	0x3dc0,
 	0x702c,
-	0x0e56,
+	0x0e26,
 	0xfeef,
 	0xdab4,
 	0xc005,
@@ -26819,7 +26843,7 @@ u16 imem_2d[] = {
 	0x781b,
 	0x2005,
 	0x06c0,
-	0x08e6,
+	0x08b6,
 	0xfdef,
 	0x9000,
 	0x7a1c,
@@ -26865,11 +26889,11 @@ u16 imem_2d[] = {
 	0xc005,
 	0xc305,
 	0x41c3,
-	0x008e,
+	0x0090,
 	0x0002,
 	0x2038,
 	0x0380,
-	0x08a2,
+	0x0872,
 	0xfdaf,
 	0x42c1,
 	0x40c3,
@@ -26882,7 +26906,7 @@ u16 imem_2d[] = {
 	0x0674,
 	0xc00a,
 	0x704c,
-	0x09aa,
+	0x097a,
 	0xfeaf,
 	0x716c,
 	0x1600,
@@ -26894,7 +26918,7 @@ u16 imem_2d[] = {
 	0x9008,
 	0x01e0,
 	0x40c1,
-	0x0fce,
+	0x0f9e,
 	0xfdaf,
 	0x702c,
 	0xc04c,
@@ -26903,7 +26927,7 @@ u16 imem_2d[] = {
 	0xffff,
 	0x4100,
 	0x4200,
-	0x0eca,
+	0x0e9a,
 	0xfe2f,
 	0x4300,
 	0x40c3,
@@ -26921,7 +26945,7 @@ u16 imem_2d[] = {
 	0x41c3,
 	0x8000,
 	0x04c1,
-	0x0e7a,
+	0x0e4a,
 	0xfd6f,
 	0xda60,
 	0x2400,
@@ -26950,7 +26974,7 @@ u16 imem_2d[] = {
 	0x200f,
 	0x0380,
 	0x780f,
-	0x0af2,
+	0x0ac2,
 	0xff2f,
 	0xc051,
 	0x700c,
@@ -27067,7 +27091,7 @@ u16 imem_2d[] = {
 	0x0a96,
 	0x0040,
 	0xd80f,
-	0x0e0e,
+	0x0dde,
 	0xfdaf,
 	0xd90f,
 	0x710c,
@@ -27096,14 +27120,14 @@ u16 imem_2d[] = {
 	0xb8e2,
 	0x26ca,
 	0x1be1,
-	0x0942,
+	0x0912,
 	0xfdaf,
 	0x40c1,
 	0x2400,
 	0x3f80,
 	0x0000,
 	0x0104,
-	0x0f72,
+	0x0f7e,
 	0xff0f,
 	0x2400,
 	0x3f80,
@@ -27112,7 +27136,7 @@ u16 imem_2d[] = {
 	0x0a3a,
 	0x0040,
 	0xd80f,
-	0x0db6,
+	0x0d86,
 	0xfdaf,
 	0xd90f,
 	0x730c,
@@ -27132,10 +27156,10 @@ u16 imem_2d[] = {
 	0x101c,
 	0x1da9,
 	0x101c,
-	0x08fa,
+	0x08ca,
 	0xfdaf,
 	0x40c1,
-	0x0f32,
+	0x0f3e,
 	0xff2f,
 	0xc094,
 	0xc007,
@@ -27174,10 +27198,10 @@ u16 imem_2d[] = {
 	0xc040,
 	0x700c,
 	0x41c3,
-	0x00ac,
+	0x00ae,
 	0x0003,
 	0x4263,
-	0x0e3a,
+	0x0e0a,
 	0xfd6f,
 	0x43c1,
 	0xc00c,
@@ -27218,9 +27242,9 @@ u16 imem_2d[] = {
 	0xc043,
 	0x740c,
 	0x41c3,
-	0x00ad,
+	0x00af,
 	0x0006,
-	0x0d96,
+	0x0d66,
 	0xfdaf,
 	0x4263,
 	0xc104,
@@ -27257,7 +27281,7 @@ u16 imem_2d[] = {
 	0x4338,
 	0xc004,
 	0x7014,
-	0x0878,
+	0x0848,
 	0xff02,
 	0xc007,
 	0x7104,
@@ -27266,9 +27290,9 @@ u16 imem_2d[] = {
 	0x7014,
 	0xf535,
 	0x41c3,
-	0x00ae,
+	0x00b0,
 	0x0000,
-	0x0d36,
+	0x0d06,
 	0xfdaf,
 	0x740c,
 	0x40c3,
@@ -27302,10 +27326,10 @@ u16 imem_2d[] = {
 	0xc042,
 	0x740c,
 	0x41c3,
-	0x00af,
+	0x00b1,
 	0x0005,
 	0x4263,
-	0x0cea,
+	0x0cba,
 	0xfdaf,
 	0x43a1,
 	0x71a5,
@@ -27322,7 +27346,7 @@ u16 imem_2d[] = {
 	0x08ab,
 	0x8065,
 	0x4338,
-	0x0e46,
+	0x0e16,
 	0xfeaf,
 	0xc011,
 	0x1e00,
@@ -27335,7 +27359,7 @@ u16 imem_2d[] = {
 	0x0674,
 	0xc00a,
 	0x704c,
-	0x0e1e,
+	0x0dee,
 	0xfe6f,
 	0x706c,
 	0xc00b,
@@ -27429,7 +27453,7 @@ u16 imem_2d[] = {
 	0x78ef,
 	0x702c,
 	0xdaff,
-	0x0b2e,
+	0x0afe,
 	0xfdef,
 	0x4318,
 	0x4063,
@@ -27441,15 +27465,15 @@ u16 imem_2d[] = {
 	0x4163,
 	0xdaff,
 	0x7b0f,
-	0x0aaa,
+	0x0a7a,
 	0xfe2f,
 	0x700c,
 	0x4063,
 	0xd9ff,
-	0x0abe,
+	0x0aca,
 	0xff6f,
 	0x714c,
-	0x0916,
+	0x08e6,
 	0xfeaf,
 	0x4063,
 	0xc009,
@@ -27470,7 +27494,7 @@ u16 imem_2d[] = {
 	0x0c02,
 	0x0060,
 	0x4063,
-	0x0fae,
+	0x0f7e,
 	0xfdef,
 	0x4063,
 	0x8820,
@@ -27487,7 +27511,7 @@ u16 imem_2d[] = {
 	0x702c,
 	0xc041,
 	0xd8ff,
-	0x0b02,
+	0x0ad2,
 	0xfdaf,
 	0xda08,
 	0xc045,
@@ -27625,9 +27649,9 @@ u16 imem_2d[] = {
 	0x03a5,
 	0x750c,
 	0x41c3,
-	0x008d,
+	0x008f,
 	0x0002,
-	0x0a66,
+	0x0a36,
 	0xfdaf,
 	0x43c1,
 	0xc100,
@@ -27760,7 +27784,7 @@ u16 imem_2d[] = {
 	0x700c,
 	0xd9ff,
 	0xc346,
-	0x0b7a,
+	0x0b4a,
 	0xfd6f,
 	0xc244,
 	0xc00d,
@@ -27773,7 +27797,7 @@ u16 imem_2d[] = {
 	0x8000,
 	0x0524,
 	0x702c,
-	0x093e,
+	0x090e,
 	0xfd6f,
 	0x42e1,
 	0xc207,
@@ -27794,7 +27818,7 @@ u16 imem_2d[] = {
 	0x36c0,
 	0xc040,
 	0xd8ff,
-	0x0e3a,
+	0x0e0a,
 	0xfd6f,
 	0xc741,
 	0x0d07,
@@ -27803,7 +27827,7 @@ u16 imem_2d[] = {
 	0x70b5,
 	0xd9c8,
 	0xd8fa,
-	0x0c6a,
+	0x0c3a,
 	0xfe6f,
 	0x20ca,
 	0x0041,
@@ -27821,7 +27845,7 @@ u16 imem_2d[] = {
 	0xd8ff,
 	0x702c,
 	0x754c,
-	0x0e02,
+	0x0dd2,
 	0xfd6f,
 	0xdb20,
 	0x71a5,
@@ -27836,7 +27860,7 @@ u16 imem_2d[] = {
 	0x3401,
 	0xc642,
 	0xc641,
-	0x0bd6,
+	0x0ba6,
 	0xfd6f,
 	0xc640,
 	0xd8ff,
@@ -27846,17 +27870,17 @@ u16 imem_2d[] = {
 	0xc643,
 	0xc642,
 	0xc641,
-	0x0bc2,
+	0x0b92,
 	0xfd6f,
 	0xc640,
 	0x700c,
-	0x0b5e,
+	0x0b2e,
 	0xfd6f,
 	0x712c,
 	0xc004,
 	0xe833,
 	0x700c,
-	0x0aba,
+	0x0a8a,
 	0xfd6f,
 	0xd9ff,
 	0xd84f,
@@ -27868,21 +27892,21 @@ u16 imem_2d[] = {
 	0xc543,
 	0x1c08,
 	0x36c0,
-	0x0b96,
+	0x0b66,
 	0xfd6f,
 	0xc541,
 	0x700c,
-	0x0b32,
+	0x0b02,
 	0xfd6f,
 	0x712c,
 	0x40c3,
 	0x000f,
 	0x4240,
-	0x0ad2,
+	0x0aa2,
 	0xfeaf,
 	0x702c,
 	0x700c,
-	0x0a86,
+	0x0a56,
 	0xfd6f,
 	0xd9ff,
 	0xd851,
@@ -27891,17 +27915,17 @@ u16 imem_2d[] = {
 	0xc543,
 	0x1c08,
 	0x36c0,
-	0x0b66,
+	0x0b36,
 	0xfd6f,
 	0xc541,
 	0x700c,
-	0x0b02,
+	0x0ad2,
 	0xfd6f,
 	0x712c,
 	0x40c3,
 	0x0000,
 	0x1f40,
-	0x0aa2,
+	0x0a72,
 	0xfeaf,
 	0xd91e,
 	0xc0a8,
@@ -27920,7 +27944,7 @@ u16 imem_2d[] = {
 	0x4628,
 	0x4708,
 	0x700c,
-	0x0a3a,
+	0x0a0a,
 	0xfd6f,
 	0xd9ff,
 	0x702c,
@@ -27932,10 +27956,10 @@ u16 imem_2d[] = {
 	0xc742,
 	0x1c04,
 	0x3381,
-	0x0d26,
+	0x0cf6,
 	0xfd6f,
 	0xc640,
-	0x0b62,
+	0x0b32,
 	0xfe6f,
 	0xd8fa,
 	0x781d,
@@ -27951,7 +27975,7 @@ u16 imem_2d[] = {
 	0xdb20,
 	0xc542,
 	0xc541,
-	0x0cfe,
+	0x0cce,
 	0xfd6f,
 	0xc540,
 	0xd8ff,
@@ -27961,11 +27985,11 @@ u16 imem_2d[] = {
 	0xc543,
 	0xc542,
 	0xc541,
-	0x0ada,
+	0x0aaa,
 	0xfd6f,
 	0xc540,
 	0x700c,
-	0x0a76,
+	0x0a46,
 	0xfd6f,
 	0x712c,
 	0xc0a4,
@@ -27978,7 +28002,7 @@ u16 imem_2d[] = {
 	0xc349,
 	0xc247,
 	0xc14a,
-	0x0d42,
+	0x0d12,
 	0xfdaf,
 	0xc046,
 	0xc011,
@@ -28007,7 +28031,7 @@ u16 imem_2d[] = {
 	0x40c3,
 	0x0000,
 	0x0a00,
-	0x098a,
+	0x095a,
 	0xfd6f,
 	0xd9ff,
 	0x0d4e,
@@ -28049,7 +28073,7 @@ u16 imem_2d[] = {
 	0xc041,
 	0xc040,
 	0xd8ff,
-	0x0a2a,
+	0x09fa,
 	0xfd6f,
 	0xdb20,
 	0xc004,
@@ -28067,7 +28091,7 @@ u16 imem_2d[] = {
 	0xc006,
 	0xc540,
 	0xc042,
-	0x0a06,
+	0x09d6,
 	0xfd6f,
 	0xd8ff,
 	0x40c3,
@@ -28081,7 +28105,7 @@ u16 imem_2d[] = {
 	0xf869,
 	0xc542,
 	0xc741,
-	0x09ea,
+	0x09ba,
 	0xfd6f,
 	0x1c00,
 	0x36c0,
@@ -28097,7 +28121,7 @@ u16 imem_2d[] = {
 	0x2045,
 	0x0580,
 	0xc040,
-	0x09ca,
+	0x099a,
 	0xfd6f,
 	0xd8ff,
 	0x40c3,
@@ -28112,7 +28136,7 @@ u16 imem_2d[] = {
 	0x726c,
 	0xc542,
 	0xc741,
-	0x09ae,
+	0x097e,
 	0xfd6f,
 	0xc640,
 	0xc005,
@@ -28120,7 +28144,7 @@ u16 imem_2d[] = {
 	0x40c3,
 	0x0000,
 	0x2710,
-	0x090e,
+	0x08de,
 	0xfeaf,
 	0xd90a,
 	0x781d,
@@ -28131,7 +28155,7 @@ u16 imem_2d[] = {
 	0xc542,
 	0xc541,
 	0xc540,
-	0x0986,
+	0x0956,
 	0xfd6f,
 	0xc643,
 	0xf84d,
@@ -28152,7 +28176,7 @@ u16 imem_2d[] = {
 	0x702c,
 	0x704c,
 	0xdb18,
-	0x095e,
+	0x092e,
 	0xfd4f,
 	0xc004,
 	0x790f,
@@ -28165,7 +28189,7 @@ u16 imem_2d[] = {
 	0x0bc6,
 	0xff4f,
 	0x700c,
-	0x08e6,
+	0x08b6,
 	0xfd6f,
 	0x712c,
 	0xd8ff,
@@ -28184,8 +28208,8 @@ u16 imem_2d[] = {
 	0x47cb,
 	0x0000,
 	0x0a00,
-	0x082a,
-	0xfd6f,
+	0x0ffa,
+	0xfd2f,
 	0x40e1,
 	0x0bea,
 	0xff4f,
@@ -28204,7 +28228,7 @@ u16 imem_2d[] = {
 	0xd8ff,
 	0x4528,
 	0xc141,
-	0x08f6,
+	0x08c6,
 	0xfd6f,
 	0x1c00,
 	0x36c0,
@@ -28216,24 +28240,24 @@ u16 imem_2d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x08de,
+	0x08ae,
 	0xfd6f,
 	0x1c00,
 	0x33c1,
 	0x0b52,
 	0xff4f,
 	0x700c,
-	0x0872,
+	0x0842,
 	0xfd6f,
 	0x712c,
 	0x40c3,
 	0x000f,
 	0x4240,
-	0x0812,
-	0xfeaf,
+	0x0fe2,
+	0xfe6f,
 	0x702c,
 	0x40e1,
-	0x0fc6,
+	0x0f96,
 	0xfd2f,
 	0xd9ff,
 	0x0b8a,
@@ -28247,7 +28271,7 @@ u16 imem_2d[] = {
 	0xc541,
 	0xc042,
 	0xd8ff,
-	0x089e,
+	0x086e,
 	0xfd6f,
 	0x1c00,
 	0x36c0,
@@ -28259,7 +28283,7 @@ u16 imem_2d[] = {
 	0x726c,
 	0xc542,
 	0xc541,
-	0x0886,
+	0x0856,
 	0xfd6f,
 	0x1c00,
 	0x3441,
@@ -28271,16 +28295,16 @@ u16 imem_2d[] = {
 	0xdb10,
 	0xc542,
 	0xc541,
-	0x086e,
+	0x083e,
 	0xfd6f,
 	0xc540,
 	0x0ae6,
 	0xff4f,
 	0x700c,
-	0x0806,
-	0xfd6f,
+	0x0fd6,
+	0xfd2f,
 	0x712c,
-	0x0c22,
+	0x0bf2,
 	0xfd8f,
 	0xc0ac,
 	0x1404,
@@ -28350,7 +28374,7 @@ u16 imem_2d[] = {
 	0x09ff,
 	0x8031,
 	0x781b,
-	0x098a,
+	0x095a,
 	0xfdaf,
 	0x780f,
 	0x40c3,
@@ -28410,7 +28434,7 @@ u16 imem_2d[] = {
 	0x0d53,
 	0x90b4,
 	0x40c1,
-	0x0912,
+	0x08e2,
 	0xfdaf,
 	0x730c,
 	0xc0a9,
@@ -28448,7 +28472,7 @@ u16 imem_2d[] = {
 	0x0ef9,
 	0x90e5,
 	0x702c,
-	0x0f2e,
+	0x0efe,
 	0xfe8f,
 	0xc6c4,
 	0xc2e2,
@@ -28488,7 +28512,7 @@ u16 imem_2d[] = {
 	0xb99f,
 	0xb100,
 	0xf003,
-	0x0db6,
+	0x0d86,
 	0xfe4f,
 	0x71a5,
 	0x2e45,
@@ -28601,9 +28625,9 @@ u16 imem_2d[] = {
 	0x11e9,
 	0x808f,
 	0x41c3,
-	0x0143,
+	0x0145,
 	0x0000,
-	0x0ac6,
+	0x0a96,
 	0xfd6f,
 	0x740c,
 	0x275f,
@@ -28640,17 +28664,17 @@ u16 imem_2d[] = {
 	0xa919,
 	0xbe6c,
 	0x40c1,
-	0x0ed6,
+	0x0ee2,
 	0xfeef,
 	0xd90d,
 	0x40c1,
 	0xd90d,
-	0x08d2,
+	0x08a2,
 	0xfe6f,
 	0xda40,
 	0x40c1,
 	0xd90d,
-	0x0fe2,
+	0x0fb2,
 	0xfd2f,
 	0xda7f,
 	0xdfff,
@@ -28663,7 +28687,7 @@ u16 imem_2d[] = {
 	0xc740,
 	0x40c1,
 	0xd90d,
-	0x08ae,
+	0x087e,
 	0xfe6f,
 	0xda80,
 	0x40c1,
@@ -28676,7 +28700,7 @@ u16 imem_2d[] = {
 	0xffef,
 	0xc740,
 	0x40c1,
-	0x0bba,
+	0x0bc6,
 	0xfeef,
 	0xd90d,
 	0x7487,
@@ -28693,13 +28717,13 @@ u16 imem_2d[] = {
 	0xc043,
 	0x4020,
 	0x702c,
-	0x0996,
+	0x0966,
 	0xfd6f,
 	0x734c,
 	0xc045,
 	0x4061,
 	0x742c,
-	0x098a,
+	0x095a,
 	0xfd6f,
 	0xda08,
 	0xc046,
@@ -28752,9 +28776,9 @@ u16 imem_2d[] = {
 	0x277c,
 	0x1800,
 	0x41c3,
-	0x0075,
+	0x0077,
 	0x0003,
-	0x09ea,
+	0x09ba,
 	0xfd2f,
 	0xc740,
 	0xc002,
@@ -28806,14 +28830,14 @@ u16 imem_2d[] = {
 	0x8000,
 	0x0004,
 	0x702c,
-	0x0e8e,
+	0x0e5e,
 	0xfe6f,
 	0xda28,
 	0xc203,
 	0x41c3,
 	0x0019,
 	0x0001,
-	0x0922,
+	0x08f2,
 	0xfd6f,
 	0x750c,
 	0x251a,
@@ -28823,13 +28847,13 @@ u16 imem_2d[] = {
 	0xc004,
 	0xc188,
 	0x724c,
-	0x09b2,
+	0x09be,
 	0xfeef,
 	0x78a5,
 	0x700c,
 	0x722c,
 	0xc288,
-	0x0a5e,
+	0x0a2e,
 	0xfd2f,
 	0x726c,
 	0xc0b2,
@@ -28918,9 +28942,9 @@ u16 imem_2d[] = {
 	0x79b0,
 	0xc140,
 	0x41c3,
-	0x007b,
+	0x007d,
 	0x0003,
-	0x089e,
+	0x086e,
 	0xfd2f,
 	0x43c1,
 	0xc004,
@@ -28971,14 +28995,14 @@ u16 imem_2d[] = {
 	0x8000,
 	0x0004,
 	0x702c,
-	0x0d42,
+	0x0d12,
 	0xfe6f,
 	0xdab4,
 	0xc203,
 	0x41c3,
 	0x0017,
 	0x0001,
-	0x0fda,
+	0x0faa,
 	0xfd2f,
 	0x750c,
 	0x251a,
@@ -28988,13 +29012,13 @@ u16 imem_2d[] = {
 	0xc004,
 	0xc185,
 	0xda09,
-	0x086a,
+	0x0876,
 	0xfeef,
 	0x78a5,
 	0x700c,
 	0xd909,
 	0xc285,
-	0x0916,
+	0x08e6,
 	0xfd2f,
 	0x726c,
 	0x2480,
@@ -29010,13 +29034,13 @@ u16 imem_2d[] = {
 	0xc040,
 	0xd8ff,
 	0x702c,
-	0x0f1e,
+	0x0eee,
 	0xfd2f,
 	0x734c,
 	0xc046,
 	0xd8ff,
 	0x742c,
-	0x0f12,
+	0x0ee2,
 	0xfd2f,
 	0xda08,
 	0xc047,
@@ -29033,7 +29057,7 @@ u16 imem_2d[] = {
 	0x0f9b,
 	0x8000,
 	0x1b70,
-	0x0b76,
+	0x0b46,
 	0xfdaf,
 	0xc000,
 	0x8f20,
@@ -29089,14 +29113,14 @@ u16 imem_2d[] = {
 	0x01b5,
 	0xc088,
 	0x702c,
-	0x0c56,
+	0x0c26,
 	0xfe6f,
 	0xda14,
 	0xc200,
 	0x41c3,
 	0x0018,
 	0x0001,
-	0x0eee,
+	0x0ebe,
 	0xfd2f,
 	0x750c,
 	0xc203,
@@ -29127,8 +29151,8 @@ u16 imem_2d[] = {
 	0x700c,
 	0x722c,
 	0xc288,
-	0x080a,
-	0xfd2f,
+	0x0fda,
+	0xfcef,
 	0x716c,
 	0x1700,
 	0x108b,
@@ -32781,30 +32805,6 @@ u16 imem_2d[] = {
 	0x0000,
 	0x0000,
 	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
 };
 
-size_t imem_2d_size = sizeof(imem_2d) / sizeof(u16);
+size_t imem_2d_size = ARRAY_SIZE(imem_2d);
diff --git a/board/freescale/s32-gen1/s32g274a/ddrc_cfg.c b/board/freescale/s32-gen1/s32g274a/ddrc_cfg.c
index fd1d64dc94..9be320e1b8 100644
--- a/board/freescale/s32-gen1/s32g274a/ddrc_cfg.c
+++ b/board/freescale/s32-gen1/s32g274a/ddrc_cfg.c
@@ -32,150 +32,150 @@
 #include "ddr_init.h"
 
 struct regconf ddrc_cfg[] = {
-	{0x4007c604, 0x00000000},
+	{0x4007c604, 0x00000000U},
 #ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x4007c608, 0x37ffffff},
+	{0x4007c608, 0x37ffffffU},
 #else
-	{0x4007c608, 0x00000000},
+	{0x4007c608, 0x00000000U},
 #endif
-	{0x403c0000, 0x83080020},
-	{0x403c0010, 0x00000030},
-	{0x403c0014, 0x00000000},
-	{0x403c001c, 0x00000000},
-	{0x403c0020, 0x00000202},
-	{0x403c0024, 0x01457080},
-	{0x403c002c, 0x00000001},
-	{0x403c0030, 0x00000020},
-	{0x403c0034, 0x00402010},
-	{0x403c0038, 0x00000000},
-	{0x403c0050, 0x00210070},
-	{0x403c0054, 0x00000000},
-	{0x403c0060, 0x00000000},
-	{0x403c0064, 0x005100bb},
-	{0x403c0068, 0x008c0000},
+	{0x403c0000, 0x83080020U},
+	{0x403c0010, 0x00000030U},
+	{0x403c0014, 0x00000000U},
+	{0x403c001c, 0x00000000U},
+	{0x403c0020, 0x00000202U},
+	{0x403c0024, 0x0186a000U},
+	{0x403c002c, 0x00000001U},
+	{0x403c0030, 0x00000020U},
+	{0x403c0034, 0x00402010U},
+	{0x403c0038, 0x00000000U},
+	{0x403c0050, 0x00210040U},
+	{0x403c0054, 0x00000000U},
+	{0x403c0060, 0x00000000U},
+	{0x403c0064, 0x006100e0U},
+	{0x403c0068, 0x008c0000U},
 #ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0070, 0x033f7f54},
-	{0x403c0074, 0x00000780},
+	{0x403c0070, 0x033f7f54U},
+	{0x403c0074, 0x00000780U},
 #else
-	{0x403c0070, 0x033f7f40},
-	{0x403c0074, 0x000007b0},
+	{0x403c0070, 0x033f7f40U},
+	{0x403c0074, 0x000007b0U},
 #endif
-	{0x403c007c, 0x00000700},
-	{0x403c00b8, 0x00000000},
-	{0x403c00bc, 0x00000000},
-	{0x403c00c0, 0x00000000},
-	{0x403c00c4, 0x00001000},
-	{0x403c00d0, 0xc0030517},
-	{0x403c00d4, 0x00840000},
-	{0x403c00d8, 0x00000d05},
-	{0x403c00dc, 0x0054002d},
-	{0x403c00e0, 0x00330008},
-	{0x403c00e4, 0x00100004},
-	{0x403c00e8, 0x0066004d},
-	{0x403c00ec, 0x0006004f},
-	{0x403c00f0, 0x00000000},
-	{0x403c00f4, 0x00000779},
-	{0x403c0100, 0x181b161c},
-	{0x403c0104, 0x0005052a},
-	{0x403c0108, 0x070e1516},
-	{0x403c010c, 0x00a0a000},
-	{0x403c0110, 0x0c04070c},
-	{0x403c0114, 0x02040a0a},
-	{0x403c0118, 0x01010006},
-	{0x403c011c, 0x00000401},
-	{0x403c0120, 0x03034405},
-	{0x403c0124, 0x0004040d},
-	{0x403c0128, 0x001c180a},
-	{0x403c012c, 0x440c021c},
-	{0x403c0130, 0x00020000},
-	{0x403c0134, 0x0c100002},
-	{0x403c0138, 0x000000c0},
-	{0x403c013c, 0x00000000},
-	{0x403c0180, 0xc29b0014},
-	{0x403c0184, 0x0220515d},
-	{0x403c0188, 0x00000000},
-	{0x403c0190, 0x0497820a},
-	{0x403c0194, 0x00080303},
-	{0x403c0198, 0x07000000},
-	{0x403c019c, 0x00000000},
-	{0x403c01a0, 0xe0400018},
-	{0x403c01a4, 0x00df00e4},
-	{0x403c01a8, 0x80000000},
-	{0x403c01b0, 0x00000051},
-	{0x403c01b4, 0x0000170a},
-	{0x403c01b8, 0x00000000},
-	{0x403c01c0, 0x00000001},
-	{0x403c01c4, 0x00000001},
+	{0x403c007c, 0x00000700U},
+	{0x403c00b8, 0x00000000U},
+	{0x403c00bc, 0x00000000U},
+	{0x403c00c0, 0x00000000U},
+	{0x403c00c4, 0x00001000U},
+	{0x403c00d0, 0xc003061cU},
+	{0x403c00d4, 0x009e0000U},
+	{0x403c00d8, 0x00000d05U},
+	{0x403c00dc, 0x0054002dU},
+	{0x403c00e0, 0x00330008U},
+	{0x403c00e4, 0x00100004U},
+	{0x403c00e8, 0x0066004dU},
+	{0x403c00ec, 0x0004004fU},
+	{0x403c00f0, 0x00000000U},
+	{0x403c00f4, 0x00000779U},
+	{0x403c0100, 0x1a201b22U},
+	{0x403c0104, 0x00060633U},
+	{0x403c0108, 0x070e1517U},
+	{0x403c010c, 0x00c0c000U},
+	{0x403c0110, 0x0f04080fU},
+	{0x403c0114, 0x02040c0cU},
+	{0x403c0118, 0x01010007U},
+	{0x403c011c, 0x00000401U},
+	{0x403c0120, 0x03034405U},
+	{0x403c0124, 0x0004040dU},
+	{0x403c0128, 0x001c180aU},
+	{0x403c012c, 0x440c021cU},
+	{0x403c0130, 0x00020000U},
+	{0x403c0134, 0x0c100002U},
+	{0x403c0138, 0x000000e6U},
+	{0x403c013c, 0x00000000U},
+	{0x403c0180, 0x03200018U},
+	{0x403c0184, 0x028061a8U},
+	{0x403c0188, 0x00000000U},
+	{0x403c0190, 0x0497820aU},
+	{0x403c0194, 0x00080303U},
+	{0x403c0198, 0x07000000U},
+	{0x403c019c, 0x00000000U},
+	{0x403c01a0, 0xe0400018U},
+	{0x403c01a4, 0x00df00e4U},
+	{0x403c01a8, 0x80000000U},
+	{0x403c01b0, 0x00000051U},
+	{0x403c01b4, 0x0000170aU},
+	{0x403c01b8, 0x00000000U},
+	{0x403c01c0, 0x00000001U},
+	{0x403c01c4, 0x00000001U},
 #ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0200, 0x00000014},
-	{0x403c0204, 0x00050505},
+	{0x403c0200, 0x00000014U},
+	{0x403c0204, 0x00050505U},
 #else
-	{0x403c0200, 0x00000017},
-	{0x403c0204, 0x00080808},
+	{0x403c0200, 0x00000017U},
+	{0x403c0204, 0x00080808U},
 #endif
-	{0x403c0208, 0x00000000},
+	{0x403c0208, 0x00000000U},
 #ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c020c, 0x14141400},
+	{0x403c020c, 0x14141400U},
 #else
-	{0x403c020c, 0x00000000},
+	{0x403c020c, 0x00000000U},
 #endif
-	{0x403c0210, 0x00001f1f},
+	{0x403c0210, 0x00001f1fU},
 #ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0214, 0x04040404},
-	{0x403c0218, 0x04040404},
+	{0x403c0214, 0x04040404U},
+	{0x403c0218, 0x04040404U},
 #else
-	{0x403c0214, 0x07070707},
-	{0x403c0218, 0x07070707},
+	{0x403c0214, 0x07070707U},
+	{0x403c0218, 0x07070707U},
 #endif
-	{0x403c021c, 0x0000000f},
-	{0x403c0220, 0x00003f3f},
-	{0x403c0224, 0x00000000},
-	{0x403c0228, 0x00000000},
-	{0x403c022c, 0x00000000},
-	{0x403c0240, 0x04000400},
-	{0x403c0244, 0x00000000},
-	{0x403c0250, 0x29001505},
-	{0x403c0254, 0x0000002c},
-	{0x403c025c, 0x5900575b},
-	{0x403c0264, 0x90000096},
-	{0x403c026c, 0x1000012c},
-	{0x403c0300, 0x00000000},
-	{0x403c0304, 0x00000000},
-	{0x403c030c, 0x00000000},
-	{0x403c0320, 0x00000001},
-	{0x403c0330, 0x00b03033},
-	{0x403c0334, 0x00000000},
-	{0x403c036c, 0x00000011},
-	{0x403c0374, 0x00000000},
-	{0x403c037c, 0x00000000},
-	{0x403c0384, 0x00000000},
-	{0x403c03c0, 0x00000003},
-	{0x403c03e0, 0x00010001},
-	{0x403c03e8, 0x00010001},
-	{0x403c0400, 0x00000111},
-	{0x403c0404, 0x000010f3},
-	{0x403c0408, 0x000072ff},
-	{0x403c0490, 0x00000000},
-	{0x403c0494, 0x00000e00},
-	{0x403c0498, 0x006207ff},
-	{0x403c049c, 0x01010e07},
-	{0x403c04a0, 0x034b07ff},
-	{0x403c04b4, 0x00000000},
-	{0x403c04b8, 0x00004000},
-	{0x403c0540, 0x00000000},
-	{0x403c0544, 0x02000e00},
-	{0x403c0548, 0x00000000},
-	{0x403c054c, 0x00000e00},
-	{0x403c0550, 0x00000000},
-	{0x403c0564, 0x00000000},
-	{0x403c0568, 0x00004000},
-	{0x403c05f0, 0x00000000},
-	{0x403c05f4, 0x02000e00},
-	{0x403c05f8, 0x00000000},
-	{0x403c05fc, 0x00000e00},
-	{0x403c0600, 0x00000000},
-	{0x403c0f24, 0x0000ff10},
-	{0x403c0f2c, 0x00000000},
+	{0x403c021c, 0x00000f0fU},
+	{0x403c0220, 0x00003f3fU},
+	{0x403c0224, 0x00000000U},
+	{0x403c0228, 0x00000000U},
+	{0x403c022c, 0x00000000U},
+	{0x403c0240, 0x04000400U},
+	{0x403c0244, 0x00000000U},
+	{0x403c0250, 0x29001f05U},
+	{0x403c0254, 0x00000000U},
+	{0x403c025c, 0x10002200U},
+	{0x403c0264, 0x1f002100U},
+	{0x403c026c, 0x1f002100U},
+	{0x403c0300, 0x00000000U},
+	{0x403c0304, 0x00000000U},
+	{0x403c030c, 0x00000000U},
+	{0x403c0320, 0x00000001U},
+	{0x403c0330, 0x00b03033U},
+	{0x403c0334, 0x00000000U},
+	{0x403c036c, 0x00000011U},
+	{0x403c0374, 0x00000000U},
+	{0x403c037c, 0x00000000U},
+	{0x403c0384, 0x00000000U},
+	{0x403c03c0, 0x00000003U},
+	{0x403c03e0, 0x00010001U},
+	{0x403c03e8, 0x00010001U},
+	{0x403c0400, 0x00000011U},
+	{0x403c0404, 0x00005193U},
+	{0x403c0408, 0x00001196U},
+	{0x403c0490, 0x00000000U},
+	{0x403c0494, 0x02000e00U},
+	{0x403c0498, 0x003c0200U},
+	{0x403c049c, 0x00000e00U},
+	{0x403c04a0, 0x003c0200U},
+	{0x403c04b4, 0x00015193U},
+	{0x403c04b8, 0x00001196U},
+	{0x403c0540, 0x00000000U},
+	{0x403c0544, 0x02000e00U},
+	{0x403c0548, 0x003c0200U},
+	{0x403c054c, 0x00000e00U},
+	{0x403c0550, 0x003c0200U},
+	{0x403c0564, 0x00015193U},
+	{0x403c0568, 0x00001196U},
+	{0x403c05f0, 0x00000000U},
+	{0x403c05f4, 0x02000e00U},
+	{0x403c05f8, 0x003c0200U},
+	{0x403c05fc, 0x00000e00U},
+	{0x403c0600, 0x003c0200U},
+	{0x403c0f24, 0x0000ff10U},
+	{0x403c0f2c, 0x00000000U},
 };
 
-size_t ddrc_cfg_size = sizeof(ddrc_cfg) / sizeof(struct regconf);
+size_t ddrc_cfg_size = ARRAY_SIZE(ddrc_cfg);
diff --git a/board/freescale/s32-gen1/s32g274a/dmem_cfg.c b/board/freescale/s32-gen1/s32g274a/dmem_cfg.c
index bc66f21f5b..cf664a2301 100644
--- a/board/freescale/s32-gen1/s32g274a/dmem_cfg.c
+++ b/board/freescale/s32-gen1/s32g274a/dmem_cfg.c
@@ -35,7 +35,7 @@ u16 dmem_1d[] = {
 	0x0000,
 	0x0000,
 	0x0000,
-	0x0a6a,
+	0x0c80,
 	0x0002,
 	0x0000,
 	0x0018,
@@ -62,13 +62,13 @@ u16 dmem_1d[] = {
 	0x4d66,
 	0x4f08,
 	0x0000,
-	0x0006,
+	0x0004,
 	0x2d54,
 	0x0033,
 	0x4d66,
 	0x4f08,
 	0x0000,
-	0x0006,
+	0x0004,
 	0x0000,
 	0x0000,
 	0x0000,
@@ -87,13 +87,13 @@ u16 dmem_1d[] = {
 	0x6600,
 	0x084d,
 	0x004f,
-	0x0600,
+	0x0400,
 	0x5400,
 	0x332d,
 	0x6600,
 	0x084d,
 	0x004f,
-	0x0600,
+	0x0400,
 	0x0000,
 	0x0000,
 	0x0000,
@@ -576,8 +576,8 @@ u16 dmem_1d[] = {
 	0x6590,
 	0x0000,
 	0x0000,
-	0x9f38,
-	0x0058,
+	0x3a44,
+	0x0075,
 	0x0000,
 	0x0000,
 	0x2820,
@@ -864,13 +864,13 @@ u16 dmem_1d[] = {
 	0x0000,
 };
 
-size_t dmem_1d_size = sizeof(dmem_1d) / sizeof(u16);
+size_t dmem_1d_size = ARRAY_SIZE(dmem_1d);
 
 u16 dmem_2d[] = {
 	0x0000,
 	0x0000,
 	0x0000,
-	0x0a6a,
+	0x0c80,
 	0x0002,
 	0x0000,
 	0x0018,
@@ -883,7 +883,7 @@ u16 dmem_2d[] = {
 	0x0100,
 	0x0000,
 	0x0100,
-	0x1f7f,
+	0x2080,
 	0x0000,
 	0x0310,
 	0x0000,
@@ -897,13 +897,13 @@ u16 dmem_2d[] = {
 	0x4d66,
 	0x4f08,
 	0x0000,
-	0x0006,
+	0x0004,
 	0x2d54,
 	0x0033,
 	0x4d66,
 	0x4f08,
 	0x0000,
-	0x0006,
+	0x0004,
 	0x0000,
 	0x0000,
 	0x0000,
@@ -922,13 +922,13 @@ u16 dmem_2d[] = {
 	0x6600,
 	0x084d,
 	0x004f,
-	0x0600,
+	0x0400,
 	0x5400,
 	0x332d,
 	0x6600,
 	0x084d,
 	0x004f,
-	0x0600,
+	0x0400,
 	0x0000,
 	0x0000,
 	0x0000,
@@ -1431,8 +1431,8 @@ u16 dmem_2d[] = {
 	0x0000,
 	0x0000,
 	0x0000,
-	0x9f38,
-	0x0058,
+	0x3a44,
+	0x0075,
 	0x0000,
 	0x321e,
 	0x0100,
@@ -1571,4 +1571,4 @@ u16 dmem_2d[] = {
 	0x0000,
 };
 
-size_t dmem_2d_size = sizeof(dmem_2d) / sizeof(u16);
+size_t dmem_2d_size = ARRAY_SIZE(dmem_2d);
diff --git a/board/freescale/s32-gen1/s32g274a/dq_swap_cfg.c b/board/freescale/s32-gen1/s32g274a/dq_swap_cfg.c
index 3385ead004..8eb64fa26b 100644
--- a/board/freescale/s32-gen1/s32g274a/dq_swap_cfg.c
+++ b/board/freescale/s32-gen1/s32g274a/dq_swap_cfg.c
@@ -66,4 +66,4 @@ struct dqconf dq_swap_cfg[] = {
 	{0x4039a84c, 0x07},
 };
 
-size_t dq_swap_cfg_size = sizeof(dq_swap_cfg) / sizeof(struct dqconf);
+size_t dq_swap_cfg_size = ARRAY_SIZE(dq_swap_cfg);
diff --git a/board/freescale/s32-gen1/s32g274a/phy_cfg.c b/board/freescale/s32-gen1/s32g274a/phy_cfg.c
index de5216a57f..3e7e4f3fa8 100644
--- a/board/freescale/s32-gen1/s32g274a/phy_cfg.c
+++ b/board/freescale/s32-gen1/s32g274a/phy_cfg.c
@@ -31,7 +31,7 @@
 
 #include "ddr_init.h"
 
-struct regconf phy_cfg[] = {
+struct regconf_16 phy_cfg[] = {
 	{0x4038040c, 0x00000001},
 	{0x40380bdc, 0x00000001},
 	{0x403945dc, 0x000001ff},
@@ -55,11 +55,11 @@ struct regconf phy_cfg[] = {
 	{0x403816dc, 0x00000019},
 	{0x40381494, 0x00000002},
 	{0x40380c58, 0x00000000},
-	{0x40381438, 0x000000e3},
+	{0x40381438, 0x000001e3},
 	{0x403814fc, 0x00000002},
 	{0x40381618, 0x00000212},
 	{0x40381608, 0x00000061},
-	{0x40381530, 0x00000007},
+	{0x40381530, 0x00000003},
 	{0x403945a0, 0x00000600},
 	{0x403945a4, 0x00000600},
 	{0x403965a0, 0x00000600},
@@ -90,7 +90,7 @@ struct regconf phy_cfg[] = {
 	{0x403815ec, 0x00000004},
 	{0x40381528, 0x00000011},
 	{0x40381668, 0x00000002},
-	{0x40381314, 0x0000029b},
+	{0x40381314, 0x00000320},
 	{0x40381640, 0x00000009},
 	{0x40381690, 0x00000134},
 	{0x4039451c, 0x00000e20},
@@ -120,4 +120,4 @@ struct regconf phy_cfg[] = {
 	{0x40381478, 0x00000000},
 };
 
-size_t phy_cfg_size = sizeof(phy_cfg) / sizeof(struct regconf);
+size_t phy_cfg_size = ARRAY_SIZE(phy_cfg);
diff --git a/board/freescale/s32-gen1/s32g274a/pie_cfg.c b/board/freescale/s32-gen1/s32g274a/pie_cfg.c
index 98c925efb3..249437a2fc 100644
--- a/board/freescale/s32-gen1/s32g274a/pie_cfg.c
+++ b/board/freescale/s32-gen1/s32g274a/pie_cfg.c
@@ -31,7 +31,7 @@
 
 #include "ddr_init.h"
 
-struct regconf pie_cfg[] = {
+struct regconf_16 pie_cfg[] = {
 	{0x40380c04, 0x00000010},
 	{0x40380c0c, 0x00000400},
 	{0x40380c24, 0x0000010e},
@@ -510,9 +510,9 @@ struct regconf pie_cfg[] = {
 	{0x4038032c, 0x0000020a},
 	{0x40380330, 0x0000020b},
 	{0x403814fc, 0x00000002},
-	{0x40381330, 0x00000053},
-	{0x40381340, 0x000000a6},
-	{0x40381350, 0x00000682},
+	{0x40381330, 0x00000064},
+	{0x40381340, 0x000000c8},
+	{0x40381350, 0x000007d0},
 	{0x40381360, 0x0000002c},
 	{0x40380ce4, 0x00000000},
 	{0x40380cec, 0x00000173},
@@ -592,4 +592,4 @@ struct regconf pie_cfg[] = {
 	{0x40380bec, 0x00000002},
 };
 
-size_t pie_cfg_size = sizeof(pie_cfg) / sizeof(struct regconf);
+size_t pie_cfg_size = ARRAY_SIZE(pie_cfg);
diff --git a/board/freescale/s32-gen1/s32g274a/rev2/ddrc_cfg_rev2.c b/board/freescale/s32-gen1/s32g274a/rev2/ddrc_cfg_rev2.c
deleted file mode 100644
index a97192d69b..0000000000
--- a/board/freescale/s32-gen1/s32g274a/rev2/ddrc_cfg_rev2.c
+++ /dev/null
@@ -1,181 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2020-2021 NXP
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- *
- * 1. Redistributions of source code must retain the above copyright notice,
- * this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- *
- * 3. Neither the name of the copyright holder nor the names of its
- * contributors may be used to endorse or promote products derived from this
- * software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-
-#include "ddr_init.h"
-
-struct regconf ddrc_cfg_rev2[] = {
-	{0x4007c604, 0x00000000},
-#ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x4007c608, 0x37ffffff},
-#else
-	{0x4007c608, 0x00000000},
-#endif
-	{0x403c0000, 0x83080020},
-	{0x403c0010, 0x00000030},
-	{0x403c0014, 0x00000000},
-	{0x403c001c, 0x00000000},
-	{0x403c0020, 0x00000202},
-	{0x403c0024, 0x0186a000},
-	{0x403c002c, 0x00000001},
-	{0x403c0030, 0x00000020},
-	{0x403c0034, 0x00402010},
-	{0x403c0038, 0x00000000},
-	{0x403c0050, 0x00210070},
-	{0x403c0054, 0x00000000},
-	{0x403c0060, 0x00000000},
-	{0x403c0064, 0x006100e0},
-	{0x403c0068, 0x008c0000},
-#ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0070, 0x033f7f54},
-	{0x403c0074, 0x00000780},
-#else
-	{0x403c0070, 0x033f7f40},
-	{0x403c0074, 0x000007b0},
-#endif
-	{0x403c007c, 0x00000700},
-	{0x403c00b8, 0x00000000},
-	{0x403c00bc, 0x00000000},
-	{0x403c00c0, 0x00000000},
-	{0x403c00c4, 0x00001000},
-	{0x403c00d0, 0xc003061c},
-	{0x403c00d4, 0x009e0000},
-	{0x403c00d8, 0x00000d05},
-	{0x403c00dc, 0x0054002d},
-	{0x403c00e0, 0x00330008},
-	{0x403c00e4, 0x00100004},
-	{0x403c00e8, 0x0066004d},
-	{0x403c00ec, 0x0006004f},
-	{0x403c00f0, 0x00000000},
-	{0x403c00f4, 0x00000779},
-	{0x403c0100, 0x1a201b22},
-	{0x403c0104, 0x00060633},
-	{0x403c0108, 0x070e1517},
-	{0x403c010c, 0x00c0c000},
-	{0x403c0110, 0x0f04080f},
-	{0x403c0114, 0x02040c0c},
-	{0x403c0118, 0x01010007},
-	{0x403c011c, 0x00000401},
-	{0x403c0120, 0x03034405},
-	{0x403c0124, 0x0004040d},
-	{0x403c0128, 0x001c180a},
-	{0x403c012c, 0x440c021c},
-	{0x403c0130, 0x00020000},
-	{0x403c0134, 0x0c100002},
-	{0x403c0138, 0x000000e6},
-	{0x403c013c, 0x00000000},
-	{0x403c0180, 0xc3200018},
-	{0x403c0184, 0x028061a8},
-	{0x403c0188, 0x00000000},
-	{0x403c0190, 0x0497820a},
-	{0x403c0194, 0x00080303},
-	{0x403c0198, 0x07000000},
-	{0x403c019c, 0x00000000},
-	{0x403c01a0, 0xe0400018},
-	{0x403c01a4, 0x00df00e4},
-	{0x403c01a8, 0x80000000},
-	{0x403c01b0, 0x00000051},
-	{0x403c01b4, 0x0000170a},
-	{0x403c01b8, 0x00000000},
-	{0x403c01c0, 0x00000001},
-	{0x403c01c4, 0x00000001},
-#ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0200, 0x00000014},
-	{0x403c0204, 0x00050505},
-#else
-	{0x403c0200, 0x00000017},
-	{0x403c0204, 0x00080808},
-#endif
-	{0x403c0208, 0x00000000},
-#ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c020c, 0x14141400},
-#else
-	{0x403c020c, 0x00000000},
-#endif
-	{0x403c0210, 0x00001f1f},
-#ifdef CONFIG_S32GEN1_DRAM_INLINE_ECC
-	{0x403c0214, 0x04040404},
-	{0x403c0218, 0x04040404},
-#else
-	{0x403c0214, 0x07070707},
-	{0x403c0218, 0x07070707},
-#endif
-	{0x403c021c, 0x0000000f},
-	{0x403c0220, 0x00003f3f},
-	{0x403c0224, 0x00000000},
-	{0x403c0228, 0x00000000},
-	{0x403c022c, 0x00000000},
-	{0x403c0240, 0x04000400},
-	{0x403c0244, 0x00000000},
-	{0x403c0250, 0x29001505},
-	{0x403c0254, 0x0000002c},
-	{0x403c025c, 0x5900575b},
-	{0x403c0264, 0x90000096},
-	{0x403c026c, 0x1000012c},
-	{0x403c0300, 0x00000000},
-	{0x403c0304, 0x00000000},
-	{0x403c030c, 0x00000000},
-	{0x403c0320, 0x00000001},
-	{0x403c0330, 0x00b03033},
-	{0x403c0334, 0x00000000},
-	{0x403c036c, 0x00000011},
-	{0x403c0374, 0x00000000},
-	{0x403c037c, 0x00000000},
-	{0x403c0384, 0x00000000},
-	{0x403c03c0, 0x00000003},
-	{0x403c03e0, 0x00010001},
-	{0x403c03e8, 0x00010001},
-	{0x403c0400, 0x00000111},
-	{0x403c0404, 0x000010f3},
-	{0x403c0408, 0x000072ff},
-	{0x403c0490, 0x00000000},
-	{0x403c0494, 0x00000e00},
-	{0x403c0498, 0x006207ff},
-	{0x403c049c, 0x01010e07},
-	{0x403c04a0, 0x034b07ff},
-	{0x403c04b4, 0x00000000},
-	{0x403c04b8, 0x00004000},
-	{0x403c0540, 0x00000000},
-	{0x403c0544, 0x02000e00},
-	{0x403c0548, 0x00000000},
-	{0x403c054c, 0x00000e00},
-	{0x403c0550, 0x00000000},
-	{0x403c0564, 0x00000000},
-	{0x403c0568, 0x00004000},
-	{0x403c05f0, 0x00000000},
-	{0x403c05f4, 0x02000e00},
-	{0x403c05f8, 0x00000000},
-	{0x403c05fc, 0x00000e00},
-	{0x403c0600, 0x00000000},
-	{0x403c0f24, 0x0000ff10},
-	{0x403c0f2c, 0x00000000},
-};
-
-size_t ddrc_cfg_size_rev2 = sizeof(ddrc_cfg_rev2) / sizeof(struct regconf);
diff --git a/board/freescale/s32-gen1/s32g274a/rev2/dmem_cfg_rev2.c b/board/freescale/s32-gen1/s32g274a/rev2/dmem_cfg_rev2.c
deleted file mode 100644
index c55ff3296a..0000000000
--- a/board/freescale/s32-gen1/s32g274a/rev2/dmem_cfg_rev2.c
+++ /dev/null
@@ -1,1574 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2020-2021 NXP
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- *
- * 1. Redistributions of source code must retain the above copyright notice,
- * this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- *
- * 3. Neither the name of the copyright holder nor the names of its
- * contributors may be used to endorse or promote products derived from this
- * software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-
-#include "ddr_init.h"
-
-u16 dmem_1d_rev2[] = {
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0c80,
-	0x0002,
-	0x0000,
-	0x0018,
-	0x0000,
-	0x131f,
-	0x00ff,
-	0x0000,
-	0x0003,
-	0x0001,
-	0x0100,
-	0x0000,
-	0x0100,
-	0x0000,
-	0x0000,
-	0x0310,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x2d54,
-	0x0033,
-	0x4d66,
-	0x4f08,
-	0x0000,
-	0x0006,
-	0x2d54,
-	0x0033,
-	0x4d66,
-	0x4f08,
-	0x0000,
-	0x0006,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x1000,
-	0x0003,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x5400,
-	0x332d,
-	0x6600,
-	0x084d,
-	0x004f,
-	0x0600,
-	0x5400,
-	0x332d,
-	0x6600,
-	0x084d,
-	0x004f,
-	0x0600,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x00ff,
-	0x0000,
-	0x0000,
-	0x014a,
-	0x0181,
-	0x0118,
-	0x0118,
-	0x016f,
-	0x016f,
-	0x0159,
-	0x0181,
-	0x0120,
-	0x0120,
-	0x0000,
-	0x0000,
-	0x701c,
-	0x61a8,
-	0x35ac,
-	0x35ac,
-	0x125c,
-	0x125c,
-	0xc738,
-	0xb0f4,
-	0x6590,
-	0x6590,
-	0x0000,
-	0x0000,
-	0x9f38,
-	0x0058,
-	0x0000,
-	0x0000,
-	0x2820,
-	0x140f,
-	0x1f02,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01ff,
-	0x0100,
-	0xb400,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01f4,
-	0x0000,
-	0xb900,
-	0x01f0,
-	0x0000,
-	0xba00,
-	0x01f0,
-	0x0000,
-	0xbb00,
-	0x01f0,
-	0x0000,
-	0x0100,
-	0x01f0,
-	0x0000,
-	0x1300,
-	0x01f0,
-	0x0000,
-	0xf900,
-	0x04f0,
-	0x0000,
-	0xfa02,
-	0x04f0,
-	0x0000,
-	0xfb00,
-	0x04f0,
-	0x0000,
-	0x6004,
-	0x07f0,
-	0x0800,
-	0x6500,
-	0x07f0,
-	0x0000,
-	0x6200,
-	0x01ff,
-	0x0000,
-	0x0200,
-	0x01f0,
-	0x2000,
-	0x1f02,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01ff,
-	0x0100,
-	0xb400,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01f4,
-	0x0000,
-	0xb900,
-	0x01f0,
-	0x0000,
-	0xba00,
-	0x01f0,
-	0x0000,
-	0xbb00,
-	0x01f0,
-	0x0000,
-	0x0100,
-	0x01f0,
-	0x0000,
-	0x1100,
-	0x01f0,
-	0x0100,
-	0x1200,
-	0x01f0,
-	0x0000,
-	0x18f0,
-	0x01f0,
-	0x0100,
-	0x1300,
-	0x01f0,
-	0x0000,
-	0xf900,
-	0x04f0,
-	0x0000,
-	0xfa02,
-	0x04f0,
-	0x0000,
-	0xfb00,
-	0x04f0,
-	0x0000,
-	0x6204,
-	0x01ff,
-	0x0000,
-	0x6200,
-	0x01f0,
-	0x0f00,
-	0x6200,
-	0x01f4,
-	0xf000,
-	0x0200,
-	0x01f0,
-	0x0400,
-	0x1f02,
-	0x01f0,
-	0x0000,
-	0x3b00,
-	0x02f0,
-	0x0100,
-	0xb200,
-	0x01ff,
-	0x0000,
-	0xb200,
-	0x01f0,
-	0x0100,
-	0xb400,
-	0x01ff,
-	0x0100,
-	0xb400,
-	0x01f0,
-	0x0000,
-	0xb900,
-	0x01f0,
-	0x0000,
-	0xba00,
-	0x01f0,
-	0x0000,
-	0xbb00,
-	0x01f0,
-	0x0000,
-	0x0100,
-	0x01f0,
-	0x0000,
-	0x6000,
-	0x07f0,
-	0x0100,
-	0x6500,
-	0x07f0,
-	0xff00,
-	0x2601,
-	0x07ff,
-	0x0000,
-	0x2700,
-	0x07ff,
-	0x0000,
-	0x1300,
-	0x01f0,
-	0x0200,
-	0x3200,
-	0x01ff,
-	0x0000,
-	0x6208,
-	0x01ff,
-	0x0000,
-	0x6200,
-	0x01f0,
-	0x0100,
-	0x6200,
-	0x01f4,
-	0x0100,
-	0x0200,
-	0x01f0,
-	0x0800,
-	0x1f02,
-	0x01f0,
-	0x0000,
-	0xb200,
-	0x01ff,
-	0x0000,
-	0xb200,
-	0x01f0,
-	0x0100,
-	0xb200,
-	0x01f4,
-	0x0100,
-	0xb400,
-	0x01ff,
-	0x0100,
-	0xb400,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01f4,
-	0x0000,
-	0xb900,
-	0x01f0,
-	0x0000,
-	0xba00,
-	0x01f0,
-	0x0000,
-	0xbb00,
-	0x01f0,
-	0x0000,
-	0x1100,
-	0x01f0,
-	0x0100,
-	0x1201,
-	0x01f0,
-	0x0100,
-	0x1300,
-	0x01f0,
-	0x0200,
-	0x1800,
-	0x01f0,
-	0x0100,
-	0x6000,
-	0x07f0,
-	0x0100,
-	0x6500,
-	0x07f0,
-	0xff00,
-	0x2601,
-	0x07ff,
-	0xff00,
-	0x27ff,
-	0x07ff,
-	0xff00,
-	0x62ff,
-	0x01ff,
-	0x0000,
-	0x6200,
-	0x01f0,
-	0x0100,
-	0x6200,
-	0x01f4,
-	0x1000,
-	0x3200,
-	0x01ff,
-	0x0000,
-	0x0208,
-	0x01f0,
-	0x1000,
-	0x0002,
-	0x0000,
-	0x020d,
-	0x0301,
-	0x0c0b,
-	0x160e,
-	0x1004,
-	0x1811,
-	0x0c06,
-	0x1610,
-	0x201c,
-	0x2824,
-	0x0c06,
-	0x1812,
-	0x241e,
-	0x2c28,
-	0x0a06,
-	0x140e,
-	0x1c18,
-	0x2420,
-	0x0a06,
-	0x1610,
-	0x201a,
-	0x2824,
-	0x006e,
-	0x0002,
-	0x0001,
-	0x00fd,
-	0x0004,
-	0x000f,
-	0x0060,
-	0x0007,
-	0x0000,
-	0x00e8,
-	0x0004,
-	0x00ff,
-	0x00fc,
-	0x0004,
-	0x0404,
-	0x003a,
-	0x0002,
-	0x0002,
-	0x0011,
-	0x0007,
-	0x0000,
-	0x0000,
-};
-
-size_t dmem_1d_size_rev2 = sizeof(dmem_1d_rev2) / sizeof(u16);
-
-u16 dmem_2d_rev2[] = {
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0c80,
-	0x0002,
-	0x0000,
-	0x0018,
-	0x0000,
-	0x0061,
-	0x00ff,
-	0x0000,
-	0x0003,
-	0x0001,
-	0x0100,
-	0x0000,
-	0x0100,
-	0x1f7f,
-	0x0000,
-	0x0310,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x2d54,
-	0x0033,
-	0x4d66,
-	0x4f08,
-	0x0000,
-	0x0006,
-	0x2d54,
-	0x0033,
-	0x4d66,
-	0x4f08,
-	0x0000,
-	0x0006,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x1000,
-	0x0003,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x5400,
-	0x332d,
-	0x6600,
-	0x084d,
-	0x004f,
-	0x0600,
-	0x5400,
-	0x332d,
-	0x6600,
-	0x084d,
-	0x004f,
-	0x0600,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0xff00,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0100,
-	0x0014,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x014a,
-	0x0181,
-	0x0118,
-	0x0118,
-	0x016f,
-	0x016f,
-	0x0159,
-	0x0181,
-	0x0120,
-	0x0120,
-	0x0000,
-	0x0000,
-	0x701c,
-	0x61a8,
-	0x35ac,
-	0x35ac,
-	0x125c,
-	0x125c,
-	0xc738,
-	0xb0f4,
-	0x6590,
-	0x6590,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x9f38,
-	0x0058,
-	0x0000,
-	0x321e,
-	0x0100,
-	0x0000,
-	0xffff,
-	0x01e0,
-	0x00f0,
-	0x00a0,
-	0x0078,
-	0x0060,
-	0x0050,
-	0x0043,
-	0x003c,
-	0x0035,
-	0x0030,
-	0x002c,
-	0x0028,
-	0x0025,
-	0x0022,
-	0x0020,
-	0x001e,
-	0x001c,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0000,
-	0x0100,
-	0x0302,
-	0x0706,
-	0x0b0a,
-	0x0f0e,
-	0x1b1a,
-	0x1f1e,
-	0x3b3a,
-	0x3f3e,
-	0x0000,
-	0x2820,
-	0x140f,
-	0x1f02,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01ff,
-	0x0100,
-	0xb400,
-	0x01f0,
-	0x0000,
-	0xb400,
-	0x01f4,
-	0x0000,
-	0xb900,
-	0x01f0,
-	0x0000,
-	0xba00,
-	0x01f0,
-	0x0000,
-	0xbb00,
-	0x01f0,
-	0x0000,
-	0x0100,
-	0x01f0,
-	0x0000,
-	0x1300,
-	0x01f0,
-	0x0000,
-	0xf900,
-	0x04f0,
-	0x0000,
-	0xfa02,
-	0x04f0,
-	0x0000,
-	0xfb00,
-	0x04f0,
-	0x0000,
-	0x6004,
-	0x07f0,
-	0x0800,
-	0x6500,
-	0x07f0,
-	0x0000,
-	0x6200,
-	0x01ff,
-	0x0000,
-	0x0200,
-	0x01f0,
-	0x2000,
-	0x0002,
-	0x0000,
-	0x020d,
-	0x0301,
-	0x0c0b,
-	0x160e,
-	0x1004,
-	0x1811,
-	0x0c06,
-	0x1610,
-	0x201c,
-	0x2824,
-	0x0c06,
-	0x1812,
-	0x241e,
-	0x2c28,
-	0x0a06,
-	0x140e,
-	0x1c18,
-	0x2420,
-	0x0a06,
-	0x1610,
-	0x201a,
-	0x2824,
-	0x006e,
-	0x0002,
-	0x0001,
-	0x00fd,
-	0x0004,
-	0x000f,
-	0x0060,
-	0x0007,
-	0x0000,
-	0x00e8,
-	0x0004,
-	0x00ff,
-	0x00fc,
-	0x0004,
-	0x0404,
-	0x003a,
-	0x0002,
-	0x0002,
-	0x0011,
-	0x0007,
-	0x0000,
-	0x0000,
-};
-
-size_t dmem_2d_size_rev2 = sizeof(dmem_2d_rev2) / sizeof(u16);
diff --git a/board/freescale/s32-gen1/s32g274a/rev2/phy_cfg_rev2.c b/board/freescale/s32-gen1/s32g274a/rev2/phy_cfg_rev2.c
deleted file mode 100644
index bee3e013e4..0000000000
--- a/board/freescale/s32-gen1/s32g274a/rev2/phy_cfg_rev2.c
+++ /dev/null
@@ -1,123 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2020-2021 NXP
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- *
- * 1. Redistributions of source code must retain the above copyright notice,
- * this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- *
- * 3. Neither the name of the copyright holder nor the names of its
- * contributors may be used to endorse or promote products derived from this
- * software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-
-#include "ddr_init.h"
-
-struct regconf phy_cfg_rev2[] = {
-	{0x4038040c, 0x00000001},
-	{0x40380bdc, 0x00000001},
-	{0x403945dc, 0x000001ff},
-	{0x403945e0, 0x000001ff},
-	{0x403965dc, 0x000001ff},
-	{0x403965e0, 0x000001ff},
-	{0x403985dc, 0x000001ff},
-	{0x403985e0, 0x000001ff},
-	{0x4039a5dc, 0x000001ff},
-	{0x4039a5e0, 0x000001ff},
-	{0x403803e8, 0x000001ff},
-	{0x403823e8, 0x000001ff},
-	{0x403843e8, 0x000001ff},
-	{0x403863e8, 0x000001ff},
-	{0x403883e8, 0x000001ff},
-	{0x4038a3e8, 0x000001ff},
-	{0x4038c3e8, 0x000001ff},
-	{0x4038e3e8, 0x000001ff},
-	{0x403903e8, 0x000001ff},
-	{0x403923e8, 0x000001ff},
-	{0x403816dc, 0x00000019},
-	{0x40381494, 0x00000002},
-	{0x40380c58, 0x00000000},
-	{0x40381438, 0x000000e3},
-	{0x403814fc, 0x00000002},
-	{0x40381618, 0x00000212},
-	{0x40381608, 0x00000061},
-	{0x40381530, 0x00000007},
-	{0x403945a0, 0x00000600},
-	{0x403945a4, 0x00000600},
-	{0x403965a0, 0x00000600},
-	{0x403965a4, 0x00000600},
-	{0x403985a0, 0x00000600},
-	{0x403985a4, 0x00000600},
-	{0x4039a5a0, 0x00000600},
-	{0x4039a5a4, 0x00000600},
-	{0x4039454c, 0x00000e3f},
-	{0x40394550, 0x00000e3f},
-	{0x4039654c, 0x00000e3f},
-	{0x40396550, 0x00000e3f},
-	{0x4039854c, 0x00000e3f},
-	{0x40398550, 0x00000e3f},
-	{0x4039a54c, 0x00000e3f},
-	{0x4039a550, 0x00000e3f},
-	{0x403803e0, 0x0000007f},
-	{0x403823e0, 0x0000007f},
-	{0x403843e0, 0x0000007f},
-	{0x403863e0, 0x0000007f},
-	{0x403883e0, 0x0000007f},
-	{0x4038a3e0, 0x0000007f},
-	{0x4038c3e0, 0x0000007f},
-	{0x4038e3e0, 0x0000007f},
-	{0x403903e0, 0x0000007f},
-	{0x403923e0, 0x0000007f},
-	{0x403813c8, 0x00000003},
-	{0x403815ec, 0x00000004},
-	{0x40381528, 0x00000011},
-	{0x40381668, 0x00000002},
-	{0x40381314, 0x00000320},
-	{0x40381640, 0x00000009},
-	{0x40381690, 0x00000134},
-	{0x4039451c, 0x00000e20},
-	{0x40394520, 0x00000e20},
-	{0x4039651c, 0x00000e20},
-	{0x40396520, 0x00000e20},
-	{0x4039851c, 0x00000e20},
-	{0x40398520, 0x00000e20},
-	{0x4039a51c, 0x00000e20},
-	{0x4039a520, 0x00000e20},
-	{0x403817c0, 0x00000001},
-	{0x403813d0, 0x00000001},
-	{0x40381798, 0x00000000},
-	{0x4038179c, 0x00000000},
-	{0x403817a0, 0x00004444},
-	{0x403817a4, 0x00008888},
-	{0x403817a8, 0x00005555},
-	{0x403817ac, 0x00000000},
-	{0x403817b0, 0x00000000},
-	{0x403817b4, 0x0000f000},
-	{0x4039456c, 0x00000500},
-	{0x4039656c, 0x00000500},
-	{0x4039856c, 0x00000500},
-	{0x4039a56c, 0x00000500},
-	{0x4038144c, 0x00000000},
-	{0x40381480, 0x00000000},
-	{0x40381478, 0x00000000},
-};
-
-size_t phy_cfg_size_rev2 = sizeof(phy_cfg_rev2) / sizeof(struct regconf);
diff --git a/board/freescale/s32-gen1/s32g274a/rev2/pie_cfg_rev2.c b/board/freescale/s32-gen1/s32g274a/rev2/pie_cfg_rev2.c
deleted file mode 100644
index d64b48db1f..0000000000
--- a/board/freescale/s32-gen1/s32g274a/rev2/pie_cfg_rev2.c
+++ /dev/null
@@ -1,595 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2020-2021 NXP
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- *
- * 1. Redistributions of source code must retain the above copyright notice,
- * this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- *
- * 3. Neither the name of the copyright holder nor the names of its
- * contributors may be used to endorse or promote products derived from this
- * software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-
-#include "ddr_init.h"
-
-struct regconf pie_cfg_rev2[] = {
-	{0x40380c04, 0x00000010},
-	{0x40380c0c, 0x00000400},
-	{0x40380c24, 0x0000010e},
-	{0x40380c3c, 0x00000000},
-	{0x40380c54, 0x00000000},
-	{0x40380c6c, 0x00000008},
-	{0x40380dc0, 0x0000000b},
-	{0x40380dc8, 0x00000480},
-	{0x40380dd0, 0x00000109},
-	{0x40380dd8, 0x00000008},
-	{0x40380de0, 0x00000448},
-	{0x40380de8, 0x00000139},
-	{0x40380df0, 0x00000008},
-	{0x40380df8, 0x00000478},
-	{0x40380e00, 0x00000109},
-	{0x40380e08, 0x00000000},
-	{0x40380e10, 0x000000e8},
-	{0x40380e18, 0x00000109},
-	{0x40380e20, 0x00000002},
-	{0x40380e28, 0x00000010},
-	{0x40380e30, 0x00000139},
-	{0x40380e38, 0x0000000b},
-	{0x40380e40, 0x000007c0},
-	{0x40380e48, 0x00000139},
-	{0x40380e50, 0x00000044},
-	{0x40380e58, 0x00000633},
-	{0x40380e60, 0x00000159},
-	{0x40380e68, 0x0000014f},
-	{0x40380e70, 0x00000630},
-	{0x40380e78, 0x00000159},
-	{0x40380e80, 0x00000047},
-	{0x40380e88, 0x00000633},
-	{0x40380e90, 0x00000149},
-	{0x40380e98, 0x0000004f},
-	{0x40380ea0, 0x00000633},
-	{0x40380ea8, 0x00000179},
-	{0x40380eb0, 0x00000008},
-	{0x40380eb8, 0x000000e0},
-	{0x40380ec0, 0x00000109},
-	{0x40380ec8, 0x00000000},
-	{0x40380ed0, 0x000007c8},
-	{0x40380ed8, 0x00000109},
-	{0x40380ee0, 0x00000000},
-	{0x40380ee8, 0x00000001},
-	{0x40380ef0, 0x00000008},
-	{0x40380ef8, 0x00000000},
-	{0x40380f00, 0x0000045a},
-	{0x40380f08, 0x00000009},
-	{0x40380f10, 0x00000000},
-	{0x40380f18, 0x00000448},
-	{0x40380f20, 0x00000109},
-	{0x40380f28, 0x00000040},
-	{0x40380f30, 0x00000633},
-	{0x40380f38, 0x00000179},
-	{0x40380f40, 0x00000001},
-	{0x40380f48, 0x00000618},
-	{0x40380f50, 0x00000109},
-	{0x40380f58, 0x000040c0},
-	{0x40380f60, 0x00000633},
-	{0x40380f68, 0x00000149},
-	{0x40380f70, 0x00000008},
-	{0x40380f78, 0x00000004},
-	{0x40380f80, 0x00000048},
-	{0x40380f88, 0x00004040},
-	{0x40380f90, 0x00000633},
-	{0x40380f98, 0x00000149},
-	{0x40380fa0, 0x00000000},
-	{0x40380fa8, 0x00000004},
-	{0x40380fb0, 0x00000048},
-	{0x40380fb8, 0x00000040},
-	{0x40380fc0, 0x00000633},
-	{0x40380fc8, 0x00000149},
-	{0x40380fd0, 0x00000010},
-	{0x40380fd8, 0x00000004},
-	{0x40380fe0, 0x00000018},
-	{0x40380fe8, 0x00000000},
-	{0x40380ff0, 0x00000004},
-	{0x40380ff8, 0x00000078},
-	{0x40381000, 0x00000549},
-	{0x40381008, 0x00000633},
-	{0x40381010, 0x00000159},
-	{0x40381018, 0x00000d49},
-	{0x40381020, 0x00000633},
-	{0x40381028, 0x00000159},
-	{0x40381030, 0x0000094a},
-	{0x40381038, 0x00000633},
-	{0x40381040, 0x00000159},
-	{0x40381048, 0x00000441},
-	{0x40381050, 0x00000633},
-	{0x40381058, 0x00000149},
-	{0x40381060, 0x00000042},
-	{0x40381068, 0x00000633},
-	{0x40381070, 0x00000149},
-	{0x40381078, 0x00000001},
-	{0x40381080, 0x00000633},
-	{0x40381088, 0x00000149},
-	{0x40381090, 0x00000000},
-	{0x40381098, 0x000000e0},
-	{0x403810a0, 0x00000109},
-	{0x403810a8, 0x0000000a},
-	{0x403810b0, 0x00000010},
-	{0x403810b8, 0x00000109},
-	{0x403810c0, 0x00000009},
-	{0x403810c8, 0x000003c0},
-	{0x403810d0, 0x00000149},
-	{0x403810d8, 0x00000009},
-	{0x403810e0, 0x000003c0},
-	{0x403810e8, 0x00000159},
-	{0x403810f0, 0x00000018},
-	{0x403810f8, 0x00000010},
-	{0x40381100, 0x00000109},
-	{0x40381108, 0x00000000},
-	{0x40381110, 0x000003c0},
-	{0x40381118, 0x00000109},
-	{0x40381120, 0x00000018},
-	{0x40381128, 0x00000004},
-	{0x40381130, 0x00000048},
-	{0x40381134, 0x00000018},
-	{0x40381138, 0x00000004},
-	{0x4038113c, 0x00000058},
-	{0x40381140, 0x0000000b},
-	{0x40381144, 0x00000010},
-	{0x40381148, 0x00000109},
-	{0x4038114c, 0x00000001},
-	{0x40381150, 0x00000010},
-	{0x40381154, 0x00000109},
-	{0x40381158, 0x00000005},
-	{0x4038115c, 0x000007c0},
-	{0x40381160, 0x00000109},
-	{0x40380000, 0x00000811},
-	{0x40380080, 0x00000880},
-	{0x40380100, 0x00000000},
-	{0x40380180, 0x00000000},
-	{0x40380004, 0x00004008},
-	{0x40380084, 0x00000083},
-	{0x40380104, 0x0000004f},
-	{0x40380184, 0x00000000},
-	{0x40380008, 0x00004040},
-	{0x40380088, 0x00000083},
-	{0x40380108, 0x00000051},
-	{0x40380188, 0x00000000},
-	{0x4038000c, 0x00000811},
-	{0x4038008c, 0x00000880},
-	{0x4038010c, 0x00000000},
-	{0x4038018c, 0x00000000},
-	{0x40380010, 0x00000720},
-	{0x40380090, 0x0000000f},
-	{0x40380110, 0x00001740},
-	{0x40380190, 0x00000000},
-	{0x40380014, 0x00000016},
-	{0x40380094, 0x00000083},
-	{0x40380114, 0x0000004b},
-	{0x40380194, 0x00000000},
-	{0x40380018, 0x00000716},
-	{0x40380098, 0x0000000f},
-	{0x40380118, 0x00002001},
-	{0x40380198, 0x00000000},
-	{0x4038001c, 0x00000716},
-	{0x4038009c, 0x0000000f},
-	{0x4038011c, 0x00002800},
-	{0x4038019c, 0x00000000},
-	{0x40380020, 0x00000716},
-	{0x403800a0, 0x0000000f},
-	{0x40380120, 0x00000f00},
-	{0x403801a0, 0x00000000},
-	{0x40380024, 0x00000720},
-	{0x403800a4, 0x0000000f},
-	{0x40380124, 0x00001400},
-	{0x403801a4, 0x00000000},
-	{0x40380028, 0x00000e08},
-	{0x403800a8, 0x00000c15},
-	{0x40380128, 0x00000000},
-	{0x403801a8, 0x00000000},
-	{0x4038002c, 0x00000625},
-	{0x403800ac, 0x00000015},
-	{0x4038012c, 0x00000000},
-	{0x403801ac, 0x00000000},
-	{0x40380030, 0x00004028},
-	{0x403800b0, 0x00000080},
-	{0x40380130, 0x00000000},
-	{0x403801b0, 0x00000000},
-	{0x40380034, 0x00000e08},
-	{0x403800b4, 0x00000c1a},
-	{0x40380134, 0x00000000},
-	{0x403801b4, 0x00000000},
-	{0x40380038, 0x00000625},
-	{0x403800b8, 0x0000001a},
-	{0x40380138, 0x00000000},
-	{0x403801b8, 0x00000000},
-	{0x4038003c, 0x00004040},
-	{0x403800bc, 0x00000080},
-	{0x4038013c, 0x00000000},
-	{0x403801bc, 0x00000000},
-	{0x40380040, 0x00002604},
-	{0x403800c0, 0x00000015},
-	{0x40380140, 0x00000000},
-	{0x403801c0, 0x00000000},
-	{0x40380044, 0x00000708},
-	{0x403800c4, 0x00000005},
-	{0x40380144, 0x00000000},
-	{0x403801c4, 0x00002002},
-	{0x40380048, 0x00000008},
-	{0x403800c8, 0x00000080},
-	{0x40380148, 0x00000000},
-	{0x403801c8, 0x00000000},
-	{0x4038004c, 0x00002604},
-	{0x403800cc, 0x0000001a},
-	{0x4038014c, 0x00000000},
-	{0x403801cc, 0x00000000},
-	{0x40380050, 0x00000708},
-	{0x403800d0, 0x0000000a},
-	{0x40380150, 0x00000000},
-	{0x403801d0, 0x00002002},
-	{0x40380054, 0x00004040},
-	{0x403800d4, 0x00000080},
-	{0x40380154, 0x00000000},
-	{0x403801d4, 0x00000000},
-	{0x40380058, 0x0000060a},
-	{0x403800d8, 0x00000015},
-	{0x40380158, 0x00001200},
-	{0x403801d8, 0x00000000},
-	{0x4038005c, 0x0000061a},
-	{0x403800dc, 0x00000015},
-	{0x4038015c, 0x00001300},
-	{0x403801dc, 0x00000000},
-	{0x40380060, 0x0000060a},
-	{0x403800e0, 0x0000001a},
-	{0x40380160, 0x00001200},
-	{0x403801e0, 0x00000000},
-	{0x40380064, 0x00000642},
-	{0x403800e4, 0x0000001a},
-	{0x40380164, 0x00001300},
-	{0x403801e4, 0x00000000},
-	{0x40380068, 0x00004808},
-	{0x403800e8, 0x00000880},
-	{0x40380168, 0x00000000},
-	{0x403801e8, 0x00000000},
-	{0x40381164, 0x00000000},
-	{0x40381168, 0x00000790},
-	{0x4038116c, 0x0000011a},
-	{0x40381170, 0x00000008},
-	{0x40381174, 0x000007aa},
-	{0x40381178, 0x0000002a},
-	{0x4038117c, 0x00000010},
-	{0x40381180, 0x000007b2},
-	{0x40381184, 0x0000002a},
-	{0x40381188, 0x00000000},
-	{0x4038118c, 0x000007c8},
-	{0x40381190, 0x00000109},
-	{0x40381194, 0x00000010},
-	{0x40381198, 0x00000010},
-	{0x4038119c, 0x00000109},
-	{0x403811a0, 0x00000010},
-	{0x403811a4, 0x000002a8},
-	{0x403811a8, 0x00000129},
-	{0x403811ac, 0x00000008},
-	{0x403811b0, 0x00000370},
-	{0x403811b4, 0x00000129},
-	{0x403811b8, 0x0000000a},
-	{0x403811bc, 0x000003c8},
-	{0x403811c0, 0x000001a9},
-	{0x403811c4, 0x0000000c},
-	{0x403811c8, 0x00000408},
-	{0x403811cc, 0x00000199},
-	{0x403811d0, 0x00000014},
-	{0x403811d4, 0x00000790},
-	{0x403811d8, 0x0000011a},
-	{0x403811dc, 0x00000008},
-	{0x403811e0, 0x00000004},
-	{0x403811e4, 0x00000018},
-	{0x403811e8, 0x0000000e},
-	{0x403811ec, 0x00000408},
-	{0x403811f0, 0x00000199},
-	{0x403811f4, 0x00000008},
-	{0x403811f8, 0x00008568},
-	{0x403811fc, 0x00000108},
-	{0x40381200, 0x00000018},
-	{0x40381204, 0x00000790},
-	{0x40381208, 0x0000016a},
-	{0x4038120c, 0x00000008},
-	{0x40381210, 0x000001d8},
-	{0x40381214, 0x00000169},
-	{0x40381218, 0x00000010},
-	{0x4038121c, 0x00008558},
-	{0x40381220, 0x00000168},
-	{0x40381224, 0x00000070},
-	{0x40381228, 0x00000788},
-	{0x4038122c, 0x0000016a},
-	{0x40381230, 0x00001ff8},
-	{0x40381234, 0x000085a8},
-	{0x40381238, 0x000001e8},
-	{0x4038123c, 0x00000050},
-	{0x40381240, 0x00000798},
-	{0x40381244, 0x0000016a},
-	{0x40381248, 0x00000060},
-	{0x4038124c, 0x000007a0},
-	{0x40381250, 0x0000016a},
-	{0x40381254, 0x00000008},
-	{0x40381258, 0x00008310},
-	{0x4038125c, 0x00000168},
-	{0x40381260, 0x00000008},
-	{0x40381264, 0x0000a310},
-	{0x40381268, 0x00000168},
-	{0x4038126c, 0x0000000a},
-	{0x40381270, 0x00000408},
-	{0x40381274, 0x00000169},
-	{0x40381278, 0x0000006e},
-	{0x4038127c, 0x00000000},
-	{0x40381280, 0x00000068},
-	{0x40381284, 0x00000000},
-	{0x40381288, 0x00000408},
-	{0x4038128c, 0x00000169},
-	{0x40381290, 0x00000000},
-	{0x40381294, 0x00008310},
-	{0x40381298, 0x00000168},
-	{0x4038129c, 0x00000000},
-	{0x403812a0, 0x0000a310},
-	{0x403812a4, 0x00000168},
-	{0x403812a8, 0x00001ff8},
-	{0x403812ac, 0x000085a8},
-	{0x403812b0, 0x000001e8},
-	{0x403812b4, 0x00000068},
-	{0x403812b8, 0x00000798},
-	{0x403812bc, 0x0000016a},
-	{0x403812c0, 0x00000078},
-	{0x403812c4, 0x000007a0},
-	{0x403812c8, 0x0000016a},
-	{0x403812cc, 0x00000068},
-	{0x403812d4, 0x00000790},
-	{0x40380c08, 0x0000016a},
-	{0x40380c20, 0x00000008},
-	{0x40380c38, 0x00008b10},
-	{0x40380c50, 0x00000168},
-	{0x40380c68, 0x00000008},
-	{0x40380c80, 0x0000ab10},
-	{0x40380c98, 0x00000168},
-	{0x40380cb0, 0x0000000a},
-	{0x40380cc8, 0x00000408},
-	{0x40380cd0, 0x00000169},
-	{0x40380cd8, 0x00000058},
-	{0x40380ce0, 0x00000000},
-	{0x40380ce8, 0x00000068},
-	{0x40380cf0, 0x00000000},
-	{0x40380cf8, 0x00000408},
-	{0x40380d00, 0x00000169},
-	{0x40380d08, 0x00000000},
-	{0x40380d10, 0x00008b10},
-	{0x40380d18, 0x00000168},
-	{0x40380d20, 0x00000001},
-	{0x40380d24, 0x0000ab10},
-	{0x40380d28, 0x00000168},
-	{0x40380d2c, 0x00000000},
-	{0x40380d34, 0x000001d8},
-	{0x40380d3c, 0x00000169},
-	{0x40380d44, 0x00000080},
-	{0x40380d4c, 0x00000790},
-	{0x40380d54, 0x0000016a},
-	{0x40380d5c, 0x00000018},
-	{0x40380d64, 0x000007aa},
-	{0x40380d6c, 0x0000006a},
-	{0x40380d74, 0x0000000a},
-	{0x40380d7c, 0x00000000},
-	{0x40380d84, 0x000001e9},
-	{0x40380d8c, 0x00000008},
-	{0x40380d94, 0x00008080},
-	{0x40380d9c, 0x00000108},
-	{0x40380da4, 0x0000000f},
-	{0x40380dac, 0x00000408},
-	{0x40380db4, 0x00000169},
-	{0x40380dbc, 0x0000000c},
-	{0x40380dc4, 0x00000000},
-	{0x40380dcc, 0x00000068},
-	{0x40380dd4, 0x00000009},
-	{0x40380ddc, 0x00000000},
-	{0x40380de4, 0x000001a9},
-	{0x40380dec, 0x00000000},
-	{0x40380df4, 0x00000408},
-	{0x40380dfc, 0x00000169},
-	{0x40380e04, 0x00000000},
-	{0x40380e0c, 0x00008080},
-	{0x40380e14, 0x00000108},
-	{0x40380e1c, 0x00000008},
-	{0x40380e24, 0x000007aa},
-	{0x40380e2c, 0x0000006a},
-	{0x40380e34, 0x00000000},
-	{0x40380e3c, 0x00008568},
-	{0x40380e44, 0x00000108},
-	{0x40380e4c, 0x000000b7},
-	{0x40380e54, 0x00000790},
-	{0x40380e5c, 0x0000016a},
-	{0x40380e64, 0x0000001f},
-	{0x40380e6c, 0x00000000},
-	{0x40380e74, 0x00000068},
-	{0x40380e7c, 0x00000008},
-	{0x40380e84, 0x00008558},
-	{0x40380e8c, 0x00000168},
-	{0x40380e94, 0x0000000f},
-	{0x40380e9c, 0x00000408},
-	{0x40380ea4, 0x00000169},
-	{0x40380eac, 0x0000000d},
-	{0x40380eb4, 0x00000000},
-	{0x40380ebc, 0x00000068},
-	{0x40380ec4, 0x00000000},
-	{0x40380ecc, 0x00000408},
-	{0x40380ed4, 0x00000169},
-	{0x40380edc, 0x00000000},
-	{0x40380ee4, 0x00008558},
-	{0x40380eec, 0x00000168},
-	{0x40380ef4, 0x00000008},
-	{0x40380efc, 0x000003c8},
-	{0x40380f04, 0x000001a9},
-	{0x40380f0c, 0x00000003},
-	{0x40380f14, 0x00000370},
-	{0x40380f1c, 0x00000129},
-	{0x40380f24, 0x00000020},
-	{0x40380f2c, 0x000002aa},
-	{0x40380f34, 0x00000009},
-	{0x40380f3c, 0x00000008},
-	{0x40380f44, 0x000000e8},
-	{0x40380f4c, 0x00000109},
-	{0x40380f54, 0x00000000},
-	{0x40380f5c, 0x00008140},
-	{0x40380f64, 0x0000010c},
-	{0x40380f6c, 0x00000010},
-	{0x40380f74, 0x00008138},
-	{0x40380f7c, 0x00000104},
-	{0x40380f84, 0x00000008},
-	{0x40380f8c, 0x00000448},
-	{0x40380f94, 0x00000109},
-	{0x40380f9c, 0x0000000f},
-	{0x40380fa4, 0x000007c0},
-	{0x40380fac, 0x00000109},
-	{0x40380fb4, 0x00000000},
-	{0x40380fbc, 0x000000e8},
-	{0x40380fc4, 0x00000109},
-	{0x40380fcc, 0x00000047},
-	{0x40380fd4, 0x00000630},
-	{0x40380fdc, 0x00000109},
-	{0x40380fe4, 0x00000008},
-	{0x40380fec, 0x00000618},
-	{0x40380ff4, 0x00000109},
-	{0x40380ffc, 0x00000008},
-	{0x40381004, 0x000000e0},
-	{0x4038100c, 0x00000109},
-	{0x40381014, 0x00000000},
-	{0x4038101c, 0x000007c8},
-	{0x40381024, 0x00000109},
-	{0x4038102c, 0x00000008},
-	{0x40381034, 0x00008140},
-	{0x4038103c, 0x0000010c},
-	{0x40381044, 0x00000000},
-	{0x4038104c, 0x00000478},
-	{0x40381054, 0x00000109},
-	{0x4038105c, 0x00000000},
-	{0x40381064, 0x00000001},
-	{0x4038106c, 0x00000008},
-	{0x40381074, 0x00000008},
-	{0x4038107c, 0x00000004},
-	{0x40381084, 0x00000000},
-	{0x40380c84, 0x00000008},
-	{0x40380c9c, 0x000007c8},
-	{0x40380cb4, 0x00000109},
-	{0x40380ccc, 0x00000000},
-	{0x40380cd4, 0x00000400},
-	{0x40380cdc, 0x00000106},
-	{0x40380424, 0x00000400},
-	{0x40380d30, 0x00000000},
-	{0x40380d70, 0x00000029},
-	{0x40380da8, 0x00000068},
-	{0x40380314, 0x00000000},
-	{0x40380318, 0x00000101},
-	{0x4038031c, 0x00000105},
-	{0x40380320, 0x00000107},
-	{0x40380324, 0x0000010f},
-	{0x40380328, 0x00000202},
-	{0x4038032c, 0x0000020a},
-	{0x40380330, 0x0000020b},
-	{0x403814fc, 0x00000002},
-	{0x40381330, 0x00000064},
-	{0x40381340, 0x000000c8},
-	{0x40381350, 0x000007d0},
-	{0x40381360, 0x0000002c},
-	{0x40380ce4, 0x00000000},
-	{0x40380cec, 0x00000173},
-	{0x40380cf4, 0x00000060},
-	{0x40380cfc, 0x00006110},
-	{0x40380d04, 0x00002152},
-	{0x40380d0c, 0x0000dfbd},
-	{0x40380d14, 0x00002060},
-	{0x40380d1c, 0x00006152},
-	{0x40381374, 0x0000005a},
-	{0x40381388, 0x00000003},
-	{0x40380200, 0x000000e0},
-	{0x40380210, 0x00000012},
-	{0x40380220, 0x000000e0},
-	{0x40380230, 0x00000012},
-	{0x40380240, 0x000000e0},
-	{0x40380250, 0x00000012},
-	{0x403803c8, 0x0000000f},
-	{0x4039444c, 0x00000001},
-	{0x40394450, 0x00000001},
-	{0x40394454, 0x00000180},
-	{0x40394460, 0x00000001},
-	{0x40394434, 0x00006209},
-	{0x40394884, 0x00000001},
-	{0x403948d0, 0x00000001},
-	{0x403948d4, 0x00000001},
-	{0x403948d8, 0x00000001},
-	{0x403948dc, 0x00000001},
-	{0x403948e0, 0x00000001},
-	{0x403948e4, 0x00000001},
-	{0x403948e8, 0x00000001},
-	{0x403948ec, 0x00000001},
-	{0x4039644c, 0x00000001},
-	{0x40396450, 0x00000001},
-	{0x40396454, 0x00000180},
-	{0x40396460, 0x00000001},
-	{0x40396434, 0x00006209},
-	{0x40396884, 0x00000001},
-	{0x403968d0, 0x00000001},
-	{0x403968d4, 0x00000001},
-	{0x403968d8, 0x00000001},
-	{0x403968dc, 0x00000001},
-	{0x403968e0, 0x00000001},
-	{0x403968e4, 0x00000001},
-	{0x403968e8, 0x00000001},
-	{0x403968ec, 0x00000001},
-	{0x4039844c, 0x00000001},
-	{0x40398450, 0x00000001},
-	{0x40398454, 0x00000180},
-	{0x40398460, 0x00000001},
-	{0x40398434, 0x00006209},
-	{0x40398884, 0x00000001},
-	{0x403988d0, 0x00000001},
-	{0x403988d4, 0x00000001},
-	{0x403988d8, 0x00000001},
-	{0x403988dc, 0x00000001},
-	{0x403988e0, 0x00000001},
-	{0x403988e4, 0x00000001},
-	{0x403988e8, 0x00000001},
-	{0x403988ec, 0x00000001},
-	{0x4039a44c, 0x00000001},
-	{0x4039a450, 0x00000001},
-	{0x4039a454, 0x00000180},
-	{0x4039a460, 0x00000001},
-	{0x4039a434, 0x00006209},
-	{0x4039a884, 0x00000001},
-	{0x4039a8d0, 0x00000001},
-	{0x4039a8d4, 0x00000001},
-	{0x4039a8d8, 0x00000001},
-	{0x4039a8dc, 0x00000001},
-	{0x4039a8e0, 0x00000001},
-	{0x4039a8e4, 0x00000001},
-	{0x4039a8e8, 0x00000001},
-	{0x4039a8ec, 0x00000001},
-	{0x40381644, 0x00000001},
-	{0x40381640, 0x00000019},
-	{0x40380bec, 0x00000002},
-};
-
-size_t pie_cfg_size_rev2 = sizeof(pie_cfg_rev2) / sizeof(struct regconf);
-- 
2.17.1

