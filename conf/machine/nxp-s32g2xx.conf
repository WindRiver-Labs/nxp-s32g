#@TYPE: Machine
#@NAME: nxp-s32g2xx
#@DESCRIPTION: Machine configuration for NXP S32G274A SoC

DEFAULTTUNE = "cortexa53"
require conf/machine/include/tune-cortexa53.inc

MACHINE_FEATURES = "ext3 pci usbgadget usbhost vfat"

KERNEL_IMAGETYPE = ""
KERNEL_IMAGETYPES = " ${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', 'fitImage', 'Image.gz Image', d)}"
KERNEL_DEVICETREE = "freescale/fsl-s32g274a-evb.dtb \
                     ${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', '', 'freescale/fsl-s32g274a-rdb2.dtb', d)} \
"

SERIAL_CONSOLES ?= "115200;ttyLF0"
SERIAL_CONSOLES_CHECK ?= "${SERIAL_CONSOLES}"

IMAGE_FSTYPES += "tar.bz2"

# multilib support
MULTILIBS ?= "multilib:lib32"
DEFAULTTUNE_virtclass-multilib-lib32 ?= "armv7athf-neon"
EXTRA_IMAGECMD_jffs2 = "--pad --no-cleanmarkers --eraseblock=128"

UBOOT_CONFIG ??= "s32g274ardb2 s32g274aevb"

S32G274AEVB_UBOOT_DEFCONFIG_NAME = "${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', 's32g274aevb_defconfig', 's32g2xxaevb_defconfig', d)}"
S32G274ARDB2_UBOOT_DEFCONFIG_NAME = "${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', '', 's32g274ardb2_defconfig', d)}"
UBOOT_CONFIG[s32g274aevb] = "${S32G274AEVB_UBOOT_DEFCONFIG_NAME}"
UBOOT_CONFIG[s32g274ardb2] = "${S32G274ARDB2_UBOOT_DEFCONFIG_NAME}"

UBOOT_MAKE_TARGET ?= "u-boot.s32"
UBOOT_BINARY = "u-boot.s32"
PREFERRED_VERSION_u-boot-s32 ?= "2020.04"
PREFERRED_PROVIDER_virtual/bootloader = "u-boot-s32"
MULTI_PROVIDER_WHITELIST += "virtual/bootloader"

WIC_CREATE_EXTRA_ARGS = "--no-fstab-update"
MACHINE_EXTRA_RRECOMMENDS = " kernel-modules kernel-devicetree"
IMAGE_FSTYPES += "tar.bz2 wic wic.bmap"
WKS_FILE ?= "s32g2xx-sdimage-bootpart.wks"
IMAGE_INSTALL_append = " ${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', 'kernel-devicetree kernel-image-fitimage', 'kernel-devicetree kernel-image-image', d)}"
do_image_wic[depends] += "mtools-native:do_populate_sysroot dosfstools-native:do_populate_sysroot"
IMAGE_BOOT_FILES ?= " ${@bb.utils.contains('UBOOT_SIGN_ENABLE', '1', 'fitImage', 'Image fsl-s32g274a-evb.dtb fsl-s32g274a-rdb2.dtb', d)}"
IMAGE_BOOT_FILES_append = " ${@bb.utils.contains('IMAGE_INSTALL', 'pfe', 's32g_pfe_class.fw s32g_pfe_util.fw', '', d)}"

# Enable ATF
require conf/machine/include/atf.inc
PREFERRED_PROVIDER_virtual/atf-s32g ?= " ${@bb.utils.contains('ATF_S32G_ENABLE', '1', 'atf-s32g', '', d)}"
PREFERRED_PROVIDER_virtual/kernel ??= "linux-yocto"
PREFERRED_VERSION_linux-yocto ?= "5.10%"

# For ostree
INITRAMFS_IMAGE ??= ""
IMAGE_BOOT_FILES_append =  "${@bb.utils.contains('DISTRO_FEATURES', 'ostree', '${INITRAMFS_IMAGE}-${MACHINE}.${INITRAMFS_FSTYPES};initramfs boot.scr', '', d)} \
"
OSTREE_KERNEL ?= "Image"
DEFAULT_DTB ?= "fsl-s32g274a-rdb2.dtb"
OSTREE_COPY_IMAGE_BOOT_FILES = "1"
OSTREE_UBOOT_CMD ?= "booti"

# For ustart.img
OSTREE_NETINST_DEV ?= "/dev/mmcblk0,/dev/sda,/dev/vda"
OSTREE_NETINST_ARGS ?= "${OSTREE_CONSOLE} bl=ufsd rdinit=/install instdev=${OSTREE_NETINST_DEV} instname=wrlinux instbr=\$BRANCH insturl=\$URL instab=${OSTREE_USE_AB} instsf=1 instdate=BUILD_DATE"
